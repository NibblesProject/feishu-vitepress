{
  "version": 3,
  "sources": ["../../../../node_modules/src/helpers.ts", "../../../../node_modules/src/debug-build.ts", "../../../../node_modules/src/eventbuilder.ts", "../../../../node_modules/src/userfeedback.ts", "../../../../node_modules/src/client.ts", "../../../../node_modules/src/transports/utils.ts", "../../../../node_modules/src/transports/fetch.ts", "../../../../node_modules/src/transports/xhr.ts", "../../../../node_modules/src/stack-parsers.ts", "../../../../node_modules/src/integrations/breadcrumbs.ts", "../../../../node_modules/src/integrations/dedupe.ts", "../../../../node_modules/src/integrations/globalhandlers.ts", "../../../../node_modules/src/integrations/httpcontext.ts", "../../../../node_modules/src/integrations/linkederrors.ts", "../../../../node_modules/src/integrations/trycatch.ts", "../../../../node_modules/src/sdk.ts", "../../../../node_modules/src/constants.ts", "../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb-snapshot/es/rrweb-snapshot.js", "../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/utils.js", "../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/types/dist/rrweb-types.js", "../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/mutation.js", "../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/error-handler.js", "../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/observer.js", "../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/cross-origin-iframe-mirror.js", "../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/iframe-manager.js", "../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/shadow-dom-manager.js", "../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/observers/canvas/canvas-manager.js", "../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/stylesheet-manager.js", "../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/processed-node-manager.js", "../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/index.js", "../../../../node_modules/src/types/rrweb.ts", "../../../../node_modules/src/util/timestamp.ts", "../../../../node_modules/src/coreHandlers/util/addBreadcrumbEvent.ts", "../../../../node_modules/src/coreHandlers/util/domUtils.ts", "../../../../node_modules/src/coreHandlers/util/onWindowOpen.ts", "../../../../node_modules/src/coreHandlers/handleClick.ts", "../../../../node_modules/src/util/createBreadcrumb.ts", "../../../../../node_modules/@sentry-internal/rrweb-snapshot/es/rrweb-snapshot.js", "../../../../node_modules/src/coreHandlers/util/getAttributesToRecord.ts", "../../../../node_modules/src/coreHandlers/handleDom.ts", "../../../../node_modules/src/coreHandlers/handleKeyboardEvent.ts", "../../../../node_modules/src/util/createPerformanceEntries.ts", "../../../../node_modules/src/coreHandlers/performanceObserver.ts", "../../../../node_modules/src/debug-build.ts", "../../../../replay-worker/build/npm/esm/worker.ts", "../../../../replay-worker/build/npm/esm/index.js", "../../../../node_modules/src/util/log.ts", "../../../../node_modules/src/eventBuffer/error.ts", "../../../../node_modules/src/eventBuffer/EventBufferArray.ts", "../../../../node_modules/src/eventBuffer/WorkerHandler.ts", "../../../../node_modules/src/eventBuffer/EventBufferCompressionWorker.ts", "../../../../node_modules/src/eventBuffer/EventBufferProxy.ts", "../../../../node_modules/src/eventBuffer/index.ts", "../../../../node_modules/src/util/hasSessionStorage.ts", "../../../../node_modules/src/session/clearSession.ts", "../../../../node_modules/src/util/isSampled.ts", "../../../../node_modules/src/session/Session.ts", "../../../../node_modules/src/session/saveSession.ts", "../../../../node_modules/src/session/createSession.ts", "../../../../node_modules/src/session/fetchSession.ts", "../../../../node_modules/src/util/isExpired.ts", "../../../../node_modules/src/util/isSessionExpired.ts", "../../../../node_modules/src/session/shouldRefreshSession.ts", "../../../../node_modules/src/session/loadOrCreateSession.ts", "../../../../node_modules/src/util/addEvent.ts", "../../../../node_modules/src/util/eventUtils.ts", "../../../../node_modules/src/coreHandlers/handleAfterSendEvent.ts", "../../../../node_modules/src/coreHandlers/handleBeforeSendEvent.ts", "../../../../node_modules/src/util/isRrwebError.ts", "../../../../node_modules/src/coreHandlers/util/addFeedbackBreadcrumb.ts", "../../../../node_modules/src/coreHandlers/util/shouldSampleForBufferEvent.ts", "../../../../node_modules/src/coreHandlers/handleGlobalEvent.ts", "../../../../node_modules/src/util/createPerformanceSpans.ts", "../../../../node_modules/src/coreHandlers/handleHistory.ts", "../../../../node_modules/src/util/shouldFilterRequest.ts", "../../../../node_modules/src/coreHandlers/util/addNetworkBreadcrumb.ts", "../../../../node_modules/src/coreHandlers/handleFetch.ts", "../../../../node_modules/src/coreHandlers/handleXhr.ts", "../../../../node_modules/src/coreHandlers/util/networkUtils.ts", "../../../../node_modules/src/coreHandlers/util/fetchUtils.ts", "../../../../node_modules/src/coreHandlers/util/xhrUtils.ts", "../../../../node_modules/src/coreHandlers/handleNetworkBreadcrumbs.ts", "../../../../node_modules/src/coreHandlers/handleScope.ts", "../../../../node_modules/src/util/addGlobalListeners.ts", "../../../../node_modules/src/util/addMemoryEntry.ts", "../../../../node_modules/src/util/debounce.ts", "../../../../node_modules/src/util/handleRecordingEmit.ts", "../../../../node_modules/src/util/createReplayEnvelope.ts", "../../../../node_modules/src/util/prepareRecordingData.ts", "../../../../node_modules/src/util/prepareReplayEvent.ts", "../../../../node_modules/src/util/sendReplayRequest.ts", "../../../../node_modules/src/util/sendReplay.ts", "../../../../node_modules/src/util/throttle.ts", "../../../../node_modules/src/replay.ts", "../../../../node_modules/src/util/getPrivacyOptions.ts", "../../../../node_modules/src/util/maskAttribute.ts", "../../../../node_modules/src/integration.ts", "../../../../node_modules/src/util/getReplay.ts", "../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb-snapshot/es/rrweb-snapshot.js", "../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/utils.js", "../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/types/dist/rrweb-types.js", "../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/error-handler.js", "../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/ext/base64-arraybuffer/dist/base64-arraybuffer.es5.js", "../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/observers/canvas/serialize-args.js", "../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/observers/canvas/2d.js", "../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/observers/canvas/canvas.js", "../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/observers/canvas/webgl.js", "../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb-worker/es/rrweb-worker/image-bitmap-data-url-worker.js", "../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb-worker/es/rrweb-worker/index.js", "../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/observers/canvas/canvas-manager.js", "../../../../node_modules/src/canvas.ts", "../../../../node_modules/src/constants.ts", "../../../../node_modules/src/util/prepareFeedbackEvent.ts", "../../../../node_modules/src/util/sendFeedbackRequest.ts", "../../../../node_modules/src/sendFeedback.ts", "../../../../node_modules/src/debug-build.ts", "../../../../node_modules/src/util/mergeOptions.ts", "../../../../node_modules/src/widget/Actor.css.ts", "../../../../node_modules/src/widget/Dialog.css.ts", "../../../../node_modules/src/widget/Main.css.ts", "../../../../node_modules/src/widget/createShadowHost.ts", "../../../../node_modules/src/util/handleFeedbackSubmit.ts", "../../../../node_modules/src/util/setAttributesNS.ts", "../../../../node_modules/src/widget/Icon.ts", "../../../../node_modules/src/widget/util/createElement.ts", "../../../../node_modules/src/widget/Actor.ts", "../../../../node_modules/src/widget/SubmitButton.ts", "../../../../node_modules/src/widget/Form.ts", "../../../../node_modules/src/widget/Logo.ts", "../../../../node_modules/src/widget/Dialog.ts", "../../../../node_modules/src/widget/SuccessIcon.ts", "../../../../node_modules/src/widget/SuccessMessage.ts", "../../../../node_modules/src/widget/createWidget.ts", "../../../../node_modules/src/integration.ts", "../../../../node_modules/src/transports/offline.ts", "../../../../node_modules/src/profiling/utils.ts", "../../../../node_modules/src/profiling/hubextensions.ts", "../../../../node_modules/src/profiling/integration.ts", "../../../../node_modules/src/index.ts", "../../../../node_modules/@sentry/src/constants.ts", "../../../../node_modules/@sentry/src/vendor/components.ts", "../../../../node_modules/@sentry/src/errorhandler.ts", "../../../../node_modules/@sentry/src/debug-build.ts", "../../../../node_modules/@sentry/src/tracing.ts", "../../../../node_modules/@sentry/src/integration.ts", "../../../../node_modules/@sentry/src/sdk.ts", "../../../../node_modules/@sentry/src/router.ts", "../../../../node_modules/@sentry/src/browserTracingIntegration.ts"],
  "sourcesContent": ["import type { browserTracingIntegration } from '@sentry-internal/tracing';\nimport { BrowserTracing } from '@sentry-internal/tracing';\nimport { captureException, withScope } from '@sentry/core';\nimport type { DsnLike, Integration, Mechanism, WrappedFunction } from '@sentry/types';\nimport {\n  GLOBAL_OBJ,\n  addExceptionMechanism,\n  addExceptionTypeValue,\n  addNonEnumerableProperty,\n  getOriginalFunction,\n  markFunctionWrapped,\n} from '@sentry/utils';\n\nexport const WINDOW = GLOBAL_OBJ as typeof GLOBAL_OBJ & Window;\n\nlet ignoreOnError: number = 0;\n\n/**\n * @hidden\n */\nexport function shouldIgnoreOnError(): boolean {\n  return ignoreOnError > 0;\n}\n\n/**\n * @hidden\n */\nexport function ignoreNextOnError(): void {\n  // onerror should trigger before setTimeout\n  ignoreOnError++;\n  setTimeout(() => {\n    ignoreOnError--;\n  });\n}\n\n/**\n * Instruments the given function and sends an event to Sentry every time the\n * function throws an exception.\n *\n * @param fn A function to wrap. It is generally safe to pass an unbound function, because the returned wrapper always\n * has a correct `this` context.\n * @returns The wrapped function.\n * @hidden\n */\nexport function wrap(\n  fn: WrappedFunction,\n  options: {\n    mechanism?: Mechanism;\n  } = {},\n  before?: WrappedFunction,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n): any {\n  // for future readers what this does is wrap a function and then create\n  // a bi-directional wrapping between them.\n  //\n  // example: wrapped = wrap(original);\n  //  original.__sentry_wrapped__ -> wrapped\n  //  wrapped.__sentry_original__ -> original\n\n  if (typeof fn !== 'function') {\n    return fn;\n  }\n\n  try {\n    // if we're dealing with a function that was previously wrapped, return\n    // the original wrapper.\n    const wrapper = fn.__sentry_wrapped__;\n    if (wrapper) {\n      return wrapper;\n    }\n\n    // We don't wanna wrap it twice\n    if (getOriginalFunction(fn)) {\n      return fn;\n    }\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    // Bail on wrapping and return the function as-is (defers to window.onerror).\n    return fn;\n  }\n\n  /* eslint-disable prefer-rest-params */\n  // It is important that `sentryWrapped` is not an arrow function to preserve the context of `this`\n  const sentryWrapped: WrappedFunction = function (this: unknown): void {\n    const args = Array.prototype.slice.call(arguments);\n\n    try {\n      if (before && typeof before === 'function') {\n        before.apply(this, arguments);\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access\n      const wrappedArguments = args.map((arg: any) => wrap(arg, options));\n\n      // Attempt to invoke user-land function\n      // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n      //       means the sentry.javascript SDK caught an error invoking your application code. This\n      //       is expected behavior and NOT indicative of a bug with sentry.javascript.\n      return fn.apply(this, wrappedArguments);\n    } catch (ex) {\n      ignoreNextOnError();\n\n      withScope(scope => {\n        scope.addEventProcessor(event => {\n          if (options.mechanism) {\n            addExceptionTypeValue(event, undefined, undefined);\n            addExceptionMechanism(event, options.mechanism);\n          }\n\n          event.extra = {\n            ...event.extra,\n            arguments: args,\n          };\n\n          return event;\n        });\n\n        captureException(ex);\n      });\n\n      throw ex;\n    }\n  };\n  /* eslint-enable prefer-rest-params */\n\n  // Accessing some objects may throw\n  // ref: https://github.com/getsentry/sentry-javascript/issues/1168\n  try {\n    for (const property in fn) {\n      if (Object.prototype.hasOwnProperty.call(fn, property)) {\n        sentryWrapped[property] = fn[property];\n      }\n    }\n  } catch (_oO) {} // eslint-disable-line no-empty\n\n  // Signal that this function has been wrapped/filled already\n  // for both debugging and to prevent it to being wrapped/filled twice\n  markFunctionWrapped(sentryWrapped, fn);\n\n  addNonEnumerableProperty(fn, '__sentry_wrapped__', sentryWrapped);\n\n  // Restore original function name (not all browsers allow that)\n  try {\n    const descriptor = Object.getOwnPropertyDescriptor(sentryWrapped, 'name') as PropertyDescriptor;\n    if (descriptor.configurable) {\n      Object.defineProperty(sentryWrapped, 'name', {\n        get(): string {\n          return fn.name;\n        },\n      });\n    }\n    // eslint-disable-next-line no-empty\n  } catch (_oO) {}\n\n  return sentryWrapped;\n}\n\n/**\n * All properties the report dialog supports\n *\n * @deprecated This type will be removed in the next major version of the Sentry SDK. `showReportDialog` will still be around, however the `eventId` option will now be required.\n */\nexport interface ReportDialogOptions {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  [key: string]: any;\n  eventId?: string;\n  dsn?: DsnLike;\n  user?: {\n    email?: string;\n    name?: string;\n  };\n  lang?: string;\n  title?: string;\n  subtitle?: string;\n  subtitle2?: string;\n  labelName?: string;\n  labelEmail?: string;\n  labelComments?: string;\n  labelClose?: string;\n  labelSubmit?: string;\n  errorGeneric?: string;\n  errorFormEntry?: string;\n  successMessage?: string;\n  /** Callback after reportDialog showed up */\n  onLoad?(this: void): void;\n  /** Callback after reportDialog closed */\n  onClose?(this: void): void;\n}\n\n/**\n * This is a slim shim of `browserTracingIntegration` for the CDN bundles.\n * Since the actual functional integration uses a different code from `BrowserTracing`,\n * we want to avoid shipping both of them in the CDN bundles, as that would blow up the size.\n * Instead, we provide a functional integration with the same API, but the old implementation.\n * This means that it's not possible to register custom routing instrumentation, but that's OK for now.\n * We also don't expose the utilities for this anyhow in the CDN bundles.\n * For users that need custom routing in CDN bundles, they have to continue using `new BrowserTracing()` until v8.\n */\nexport function bundleBrowserTracingIntegration(\n  options: Parameters<typeof browserTracingIntegration>[0] = {},\n): Integration {\n  // Migrate some options from the old integration to the new one\n  // eslint-disable-next-line deprecation/deprecation\n  const opts: ConstructorParameters<typeof BrowserTracing>[0] = options;\n\n  if (typeof options.markBackgroundSpan === 'boolean') {\n    opts.markBackgroundTransactions = options.markBackgroundSpan;\n  }\n\n  if (typeof options.instrumentPageLoad === 'boolean') {\n    opts.startTransactionOnPageLoad = options.instrumentPageLoad;\n  }\n\n  if (typeof options.instrumentNavigation === 'boolean') {\n    opts.startTransactionOnLocationChange = options.instrumentNavigation;\n  }\n\n  // eslint-disable-next-line deprecation/deprecation\n  return new BrowserTracing(opts);\n}\n", "declare const __DEBUG_BUILD__: boolean;\n\n/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nexport const DEBUG_BUILD = __DEBUG_BUILD__;\n", "import { getClient } from '@sentry/core';\nimport type {\n  Event,\n  EventHint,\n  Exception,\n  ParameterizedString,\n  Severity,\n  SeverityLevel,\n  StackFrame,\n  StackParser,\n} from '@sentry/types';\nimport {\n  addExceptionMechanism,\n  addExceptionTypeValue,\n  extractExceptionKeysForMessage,\n  isDOMError,\n  isDOMException,\n  isError,\n  isErrorEvent,\n  isEvent,\n  isParameterizedString,\n  isPlainObject,\n  normalizeToSize,\n  resolvedSyncPromise,\n} from '@sentry/utils';\n\ntype Prototype = { constructor: (...args: unknown[]) => unknown };\n\n/**\n * This function creates an exception from a JavaScript Error\n */\nexport function exceptionFromError(stackParser: StackParser, ex: Error): Exception {\n  // Get the frames first since Opera can lose the stack if we touch anything else first\n  const frames = parseStackFrames(stackParser, ex);\n\n  const exception: Exception = {\n    type: ex && ex.name,\n    value: extractMessage(ex),\n  };\n\n  if (frames.length) {\n    exception.stacktrace = { frames };\n  }\n\n  if (exception.type === undefined && exception.value === '') {\n    exception.value = 'Unrecoverable error caught';\n  }\n\n  return exception;\n}\n\n/**\n * @hidden\n */\nexport function eventFromPlainObject(\n  stackParser: StackParser,\n  exception: Record<string, unknown>,\n  syntheticException?: Error,\n  isUnhandledRejection?: boolean,\n): Event {\n  const client = getClient();\n  const normalizeDepth = client && client.getOptions().normalizeDepth;\n\n  const event: Event = {\n    exception: {\n      values: [\n        {\n          type: isEvent(exception) ? exception.constructor.name : isUnhandledRejection ? 'UnhandledRejection' : 'Error',\n          value: getNonErrorObjectExceptionValue(exception, { isUnhandledRejection }),\n        },\n      ],\n    },\n    extra: {\n      __serialized__: normalizeToSize(exception, normalizeDepth),\n    },\n  };\n\n  if (syntheticException) {\n    const frames = parseStackFrames(stackParser, syntheticException);\n    if (frames.length) {\n      // event.exception.values[0] has been set above\n      (event.exception as { values: Exception[] }).values[0].stacktrace = { frames };\n    }\n  }\n\n  return event;\n}\n\n/**\n * @hidden\n */\nexport function eventFromError(stackParser: StackParser, ex: Error): Event {\n  return {\n    exception: {\n      values: [exceptionFromError(stackParser, ex)],\n    },\n  };\n}\n\n/** Parses stack frames from an error */\nexport function parseStackFrames(\n  stackParser: StackParser,\n  ex: Error & { framesToPop?: number; stacktrace?: string },\n): StackFrame[] {\n  // Access and store the stacktrace property before doing ANYTHING\n  // else to it because Opera is not very good at providing it\n  // reliably in other circumstances.\n  const stacktrace = ex.stacktrace || ex.stack || '';\n\n  const popSize = getPopSize(ex);\n\n  try {\n    return stackParser(stacktrace, popSize);\n  } catch (e) {\n    // no-empty\n  }\n\n  return [];\n}\n\n// Based on our own mapping pattern - https://github.com/getsentry/sentry/blob/9f08305e09866c8bd6d0c24f5b0aabdd7dd6c59c/src/sentry/lang/javascript/errormapping.py#L83-L108\nconst reactMinifiedRegexp = /Minified React error #\\d+;/i;\n\nfunction getPopSize(ex: Error & { framesToPop?: number }): number {\n  if (ex) {\n    if (typeof ex.framesToPop === 'number') {\n      return ex.framesToPop;\n    }\n\n    if (reactMinifiedRegexp.test(ex.message)) {\n      return 1;\n    }\n  }\n\n  return 0;\n}\n\n/**\n * There are cases where stacktrace.message is an Event object\n * https://github.com/getsentry/sentry-javascript/issues/1949\n * In this specific case we try to extract stacktrace.message.error.message\n */\nfunction extractMessage(ex: Error & { message: { error?: Error } }): string {\n  const message = ex && ex.message;\n  if (!message) {\n    return 'No error message';\n  }\n  if (message.error && typeof message.error.message === 'string') {\n    return message.error.message;\n  }\n  return message;\n}\n\n/**\n * Creates an {@link Event} from all inputs to `captureException` and non-primitive inputs to `captureMessage`.\n * @hidden\n */\nexport function eventFromException(\n  stackParser: StackParser,\n  exception: unknown,\n  hint?: EventHint,\n  attachStacktrace?: boolean,\n): PromiseLike<Event> {\n  const syntheticException = (hint && hint.syntheticException) || undefined;\n  const event = eventFromUnknownInput(stackParser, exception, syntheticException, attachStacktrace);\n  addExceptionMechanism(event); // defaults to { type: 'generic', handled: true }\n  event.level = 'error';\n  if (hint && hint.event_id) {\n    event.event_id = hint.event_id;\n  }\n  return resolvedSyncPromise(event);\n}\n\n/**\n * Builds and Event from a Message\n * @hidden\n */\nexport function eventFromMessage(\n  stackParser: StackParser,\n  message: ParameterizedString,\n  // eslint-disable-next-line deprecation/deprecation\n  level: Severity | SeverityLevel = 'info',\n  hint?: EventHint,\n  attachStacktrace?: boolean,\n): PromiseLike<Event> {\n  const syntheticException = (hint && hint.syntheticException) || undefined;\n  const event = eventFromString(stackParser, message, syntheticException, attachStacktrace);\n  event.level = level;\n  if (hint && hint.event_id) {\n    event.event_id = hint.event_id;\n  }\n  return resolvedSyncPromise(event);\n}\n\n/**\n * @hidden\n */\nexport function eventFromUnknownInput(\n  stackParser: StackParser,\n  exception: unknown,\n  syntheticException?: Error,\n  attachStacktrace?: boolean,\n  isUnhandledRejection?: boolean,\n): Event {\n  let event: Event;\n\n  if (isErrorEvent(exception as ErrorEvent) && (exception as ErrorEvent).error) {\n    // If it is an ErrorEvent with `error` property, extract it to get actual Error\n    const errorEvent = exception as ErrorEvent;\n    return eventFromError(stackParser, errorEvent.error as Error);\n  }\n\n  // If it is a `DOMError` (which is a legacy API, but still supported in some browsers) then we just extract the name\n  // and message, as it doesn't provide anything else. According to the spec, all `DOMExceptions` should also be\n  // `Error`s, but that's not the case in IE11, so in that case we treat it the same as we do a `DOMError`.\n  //\n  // https://developer.mozilla.org/en-US/docs/Web/API/DOMError\n  // https://developer.mozilla.org/en-US/docs/Web/API/DOMException\n  // https://webidl.spec.whatwg.org/#es-DOMException-specialness\n  if (isDOMError(exception) || isDOMException(exception as DOMException)) {\n    const domException = exception as DOMException;\n\n    if ('stack' in (exception as Error)) {\n      event = eventFromError(stackParser, exception as Error);\n    } else {\n      const name = domException.name || (isDOMError(domException) ? 'DOMError' : 'DOMException');\n      const message = domException.message ? `${name}: ${domException.message}` : name;\n      event = eventFromString(stackParser, message, syntheticException, attachStacktrace);\n      addExceptionTypeValue(event, message);\n    }\n    if ('code' in domException) {\n      // eslint-disable-next-line deprecation/deprecation\n      event.tags = { ...event.tags, 'DOMException.code': `${domException.code}` };\n    }\n\n    return event;\n  }\n  if (isError(exception)) {\n    // we have a real Error object, do nothing\n    return eventFromError(stackParser, exception);\n  }\n  if (isPlainObject(exception) || isEvent(exception)) {\n    // If it's a plain object or an instance of `Event` (the built-in JS kind, not this SDK's `Event` type), serialize\n    // it manually. This will allow us to group events based on top-level keys which is much better than creating a new\n    // group on any key/value change.\n    const objectException = exception as Record<string, unknown>;\n    event = eventFromPlainObject(stackParser, objectException, syntheticException, isUnhandledRejection);\n    addExceptionMechanism(event, {\n      synthetic: true,\n    });\n    return event;\n  }\n\n  // If none of previous checks were valid, then it means that it's not:\n  // - an instance of DOMError\n  // - an instance of DOMException\n  // - an instance of Event\n  // - an instance of Error\n  // - a valid ErrorEvent (one with an error property)\n  // - a plain Object\n  //\n  // So bail out and capture it as a simple message:\n  event = eventFromString(stackParser, exception as string, syntheticException, attachStacktrace);\n  addExceptionTypeValue(event, `${exception}`, undefined);\n  addExceptionMechanism(event, {\n    synthetic: true,\n  });\n\n  return event;\n}\n\n/**\n * @hidden\n */\nexport function eventFromString(\n  stackParser: StackParser,\n  message: ParameterizedString,\n  syntheticException?: Error,\n  attachStacktrace?: boolean,\n): Event {\n  const event: Event = {};\n\n  if (attachStacktrace && syntheticException) {\n    const frames = parseStackFrames(stackParser, syntheticException);\n    if (frames.length) {\n      event.exception = {\n        values: [{ value: message, stacktrace: { frames } }],\n      };\n    }\n  }\n\n  if (isParameterizedString(message)) {\n    const { __sentry_template_string__, __sentry_template_values__ } = message;\n\n    event.logentry = {\n      message: __sentry_template_string__,\n      params: __sentry_template_values__,\n    };\n    return event;\n  }\n\n  event.message = message;\n  return event;\n}\n\nfunction getNonErrorObjectExceptionValue(\n  exception: Record<string, unknown>,\n  { isUnhandledRejection }: { isUnhandledRejection?: boolean },\n): string {\n  const keys = extractExceptionKeysForMessage(exception);\n  const captureType = isUnhandledRejection ? 'promise rejection' : 'exception';\n\n  // Some ErrorEvent instances do not have an `error` property, which is why they are not handled before\n  // We still want to try to get a decent message for these cases\n  if (isErrorEvent(exception)) {\n    return `Event \\`ErrorEvent\\` captured as ${captureType} with message \\`${exception.message}\\``;\n  }\n\n  if (isEvent(exception)) {\n    const className = getObjectClassName(exception);\n    return `Event \\`${className}\\` (type=${exception.type}) captured as ${captureType}`;\n  }\n\n  return `Object captured as ${captureType} with keys: ${keys}`;\n}\n\nfunction getObjectClassName(obj: unknown): string | undefined | void {\n  try {\n    const prototype: Prototype | null = Object.getPrototypeOf(obj);\n    return prototype ? prototype.constructor.name : undefined;\n  } catch (e) {\n    // ignore errors here\n  }\n}\n", "import type { DsnComponents, EventEnvelope, SdkMetadata, UserFeedback, UserFeedbackItem } from '@sentry/types';\nimport { createEnvelope, dsnToString } from '@sentry/utils';\n\n/**\n * Creates an envelope from a user feedback.\n */\nexport function createUserFeedbackEnvelope(\n  feedback: UserFeedback,\n  {\n    metadata,\n    tunnel,\n    dsn,\n  }: {\n    metadata: SdkMetadata | undefined;\n    tunnel: string | undefined;\n    dsn: DsnComponents | undefined;\n  },\n): EventEnvelope {\n  const headers: EventEnvelope[0] = {\n    event_id: feedback.event_id,\n    sent_at: new Date().toISOString(),\n    ...(metadata &&\n      metadata.sdk && {\n        sdk: {\n          name: metadata.sdk.name,\n          version: metadata.sdk.version,\n        },\n      }),\n    ...(!!tunnel && !!dsn && { dsn: dsnToString(dsn) }),\n  };\n  const item = createUserFeedbackEnvelopeItem(feedback);\n\n  return createEnvelope(headers, [item]);\n}\n\nfunction createUserFeedbackEnvelopeItem(feedback: UserFeedback): UserFeedbackItem {\n  const feedbackHeaders: UserFeedbackItem[0] = {\n    type: 'user_report',\n  };\n  return [feedbackHeaders, feedback];\n}\n", "import type { Scope } from '@sentry/core';\nimport { applySdkMetadata } from '@sentry/core';\nimport { BaseClient } from '@sentry/core';\nimport type {\n  BrowserClientProfilingOptions,\n  BrowserClientReplayOptions,\n  ClientOptions,\n  Event,\n  EventHint,\n  Options,\n  ParameterizedString,\n  Severity,\n  SeverityLevel,\n  UserFeedback,\n} from '@sentry/types';\nimport { createClientReportEnvelope, dsnToString, getSDKSource, logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from './debug-build';\nimport { eventFromException, eventFromMessage } from './eventbuilder';\nimport { WINDOW } from './helpers';\nimport type { BrowserTransportOptions } from './transports/types';\nimport { createUserFeedbackEnvelope } from './userfeedback';\n\n/**\n * Configuration options for the Sentry Browser SDK.\n * @see @sentry/types Options for more information.\n */\nexport type BrowserOptions = Options<BrowserTransportOptions> &\n  BrowserClientReplayOptions &\n  BrowserClientProfilingOptions;\n\n/**\n * Configuration options for the Sentry Browser SDK Client class\n * @see BrowserClient for more information.\n */\nexport type BrowserClientOptions = ClientOptions<BrowserTransportOptions> &\n  BrowserClientReplayOptions &\n  BrowserClientProfilingOptions;\n\n/**\n * The Sentry Browser SDK Client.\n *\n * @see BrowserOptions for documentation on configuration options.\n * @see SentryClient for usage documentation.\n */\nexport class BrowserClient extends BaseClient<BrowserClientOptions> {\n  /**\n   * Creates a new Browser SDK instance.\n   *\n   * @param options Configuration options for this SDK.\n   */\n  public constructor(options: BrowserClientOptions) {\n    const sdkSource = WINDOW.SENTRY_SDK_SOURCE || getSDKSource();\n    applySdkMetadata(options, 'browser', ['browser'], sdkSource);\n\n    super(options);\n\n    if (options.sendClientReports && WINDOW.document) {\n      WINDOW.document.addEventListener('visibilitychange', () => {\n        if (WINDOW.document.visibilityState === 'hidden') {\n          this._flushOutcomes();\n        }\n      });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public eventFromException(exception: unknown, hint?: EventHint): PromiseLike<Event> {\n    return eventFromException(this._options.stackParser, exception, hint, this._options.attachStacktrace);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public eventFromMessage(\n    message: ParameterizedString,\n    // eslint-disable-next-line deprecation/deprecation\n    level: Severity | SeverityLevel = 'info',\n    hint?: EventHint,\n  ): PromiseLike<Event> {\n    return eventFromMessage(this._options.stackParser, message, level, hint, this._options.attachStacktrace);\n  }\n\n  /**\n   * Sends user feedback to Sentry.\n   */\n  public captureUserFeedback(feedback: UserFeedback): void {\n    if (!this._isEnabled()) {\n      DEBUG_BUILD && logger.warn('SDK not enabled, will not capture user feedback.');\n      return;\n    }\n\n    const envelope = createUserFeedbackEnvelope(feedback, {\n      metadata: this.getSdkMetadata(),\n      dsn: this.getDsn(),\n      tunnel: this.getOptions().tunnel,\n    });\n\n    // _sendEnvelope should not throw\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this._sendEnvelope(envelope);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  protected _prepareEvent(event: Event, hint: EventHint, scope?: Scope): PromiseLike<Event | null> {\n    event.platform = event.platform || 'javascript';\n    return super._prepareEvent(event, hint, scope);\n  }\n\n  /**\n   * Sends client reports as an envelope.\n   */\n  private _flushOutcomes(): void {\n    const outcomes = this._clearOutcomes();\n\n    if (outcomes.length === 0) {\n      DEBUG_BUILD && logger.log('No outcomes to send');\n      return;\n    }\n\n    // This is really the only place where we want to check for a DSN and only send outcomes then\n    if (!this._dsn) {\n      DEBUG_BUILD && logger.log('No dsn provided, will not send outcomes');\n      return;\n    }\n\n    DEBUG_BUILD && logger.log('Sending outcomes:', outcomes);\n\n    const envelope = createClientReportEnvelope(outcomes, this._options.tunnel && dsnToString(this._dsn));\n\n    // _sendEnvelope should not throw\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this._sendEnvelope(envelope);\n  }\n}\n", "import { isNativeFetch, logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport { WINDOW } from '../helpers';\n\nlet cachedFetchImpl: FetchImpl | undefined = undefined;\n\nexport type FetchImpl = typeof fetch;\n\n/**\n * A special usecase for incorrectly wrapped Fetch APIs in conjunction with ad-blockers.\n * Whenever someone wraps the Fetch API and returns the wrong promise chain,\n * this chain becomes orphaned and there is no possible way to capture it's rejections\n * other than allowing it bubble up to this very handler. eg.\n *\n * const f = window.fetch;\n * window.fetch = function () {\n *   const p = f.apply(this, arguments);\n *\n *   p.then(function() {\n *     console.log('hi.');\n *   });\n *\n *   return p;\n * }\n *\n * `p.then(function () { ... })` is producing a completely separate promise chain,\n * however, what's returned is `p` - the result of original `fetch` call.\n *\n * This mean, that whenever we use the Fetch API to send our own requests, _and_\n * some ad-blocker blocks it, this orphaned chain will _always_ reject,\n * effectively causing another event to be captured.\n * This makes a whole process become an infinite loop, which we need to somehow\n * deal with, and break it in one way or another.\n *\n * To deal with this issue, we are making sure that we _always_ use the real\n * browser Fetch API, instead of relying on what `window.fetch` exposes.\n * The only downside to this would be missing our own requests as breadcrumbs,\n * but because we are already not doing this, it should be just fine.\n *\n * Possible failed fetch error messages per-browser:\n *\n * Chrome:  Failed to fetch\n * Edge:    Failed to Fetch\n * Firefox: NetworkError when attempting to fetch resource\n * Safari:  resource blocked by content blocker\n */\nexport function getNativeFetchImplementation(): FetchImpl {\n  if (cachedFetchImpl) {\n    return cachedFetchImpl;\n  }\n\n  /* eslint-disable @typescript-eslint/unbound-method */\n\n  // Fast path to avoid DOM I/O\n  if (isNativeFetch(WINDOW.fetch)) {\n    return (cachedFetchImpl = WINDOW.fetch.bind(WINDOW));\n  }\n\n  const document = WINDOW.document;\n  let fetchImpl = WINDOW.fetch;\n  // eslint-disable-next-line deprecation/deprecation\n  if (document && typeof document.createElement === 'function') {\n    try {\n      const sandbox = document.createElement('iframe');\n      sandbox.hidden = true;\n      document.head.appendChild(sandbox);\n      const contentWindow = sandbox.contentWindow;\n      if (contentWindow && contentWindow.fetch) {\n        fetchImpl = contentWindow.fetch;\n      }\n      document.head.removeChild(sandbox);\n    } catch (e) {\n      DEBUG_BUILD && logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', e);\n    }\n  }\n\n  return (cachedFetchImpl = fetchImpl.bind(WINDOW));\n  /* eslint-enable @typescript-eslint/unbound-method */\n}\n\n/** Clears cached fetch impl */\nexport function clearCachedFetchImplementation(): void {\n  cachedFetchImpl = undefined;\n}\n", "import { createTransport } from '@sentry/core';\nimport type { Transport, TransportMakeRequestResponse, TransportRequest } from '@sentry/types';\nimport { rejectedSyncPromise } from '@sentry/utils';\n\nimport type { BrowserTransportOptions } from './types';\nimport type { FetchImpl } from './utils';\nimport { clearCachedFetchImplementation, getNativeFetchImplementation } from './utils';\n\n/**\n * Creates a Transport that uses the Fetch API to send events to Sentry.\n */\nexport function makeFetchTransport(\n  options: BrowserTransportOptions,\n  nativeFetch: FetchImpl = getNativeFetchImplementation(),\n): Transport {\n  let pendingBodySize = 0;\n  let pendingCount = 0;\n\n  function makeRequest(request: TransportRequest): PromiseLike<TransportMakeRequestResponse> {\n    const requestSize = request.body.length;\n    pendingBodySize += requestSize;\n    pendingCount++;\n\n    const requestOptions: RequestInit = {\n      body: request.body,\n      method: 'POST',\n      referrerPolicy: 'origin',\n      headers: options.headers,\n      // Outgoing requests are usually cancelled when navigating to a different page, causing a \"TypeError: Failed to\n      // fetch\" error and sending a \"network_error\" client-outcome - in Chrome, the request status shows \"(cancelled)\".\n      // The `keepalive` flag keeps outgoing requests alive, even when switching pages. We want this since we're\n      // frequently sending events right before the user is switching pages (eg. whenfinishing navigation transactions).\n      // Gotchas:\n      // - `keepalive` isn't supported by Firefox\n      // - As per spec (https://fetch.spec.whatwg.org/#http-network-or-cache-fetch):\n      //   If the sum of contentLength and inflightKeepaliveBytes is greater than 64 kibibytes, then return a network error.\n      //   We will therefore only activate the flag when we're below that limit.\n      // There is also a limit of requests that can be open at the same time, so we also limit this to 15\n      // See https://github.com/getsentry/sentry-javascript/pull/7553 for details\n      keepalive: pendingBodySize <= 60_000 && pendingCount < 15,\n      ...options.fetchOptions,\n    };\n\n    try {\n      return nativeFetch(options.url, requestOptions).then(response => {\n        pendingBodySize -= requestSize;\n        pendingCount--;\n        return {\n          statusCode: response.status,\n          headers: {\n            'x-sentry-rate-limits': response.headers.get('X-Sentry-Rate-Limits'),\n            'retry-after': response.headers.get('Retry-After'),\n          },\n        };\n      });\n    } catch (e) {\n      clearCachedFetchImplementation();\n      pendingBodySize -= requestSize;\n      pendingCount--;\n      return rejectedSyncPromise(e);\n    }\n  }\n\n  return createTransport(options, makeRequest);\n}\n", "import { createTransport } from '@sentry/core';\nimport type { Transport, TransportMakeRequestResponse, TransportRequest } from '@sentry/types';\nimport { SyncPromise } from '@sentry/utils';\n\nimport type { BrowserTransportOptions } from './types';\n\n/**\n * The DONE ready state for XmlHttpRequest\n *\n * Defining it here as a constant b/c XMLHttpRequest.DONE is not always defined\n * (e.g. during testing, it is `undefined`)\n *\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/readyState}\n */\nconst XHR_READYSTATE_DONE = 4;\n\n/**\n * Creates a Transport that uses the XMLHttpRequest API to send events to Sentry.\n */\nexport function makeXHRTransport(options: BrowserTransportOptions): Transport {\n  function makeRequest(request: TransportRequest): PromiseLike<TransportMakeRequestResponse> {\n    return new SyncPromise((resolve, reject) => {\n      const xhr = new XMLHttpRequest();\n\n      xhr.onerror = reject;\n\n      xhr.onreadystatechange = (): void => {\n        if (xhr.readyState === XHR_READYSTATE_DONE) {\n          resolve({\n            statusCode: xhr.status,\n            headers: {\n              'x-sentry-rate-limits': xhr.getResponseHeader('X-Sentry-Rate-Limits'),\n              'retry-after': xhr.getResponseHeader('Retry-After'),\n            },\n          });\n        }\n      };\n\n      xhr.open('POST', options.url);\n\n      for (const header in options.headers) {\n        if (Object.prototype.hasOwnProperty.call(options.headers, header)) {\n          xhr.setRequestHeader(header, options.headers[header]);\n        }\n      }\n\n      xhr.send(request.body);\n    });\n  }\n\n  return createTransport(options, makeRequest);\n}\n", "// This was originally forked from https://github.com/csnover/TraceKit, and was largely\n// re - written as part of raven - js.\n//\n// This code was later copied to the JavaScript mono - repo and further modified and\n// refactored over the years.\n\n// Copyright (c) 2013 Onur Can Cakmak onur.cakmak@gmail.com and all TraceKit contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of this\n// software and associated documentation files(the 'Software'), to deal in the Software\n// without restriction, including without limitation the rights to use, copy, modify,\n// merge, publish, distribute, sublicense, and / or sell copies of the Software, and to\n// permit persons to whom the Software is furnished to do so, subject to the following\n// conditions:\n//\n// The above copyright notice and this permission notice shall be included in all copies\n// or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF\n// CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE\n// OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nimport type { StackFrame, StackLineParser, StackLineParserFn } from '@sentry/types';\nimport { createStackParser } from '@sentry/utils';\n\n// global reference to slice\nconst UNKNOWN_FUNCTION = '?';\n\nconst OPERA10_PRIORITY = 10;\nconst OPERA11_PRIORITY = 20;\nconst CHROME_PRIORITY = 30;\nconst WINJS_PRIORITY = 40;\nconst GECKO_PRIORITY = 50;\n\nfunction createFrame(filename: string, func: string, lineno?: number, colno?: number): StackFrame {\n  const frame: StackFrame = {\n    filename,\n    function: func,\n    in_app: true, // All browser frames are considered in_app\n  };\n\n  if (lineno !== undefined) {\n    frame.lineno = lineno;\n  }\n\n  if (colno !== undefined) {\n    frame.colno = colno;\n  }\n\n  return frame;\n}\n\n// Chromium based browsers: Chrome, Brave, new Opera, new Edge\nconst chromeRegex =\n  /^\\s*at (?:(.+?\\)(?: \\[.+\\])?|.*?) ?\\((?:address at )?)?(?:async )?((?:<anonymous>|[-a-z]+:|.*bundle|\\/)?.*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i;\nconst chromeEvalRegex = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/;\n\nconst chrome: StackLineParserFn = line => {\n  const parts = chromeRegex.exec(line);\n\n  if (parts) {\n    const isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\n\n    if (isEval) {\n      const subMatch = chromeEvalRegex.exec(parts[2]);\n\n      if (subMatch) {\n        // throw out eval line/column and use top-most line/column number\n        parts[2] = subMatch[1]; // url\n        parts[3] = subMatch[2]; // line\n        parts[4] = subMatch[3]; // column\n      }\n    }\n\n    // Kamil: One more hack won't hurt us right? Understanding and adding more rules on top of these regexps right now\n    // would be way too time consuming. (TODO: Rewrite whole RegExp to be more readable)\n    const [func, filename] = extractSafariExtensionDetails(parts[1] || UNKNOWN_FUNCTION, parts[2]);\n\n    return createFrame(filename, func, parts[3] ? +parts[3] : undefined, parts[4] ? +parts[4] : undefined);\n  }\n\n  return;\n};\n\nexport const chromeStackLineParser: StackLineParser = [CHROME_PRIORITY, chrome];\n\n// gecko regex: `(?:bundle|\\d+\\.js)`: `bundle` is for react native, `\\d+\\.js` also but specifically for ram bundles because it\n// generates filenames without a prefix like `file://` the filenames in the stacktrace are just 42.js\n// We need this specific case for now because we want no other regex to match.\nconst geckoREgex =\n  /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)?((?:[-a-z]+)?:\\/.*?|\\[native code\\]|[^@]*(?:bundle|\\d+\\.js)|\\/[\\w\\-. /=]+)(?::(\\d+))?(?::(\\d+))?\\s*$/i;\nconst geckoEvalRegex = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i;\n\nconst gecko: StackLineParserFn = line => {\n  const parts = geckoREgex.exec(line);\n\n  if (parts) {\n    const isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\n    if (isEval) {\n      const subMatch = geckoEvalRegex.exec(parts[3]);\n\n      if (subMatch) {\n        // throw out eval line/column and use top-most line number\n        parts[1] = parts[1] || 'eval';\n        parts[3] = subMatch[1];\n        parts[4] = subMatch[2];\n        parts[5] = ''; // no column when eval\n      }\n    }\n\n    let filename = parts[3];\n    let func = parts[1] || UNKNOWN_FUNCTION;\n    [func, filename] = extractSafariExtensionDetails(func, filename);\n\n    return createFrame(filename, func, parts[4] ? +parts[4] : undefined, parts[5] ? +parts[5] : undefined);\n  }\n\n  return;\n};\n\nexport const geckoStackLineParser: StackLineParser = [GECKO_PRIORITY, gecko];\n\nconst winjsRegex = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:[-a-z]+):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\n\nconst winjs: StackLineParserFn = line => {\n  const parts = winjsRegex.exec(line);\n\n  return parts\n    ? createFrame(parts[2], parts[1] || UNKNOWN_FUNCTION, +parts[3], parts[4] ? +parts[4] : undefined)\n    : undefined;\n};\n\nexport const winjsStackLineParser: StackLineParser = [WINJS_PRIORITY, winjs];\n\nconst opera10Regex = / line (\\d+).*script (?:in )?(\\S+)(?:: in function (\\S+))?$/i;\n\nconst opera10: StackLineParserFn = line => {\n  const parts = opera10Regex.exec(line);\n  return parts ? createFrame(parts[2], parts[3] || UNKNOWN_FUNCTION, +parts[1]) : undefined;\n};\n\nexport const opera10StackLineParser: StackLineParser = [OPERA10_PRIORITY, opera10];\n\nconst opera11Regex =\n  / line (\\d+), column (\\d+)\\s*(?:in (?:<anonymous function: ([^>]+)>|([^)]+))\\(.*\\))? in (.*):\\s*$/i;\n\nconst opera11: StackLineParserFn = line => {\n  const parts = opera11Regex.exec(line);\n  return parts ? createFrame(parts[5], parts[3] || parts[4] || UNKNOWN_FUNCTION, +parts[1], +parts[2]) : undefined;\n};\n\nexport const opera11StackLineParser: StackLineParser = [OPERA11_PRIORITY, opera11];\n\nexport const defaultStackLineParsers = [chromeStackLineParser, geckoStackLineParser, winjsStackLineParser];\n\nexport const defaultStackParser = createStackParser(...defaultStackLineParsers);\n\n/**\n * Safari web extensions, starting version unknown, can produce \"frames-only\" stacktraces.\n * What it means, is that instead of format like:\n *\n * Error: wat\n *   at function@url:row:col\n *   at function@url:row:col\n *   at function@url:row:col\n *\n * it produces something like:\n *\n *   function@url:row:col\n *   function@url:row:col\n *   function@url:row:col\n *\n * Because of that, it won't be captured by `chrome` RegExp and will fall into `Gecko` branch.\n * This function is extracted so that we can use it in both places without duplicating the logic.\n * Unfortunately \"just\" changing RegExp is too complicated now and making it pass all tests\n * and fix this case seems like an impossible, or at least way too time-consuming task.\n */\nconst extractSafariExtensionDetails = (func: string, filename: string): [string, string] => {\n  const isSafariExtension = func.indexOf('safari-extension') !== -1;\n  const isSafariWebExtension = func.indexOf('safari-web-extension') !== -1;\n\n  return isSafariExtension || isSafariWebExtension\n    ? [\n        func.indexOf('@') !== -1 ? func.split('@')[0] : UNKNOWN_FUNCTION,\n        isSafariExtension ? `safari-extension:${filename}` : `safari-web-extension:${filename}`,\n      ]\n    : [func, filename];\n};\n", "/* eslint-disable max-lines */\nimport { addBreadcrumb, convertIntegrationFnToClass, defineIntegration, getClient } from '@sentry/core';\nimport type {\n  Client,\n  Event as SentryEvent,\n  HandlerDataConsole,\n  HandlerDataDom,\n  HandlerDataFetch,\n  HandlerDataHistory,\n  HandlerDataXhr,\n  Integration,\n  IntegrationClass,\n  IntegrationFn,\n} from '@sentry/types';\nimport type {\n  Breadcrumb,\n  FetchBreadcrumbData,\n  FetchBreadcrumbHint,\n  XhrBreadcrumbData,\n  XhrBreadcrumbHint,\n} from '@sentry/types/build/types/breadcrumb';\nimport {\n  SENTRY_XHR_DATA_KEY,\n  addClickKeypressInstrumentationHandler,\n  addConsoleInstrumentationHandler,\n  addFetchInstrumentationHandler,\n  addHistoryInstrumentationHandler,\n  addXhrInstrumentationHandler,\n  getComponentName,\n  getEventDescription,\n  htmlTreeAsString,\n  logger,\n  parseUrl,\n  safeJoin,\n  severityLevelFromString,\n} from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport { WINDOW } from '../helpers';\n\ninterface BreadcrumbsOptions {\n  console: boolean;\n  dom:\n    | boolean\n    | {\n        serializeAttribute?: string | string[];\n        maxStringLength?: number;\n      };\n  fetch: boolean;\n  history: boolean;\n  sentry: boolean;\n  xhr: boolean;\n}\n\n/** maxStringLength gets capped to prevent 100 breadcrumbs exceeding 1MB event payload size */\nconst MAX_ALLOWED_STRING_LENGTH = 1024;\n\nconst INTEGRATION_NAME = 'Breadcrumbs';\n\nconst _breadcrumbsIntegration = ((options: Partial<BreadcrumbsOptions> = {}) => {\n  const _options = {\n    console: true,\n    dom: true,\n    fetch: true,\n    history: true,\n    sentry: true,\n    xhr: true,\n    ...options,\n  };\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    setup(client) {\n      if (_options.console) {\n        addConsoleInstrumentationHandler(_getConsoleBreadcrumbHandler(client));\n      }\n      if (_options.dom) {\n        addClickKeypressInstrumentationHandler(_getDomBreadcrumbHandler(client, _options.dom));\n      }\n      if (_options.xhr) {\n        addXhrInstrumentationHandler(_getXhrBreadcrumbHandler(client));\n      }\n      if (_options.fetch) {\n        addFetchInstrumentationHandler(_getFetchBreadcrumbHandler(client));\n      }\n      if (_options.history) {\n        addHistoryInstrumentationHandler(_getHistoryBreadcrumbHandler(client));\n      }\n      if (_options.sentry && client.on) {\n        client.on('beforeSendEvent', _getSentryBreadcrumbHandler(client));\n      }\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const breadcrumbsIntegration = defineIntegration(_breadcrumbsIntegration);\n\n/**\n * Default Breadcrumbs instrumentations\n *\n * @deprecated Use `breadcrumbsIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const Breadcrumbs = convertIntegrationFnToClass(INTEGRATION_NAME, breadcrumbsIntegration) as IntegrationClass<\n  Integration & { setup: (client: Client) => void }\n> & {\n  new (\n    options?: Partial<{\n      console: boolean;\n      dom:\n        | boolean\n        | {\n            serializeAttribute?: string | string[];\n            maxStringLength?: number;\n          };\n      fetch: boolean;\n      history: boolean;\n      sentry: boolean;\n      xhr: boolean;\n    }>,\n  ): Integration;\n};\n\n/**\n * Adds a breadcrumb for Sentry events or transactions if this option is enabled.\n */\nfunction _getSentryBreadcrumbHandler(client: Client): (event: SentryEvent) => void {\n  return function addSentryBreadcrumb(event: SentryEvent): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    addBreadcrumb(\n      {\n        category: `sentry.${event.type === 'transaction' ? 'transaction' : 'event'}`,\n        event_id: event.event_id,\n        level: event.level,\n        message: getEventDescription(event),\n      },\n      {\n        event,\n      },\n    );\n  };\n}\n\n/**\n * A HOC that creaes a function that creates breadcrumbs from DOM API calls.\n * This is a HOC so that we get access to dom options in the closure.\n */\nfunction _getDomBreadcrumbHandler(\n  client: Client,\n  dom: BreadcrumbsOptions['dom'],\n): (handlerData: HandlerDataDom) => void {\n  return function _innerDomBreadcrumb(handlerData: HandlerDataDom): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    let target;\n    let componentName;\n    let keyAttrs = typeof dom === 'object' ? dom.serializeAttribute : undefined;\n\n    let maxStringLength =\n      typeof dom === 'object' && typeof dom.maxStringLength === 'number' ? dom.maxStringLength : undefined;\n    if (maxStringLength && maxStringLength > MAX_ALLOWED_STRING_LENGTH) {\n      DEBUG_BUILD &&\n        logger.warn(\n          `\\`dom.maxStringLength\\` cannot exceed ${MAX_ALLOWED_STRING_LENGTH}, but a value of ${maxStringLength} was configured. Sentry will use ${MAX_ALLOWED_STRING_LENGTH} instead.`,\n        );\n      maxStringLength = MAX_ALLOWED_STRING_LENGTH;\n    }\n\n    if (typeof keyAttrs === 'string') {\n      keyAttrs = [keyAttrs];\n    }\n\n    // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n    try {\n      const event = handlerData.event as Event | Node;\n      const element = _isEvent(event) ? event.target : event;\n\n      target = htmlTreeAsString(element, { keyAttrs, maxStringLength });\n      componentName = getComponentName(element);\n    } catch (e) {\n      target = '<unknown>';\n    }\n\n    if (target.length === 0) {\n      return;\n    }\n\n    const breadcrumb: Breadcrumb = {\n      category: `ui.${handlerData.name}`,\n      message: target,\n    };\n\n    if (componentName) {\n      breadcrumb.data = { 'ui.component_name': componentName };\n    }\n\n    addBreadcrumb(breadcrumb, {\n      event: handlerData.event,\n      name: handlerData.name,\n      global: handlerData.global,\n    });\n  };\n}\n\n/**\n * Creates breadcrumbs from console API calls\n */\nfunction _getConsoleBreadcrumbHandler(client: Client): (handlerData: HandlerDataConsole) => void {\n  return function _consoleBreadcrumb(handlerData: HandlerDataConsole): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    const breadcrumb = {\n      category: 'console',\n      data: {\n        arguments: handlerData.args,\n        logger: 'console',\n      },\n      level: severityLevelFromString(handlerData.level),\n      message: safeJoin(handlerData.args, ' '),\n    };\n\n    if (handlerData.level === 'assert') {\n      if (handlerData.args[0] === false) {\n        breadcrumb.message = `Assertion failed: ${safeJoin(handlerData.args.slice(1), ' ') || 'console.assert'}`;\n        breadcrumb.data.arguments = handlerData.args.slice(1);\n      } else {\n        // Don't capture a breadcrumb for passed assertions\n        return;\n      }\n    }\n\n    addBreadcrumb(breadcrumb, {\n      input: handlerData.args,\n      level: handlerData.level,\n    });\n  };\n}\n\n/**\n * Creates breadcrumbs from XHR API calls\n */\nfunction _getXhrBreadcrumbHandler(client: Client): (handlerData: HandlerDataXhr) => void {\n  return function _xhrBreadcrumb(handlerData: HandlerDataXhr): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    const { startTimestamp, endTimestamp } = handlerData;\n\n    const sentryXhrData = handlerData.xhr[SENTRY_XHR_DATA_KEY];\n\n    // We only capture complete, non-sentry requests\n    if (!startTimestamp || !endTimestamp || !sentryXhrData) {\n      return;\n    }\n\n    const { method, url, status_code, body } = sentryXhrData;\n\n    const data: XhrBreadcrumbData = {\n      method,\n      url,\n      status_code,\n    };\n\n    const hint: XhrBreadcrumbHint = {\n      xhr: handlerData.xhr,\n      input: body,\n      startTimestamp,\n      endTimestamp,\n    };\n\n    addBreadcrumb(\n      {\n        category: 'xhr',\n        data,\n        type: 'http',\n      },\n      hint,\n    );\n  };\n}\n\n/**\n * Creates breadcrumbs from fetch API calls\n */\nfunction _getFetchBreadcrumbHandler(client: Client): (handlerData: HandlerDataFetch) => void {\n  return function _fetchBreadcrumb(handlerData: HandlerDataFetch): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    const { startTimestamp, endTimestamp } = handlerData;\n\n    // We only capture complete fetch requests\n    if (!endTimestamp) {\n      return;\n    }\n\n    if (handlerData.fetchData.url.match(/sentry_key/) && handlerData.fetchData.method === 'POST') {\n      // We will not create breadcrumbs for fetch requests that contain `sentry_key` (internal sentry requests)\n      return;\n    }\n\n    if (handlerData.error) {\n      const data: FetchBreadcrumbData = handlerData.fetchData;\n      const hint: FetchBreadcrumbHint = {\n        data: handlerData.error,\n        input: handlerData.args,\n        startTimestamp,\n        endTimestamp,\n      };\n\n      addBreadcrumb(\n        {\n          category: 'fetch',\n          data,\n          level: 'error',\n          type: 'http',\n        },\n        hint,\n      );\n    } else {\n      const response = handlerData.response as Response | undefined;\n      const data: FetchBreadcrumbData = {\n        ...handlerData.fetchData,\n        status_code: response && response.status,\n      };\n      const hint: FetchBreadcrumbHint = {\n        input: handlerData.args,\n        response,\n        startTimestamp,\n        endTimestamp,\n      };\n      addBreadcrumb(\n        {\n          category: 'fetch',\n          data,\n          type: 'http',\n        },\n        hint,\n      );\n    }\n  };\n}\n\n/**\n * Creates breadcrumbs from history API calls\n */\nfunction _getHistoryBreadcrumbHandler(client: Client): (handlerData: HandlerDataHistory) => void {\n  return function _historyBreadcrumb(handlerData: HandlerDataHistory): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    let from: string | undefined = handlerData.from;\n    let to: string | undefined = handlerData.to;\n    const parsedLoc = parseUrl(WINDOW.location.href);\n    let parsedFrom = from ? parseUrl(from) : undefined;\n    const parsedTo = parseUrl(to);\n\n    // Initial pushState doesn't provide `from` information\n    if (!parsedFrom || !parsedFrom.path) {\n      parsedFrom = parsedLoc;\n    }\n\n    // Use only the path component of the URL if the URL matches the current\n    // document (almost all the time when using pushState)\n    if (parsedLoc.protocol === parsedTo.protocol && parsedLoc.host === parsedTo.host) {\n      to = parsedTo.relative;\n    }\n    if (parsedLoc.protocol === parsedFrom.protocol && parsedLoc.host === parsedFrom.host) {\n      from = parsedFrom.relative;\n    }\n\n    addBreadcrumb({\n      category: 'navigation',\n      data: {\n        from,\n        to,\n      },\n    });\n  };\n}\n\nfunction _isEvent(event: unknown): event is Event {\n  return !!event && !!(event as Record<string, unknown>).target;\n}\n", "import { convertIntegrationFnToClass, defineIntegration } from '@sentry/core';\nimport type { Event, Exception, Integration, IntegrationClass, IntegrationFn, StackFrame } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\n\nconst INTEGRATION_NAME = 'Dedupe';\n\nconst _dedupeIntegration = (() => {\n  let previousEvent: Event | undefined;\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    processEvent(currentEvent) {\n      // We want to ignore any non-error type events, e.g. transactions or replays\n      // These should never be deduped, and also not be compared against as _previousEvent.\n      if (currentEvent.type) {\n        return currentEvent;\n      }\n\n      // Juuust in case something goes wrong\n      try {\n        if (_shouldDropEvent(currentEvent, previousEvent)) {\n          DEBUG_BUILD && logger.warn('Event dropped due to being a duplicate of previously captured event.');\n          return null;\n        }\n      } catch (_oO) {} // eslint-disable-line no-empty\n\n      return (previousEvent = currentEvent);\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const dedupeIntegration = defineIntegration(_dedupeIntegration);\n\n/**\n * Deduplication filter.\n * @deprecated Use `dedupeIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const Dedupe = convertIntegrationFnToClass(INTEGRATION_NAME, dedupeIntegration) as IntegrationClass<\n  Integration & { processEvent: (event: Event) => Event }\n>;\n\nfunction _shouldDropEvent(currentEvent: Event, previousEvent?: Event): boolean {\n  if (!previousEvent) {\n    return false;\n  }\n\n  if (_isSameMessageEvent(currentEvent, previousEvent)) {\n    return true;\n  }\n\n  if (_isSameExceptionEvent(currentEvent, previousEvent)) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction _isSameMessageEvent(currentEvent: Event, previousEvent: Event): boolean {\n  const currentMessage = currentEvent.message;\n  const previousMessage = previousEvent.message;\n\n  // If neither event has a message property, they were both exceptions, so bail out\n  if (!currentMessage && !previousMessage) {\n    return false;\n  }\n\n  // If only one event has a stacktrace, but not the other one, they are not the same\n  if ((currentMessage && !previousMessage) || (!currentMessage && previousMessage)) {\n    return false;\n  }\n\n  if (currentMessage !== previousMessage) {\n    return false;\n  }\n\n  if (!_isSameFingerprint(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  if (!_isSameStacktrace(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction _isSameExceptionEvent(currentEvent: Event, previousEvent: Event): boolean {\n  const previousException = _getExceptionFromEvent(previousEvent);\n  const currentException = _getExceptionFromEvent(currentEvent);\n\n  if (!previousException || !currentException) {\n    return false;\n  }\n\n  if (previousException.type !== currentException.type || previousException.value !== currentException.value) {\n    return false;\n  }\n\n  if (!_isSameFingerprint(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  if (!_isSameStacktrace(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction _isSameStacktrace(currentEvent: Event, previousEvent: Event): boolean {\n  let currentFrames = _getFramesFromEvent(currentEvent);\n  let previousFrames = _getFramesFromEvent(previousEvent);\n\n  // If neither event has a stacktrace, they are assumed to be the same\n  if (!currentFrames && !previousFrames) {\n    return true;\n  }\n\n  // If only one event has a stacktrace, but not the other one, they are not the same\n  if ((currentFrames && !previousFrames) || (!currentFrames && previousFrames)) {\n    return false;\n  }\n\n  currentFrames = currentFrames as StackFrame[];\n  previousFrames = previousFrames as StackFrame[];\n\n  // If number of frames differ, they are not the same\n  if (previousFrames.length !== currentFrames.length) {\n    return false;\n  }\n\n  // Otherwise, compare the two\n  for (let i = 0; i < previousFrames.length; i++) {\n    const frameA = previousFrames[i];\n    const frameB = currentFrames[i];\n\n    if (\n      frameA.filename !== frameB.filename ||\n      frameA.lineno !== frameB.lineno ||\n      frameA.colno !== frameB.colno ||\n      frameA.function !== frameB.function\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction _isSameFingerprint(currentEvent: Event, previousEvent: Event): boolean {\n  let currentFingerprint = currentEvent.fingerprint;\n  let previousFingerprint = previousEvent.fingerprint;\n\n  // If neither event has a fingerprint, they are assumed to be the same\n  if (!currentFingerprint && !previousFingerprint) {\n    return true;\n  }\n\n  // If only one event has a fingerprint, but not the other one, they are not the same\n  if ((currentFingerprint && !previousFingerprint) || (!currentFingerprint && previousFingerprint)) {\n    return false;\n  }\n\n  currentFingerprint = currentFingerprint as string[];\n  previousFingerprint = previousFingerprint as string[];\n\n  // Otherwise, compare the two\n  try {\n    return !!(currentFingerprint.join('') === previousFingerprint.join(''));\n  } catch (_oO) {\n    return false;\n  }\n}\n\nfunction _getExceptionFromEvent(event: Event): Exception | undefined {\n  return event.exception && event.exception.values && event.exception.values[0];\n}\n\nfunction _getFramesFromEvent(event: Event): StackFrame[] | undefined {\n  const exception = event.exception;\n\n  if (exception) {\n    try {\n      // @ts-expect-error Object could be undefined\n      return exception.values[0].stacktrace.frames;\n    } catch (_oO) {\n      return undefined;\n    }\n  }\n  return undefined;\n}\n", "/* eslint-disable @typescript-eslint/no-unsafe-member-access */\nimport { captureEvent, convertIntegrationFnToClass, defineIntegration, getClient } from '@sentry/core';\nimport type {\n  Client,\n  Event,\n  Integration,\n  IntegrationClass,\n  IntegrationFn,\n  Primitive,\n  StackParser,\n} from '@sentry/types';\nimport {\n  addGlobalErrorInstrumentationHandler,\n  addGlobalUnhandledRejectionInstrumentationHandler,\n  getLocationHref,\n  isErrorEvent,\n  isPrimitive,\n  isString,\n  logger,\n} from '@sentry/utils';\n\nimport type { BrowserClient } from '../client';\nimport { DEBUG_BUILD } from '../debug-build';\nimport { eventFromUnknownInput } from '../eventbuilder';\nimport { shouldIgnoreOnError } from '../helpers';\n\ntype GlobalHandlersIntegrationsOptionKeys = 'onerror' | 'onunhandledrejection';\n\ntype GlobalHandlersIntegrations = Record<GlobalHandlersIntegrationsOptionKeys, boolean>;\n\nconst INTEGRATION_NAME = 'GlobalHandlers';\n\nconst _globalHandlersIntegration = ((options: Partial<GlobalHandlersIntegrations> = {}) => {\n  const _options = {\n    onerror: true,\n    onunhandledrejection: true,\n    ...options,\n  };\n\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      Error.stackTraceLimit = 50;\n    },\n    setup(client) {\n      if (_options.onerror) {\n        _installGlobalOnErrorHandler(client);\n        globalHandlerLog('onerror');\n      }\n      if (_options.onunhandledrejection) {\n        _installGlobalOnUnhandledRejectionHandler(client);\n        globalHandlerLog('onunhandledrejection');\n      }\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const globalHandlersIntegration = defineIntegration(_globalHandlersIntegration);\n\n/**\n * Global handlers.\n * @deprecated Use `globalHandlersIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const GlobalHandlers = convertIntegrationFnToClass(\n  INTEGRATION_NAME,\n  globalHandlersIntegration,\n) as IntegrationClass<Integration & { setup: (client: Client) => void }> & {\n  new (options?: Partial<GlobalHandlersIntegrations>): Integration;\n};\n\nfunction _installGlobalOnErrorHandler(client: Client): void {\n  addGlobalErrorInstrumentationHandler(data => {\n    const { stackParser, attachStacktrace } = getOptions();\n\n    if (getClient() !== client || shouldIgnoreOnError()) {\n      return;\n    }\n\n    const { msg, url, line, column, error } = data;\n\n    const event =\n      error === undefined && isString(msg)\n        ? _eventFromIncompleteOnError(msg, url, line, column)\n        : _enhanceEventWithInitialFrame(\n            eventFromUnknownInput(stackParser, error || msg, undefined, attachStacktrace, false),\n            url,\n            line,\n            column,\n          );\n\n    event.level = 'error';\n\n    captureEvent(event, {\n      originalException: error,\n      mechanism: {\n        handled: false,\n        type: 'onerror',\n      },\n    });\n  });\n}\n\nfunction _installGlobalOnUnhandledRejectionHandler(client: Client): void {\n  addGlobalUnhandledRejectionInstrumentationHandler(e => {\n    const { stackParser, attachStacktrace } = getOptions();\n\n    if (getClient() !== client || shouldIgnoreOnError()) {\n      return;\n    }\n\n    const error = _getUnhandledRejectionError(e as unknown);\n\n    const event = isPrimitive(error)\n      ? _eventFromRejectionWithPrimitive(error)\n      : eventFromUnknownInput(stackParser, error, undefined, attachStacktrace, true);\n\n    event.level = 'error';\n\n    captureEvent(event, {\n      originalException: error,\n      mechanism: {\n        handled: false,\n        type: 'onunhandledrejection',\n      },\n    });\n  });\n}\n\nfunction _getUnhandledRejectionError(error: unknown): unknown {\n  if (isPrimitive(error)) {\n    return error;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const e = error as any;\n\n  // dig the object of the rejection out of known event types\n  try {\n    // PromiseRejectionEvents store the object of the rejection under 'reason'\n    // see https://developer.mozilla.org/en-US/docs/Web/API/PromiseRejectionEvent\n    if ('reason' in e) {\n      return e.reason;\n    }\n\n    // something, somewhere, (likely a browser extension) effectively casts PromiseRejectionEvents\n    // to CustomEvents, moving the `promise` and `reason` attributes of the PRE into\n    // the CustomEvent's `detail` attribute, since they're not part of CustomEvent's spec\n    // see https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent and\n    // https://github.com/getsentry/sentry-javascript/issues/2380\n    else if ('detail' in e && 'reason' in e.detail) {\n      return e.detail.reason;\n    }\n  } catch {} // eslint-disable-line no-empty\n\n  return error;\n}\n\n/**\n * Create an event from a promise rejection where the `reason` is a primitive.\n *\n * @param reason: The `reason` property of the promise rejection\n * @returns An Event object with an appropriate `exception` value\n */\nfunction _eventFromRejectionWithPrimitive(reason: Primitive): Event {\n  return {\n    exception: {\n      values: [\n        {\n          type: 'UnhandledRejection',\n          // String() is needed because the Primitive type includes symbols (which can't be automatically stringified)\n          value: `Non-Error promise rejection captured with value: ${String(reason)}`,\n        },\n      ],\n    },\n  };\n}\n\n/**\n * This function creates a stack from an old, error-less onerror handler.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _eventFromIncompleteOnError(msg: any, url: any, line: any, column: any): Event {\n  const ERROR_TYPES_RE =\n    /^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?(.*)$/i;\n\n  // If 'message' is ErrorEvent, get real message from inside\n  let message = isErrorEvent(msg) ? msg.message : msg;\n  let name = 'Error';\n\n  const groups = message.match(ERROR_TYPES_RE);\n  if (groups) {\n    name = groups[1];\n    message = groups[2];\n  }\n\n  const event = {\n    exception: {\n      values: [\n        {\n          type: name,\n          value: message,\n        },\n      ],\n    },\n  };\n\n  return _enhanceEventWithInitialFrame(event, url, line, column);\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _enhanceEventWithInitialFrame(event: Event, url: any, line: any, column: any): Event {\n  // event.exception\n  const e = (event.exception = event.exception || {});\n  // event.exception.values\n  const ev = (e.values = e.values || []);\n  // event.exception.values[0]\n  const ev0 = (ev[0] = ev[0] || {});\n  // event.exception.values[0].stacktrace\n  const ev0s = (ev0.stacktrace = ev0.stacktrace || {});\n  // event.exception.values[0].stacktrace.frames\n  const ev0sf = (ev0s.frames = ev0s.frames || []);\n\n  const colno = isNaN(parseInt(column, 10)) ? undefined : column;\n  const lineno = isNaN(parseInt(line, 10)) ? undefined : line;\n  const filename = isString(url) && url.length > 0 ? url : getLocationHref();\n\n  // event.exception.values[0].stacktrace.frames\n  if (ev0sf.length === 0) {\n    ev0sf.push({\n      colno,\n      filename,\n      function: '?',\n      in_app: true,\n      lineno,\n    });\n  }\n\n  return event;\n}\n\nfunction globalHandlerLog(type: string): void {\n  DEBUG_BUILD && logger.log(`Global Handler attached: ${type}`);\n}\n\nfunction getOptions(): { stackParser: StackParser; attachStacktrace?: boolean } {\n  const client = getClient<BrowserClient>();\n  const options = (client && client.getOptions()) || {\n    stackParser: () => [],\n    attachStacktrace: false,\n  };\n  return options;\n}\n", "import { convertIntegrationFnToClass, defineIntegration } from '@sentry/core';\nimport type { Event, Integration, IntegrationClass, IntegrationFn } from '@sentry/types';\n\nimport { WINDOW } from '../helpers';\n\nconst INTEGRATION_NAME = 'HttpContext';\n\nconst _httpContextIntegration = (() => {\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    preprocessEvent(event) {\n      // if none of the information we want exists, don't bother\n      if (!WINDOW.navigator && !WINDOW.location && !WINDOW.document) {\n        return;\n      }\n\n      // grab as much info as exists and add it to the event\n      const url = (event.request && event.request.url) || (WINDOW.location && WINDOW.location.href);\n      const { referrer } = WINDOW.document || {};\n      const { userAgent } = WINDOW.navigator || {};\n\n      const headers = {\n        ...(event.request && event.request.headers),\n        ...(referrer && { Referer: referrer }),\n        ...(userAgent && { 'User-Agent': userAgent }),\n      };\n      const request = { ...event.request, ...(url && { url }), headers };\n\n      event.request = request;\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const httpContextIntegration = defineIntegration(_httpContextIntegration);\n\n/**\n * HttpContext integration collects information about HTTP request headers.\n * @deprecated Use `httpContextIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const HttpContext = convertIntegrationFnToClass(INTEGRATION_NAME, httpContextIntegration) as IntegrationClass<\n  Integration & { preprocessEvent: (event: Event) => void }\n>;\n", "import { convertIntegrationFnToClass, defineIntegration } from '@sentry/core';\nimport type { Client, Event, EventHint, Integration, IntegrationClass, IntegrationFn } from '@sentry/types';\nimport { applyAggregateErrorsToEvent } from '@sentry/utils';\nimport { exceptionFromError } from '../eventbuilder';\n\ninterface LinkedErrorsOptions {\n  key?: string;\n  limit?: number;\n}\n\nconst DEFAULT_KEY = 'cause';\nconst DEFAULT_LIMIT = 5;\n\nconst INTEGRATION_NAME = 'LinkedErrors';\n\nconst _linkedErrorsIntegration = ((options: LinkedErrorsOptions = {}) => {\n  const limit = options.limit || DEFAULT_LIMIT;\n  const key = options.key || DEFAULT_KEY;\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    preprocessEvent(event, hint, client) {\n      const options = client.getOptions();\n\n      applyAggregateErrorsToEvent(\n        // This differs from the LinkedErrors integration in core by using a different exceptionFromError function\n        exceptionFromError,\n        options.stackParser,\n        options.maxValueLength,\n        key,\n        limit,\n        event,\n        hint,\n      );\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const linkedErrorsIntegration = defineIntegration(_linkedErrorsIntegration);\n\n/**\n * Aggregrate linked errors in an event.\n * @deprecated Use `linkedErrorsIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const LinkedErrors = convertIntegrationFnToClass(INTEGRATION_NAME, linkedErrorsIntegration) as IntegrationClass<\n  Integration & { preprocessEvent: (event: Event, hint: EventHint, client: Client) => void }\n> & { new (options?: { key?: string; limit?: number }): Integration };\n", "import { convertIntegrationFnToClass, defineIntegration } from '@sentry/core';\nimport type { Integration, IntegrationClass, IntegrationFn, WrappedFunction } from '@sentry/types';\nimport { fill, getFunctionName, getOriginalFunction } from '@sentry/utils';\n\nimport { WINDOW, wrap } from '../helpers';\n\nconst DEFAULT_EVENT_TARGET = [\n  'EventTarget',\n  'Window',\n  'Node',\n  'ApplicationCache',\n  'AudioTrackList',\n  'BroadcastChannel',\n  'ChannelMergerNode',\n  'CryptoOperation',\n  'EventSource',\n  'FileReader',\n  'HTMLUnknownElement',\n  'IDBDatabase',\n  'IDBRequest',\n  'IDBTransaction',\n  'KeyOperation',\n  'MediaController',\n  'MessagePort',\n  'ModalWindow',\n  'Notification',\n  'SVGElementInstance',\n  'Screen',\n  'SharedWorker',\n  'TextTrack',\n  'TextTrackCue',\n  'TextTrackList',\n  'WebSocket',\n  'WebSocketWorker',\n  'Worker',\n  'XMLHttpRequest',\n  'XMLHttpRequestEventTarget',\n  'XMLHttpRequestUpload',\n];\n\nconst INTEGRATION_NAME = 'TryCatch';\n\ntype XMLHttpRequestProp = 'onload' | 'onerror' | 'onprogress' | 'onreadystatechange';\n\ninterface TryCatchOptions {\n  setTimeout: boolean;\n  setInterval: boolean;\n  requestAnimationFrame: boolean;\n  XMLHttpRequest: boolean;\n  eventTarget: boolean | string[];\n}\n\nconst _browserApiErrorsIntegration = ((options: Partial<TryCatchOptions> = {}) => {\n  const _options = {\n    XMLHttpRequest: true,\n    eventTarget: true,\n    requestAnimationFrame: true,\n    setInterval: true,\n    setTimeout: true,\n    ...options,\n  };\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO: This currently only works for the first client this is setup\n    // We may want to adjust this to check for client etc.\n    setupOnce() {\n      if (_options.setTimeout) {\n        fill(WINDOW, 'setTimeout', _wrapTimeFunction);\n      }\n\n      if (_options.setInterval) {\n        fill(WINDOW, 'setInterval', _wrapTimeFunction);\n      }\n\n      if (_options.requestAnimationFrame) {\n        fill(WINDOW, 'requestAnimationFrame', _wrapRAF);\n      }\n\n      if (_options.XMLHttpRequest && 'XMLHttpRequest' in WINDOW) {\n        fill(XMLHttpRequest.prototype, 'send', _wrapXHR);\n      }\n\n      const eventTargetOption = _options.eventTarget;\n      if (eventTargetOption) {\n        const eventTarget = Array.isArray(eventTargetOption) ? eventTargetOption : DEFAULT_EVENT_TARGET;\n        eventTarget.forEach(_wrapEventTarget);\n      }\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const browserApiErrorsIntegration = defineIntegration(_browserApiErrorsIntegration);\n\n/**\n * Wrap timer functions and event targets to catch errors and provide better meta data.\n * @deprecated Use `browserApiErrorsIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const TryCatch = convertIntegrationFnToClass(\n  INTEGRATION_NAME,\n  browserApiErrorsIntegration,\n) as IntegrationClass<Integration> & {\n  new (options?: {\n    setTimeout: boolean;\n    setInterval: boolean;\n    requestAnimationFrame: boolean;\n    XMLHttpRequest: boolean;\n    eventTarget: boolean | string[];\n  }): Integration;\n};\n\nfunction _wrapTimeFunction(original: () => void): () => number {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function (this: any, ...args: any[]): number {\n    const originalCallback = args[0];\n    args[0] = wrap(originalCallback, {\n      mechanism: {\n        data: { function: getFunctionName(original) },\n        handled: false,\n        type: 'instrument',\n      },\n    });\n    return original.apply(this, args);\n  };\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _wrapRAF(original: any): (callback: () => void) => any {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function (this: any, callback: () => void): () => void {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    return original.apply(this, [\n      wrap(callback, {\n        mechanism: {\n          data: {\n            function: 'requestAnimationFrame',\n            handler: getFunctionName(original),\n          },\n          handled: false,\n          type: 'instrument',\n        },\n      }),\n    ]);\n  };\n}\n\nfunction _wrapXHR(originalSend: () => void): () => void {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function (this: XMLHttpRequest, ...args: any[]): void {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const xhr = this;\n    const xmlHttpRequestProps: XMLHttpRequestProp[] = ['onload', 'onerror', 'onprogress', 'onreadystatechange'];\n\n    xmlHttpRequestProps.forEach(prop => {\n      if (prop in xhr && typeof xhr[prop] === 'function') {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        fill(xhr, prop, function (original: WrappedFunction): () => any {\n          const wrapOptions = {\n            mechanism: {\n              data: {\n                function: prop,\n                handler: getFunctionName(original),\n              },\n              handled: false,\n              type: 'instrument',\n            },\n          };\n\n          // If Instrument integration has been called before TryCatch, get the name of original function\n          const originalFunction = getOriginalFunction(original);\n          if (originalFunction) {\n            wrapOptions.mechanism.data.handler = getFunctionName(originalFunction);\n          }\n\n          // Otherwise wrap directly\n          return wrap(original, wrapOptions);\n        });\n      }\n    });\n\n    return originalSend.apply(this, args);\n  };\n}\n\nfunction _wrapEventTarget(target: string): void {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const globalObject = WINDOW as { [key: string]: any };\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  const proto = globalObject[target] && globalObject[target].prototype;\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, no-prototype-builtins\n  if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n    return;\n  }\n\n  fill(proto, 'addEventListener', function (original: VoidFunction,): (\n    eventName: string,\n    fn: EventListenerObject,\n    options?: boolean | AddEventListenerOptions,\n  ) => void {\n    return function (\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      this: any,\n      eventName: string,\n      fn: EventListenerObject,\n      options?: boolean | AddEventListenerOptions,\n    ): (eventName: string, fn: EventListenerObject, capture?: boolean, secure?: boolean) => void {\n      try {\n        if (typeof fn.handleEvent === 'function') {\n          // ESlint disable explanation:\n          //  First, it is generally safe to call `wrap` with an unbound function. Furthermore, using `.bind()` would\n          //  introduce a bug here, because bind returns a new function that doesn't have our\n          //  flags(like __sentry_original__) attached. `wrap` checks for those flags to avoid unnecessary wrapping.\n          //  Without those flags, every call to addEventListener wraps the function again, causing a memory leak.\n          // eslint-disable-next-line @typescript-eslint/unbound-method\n          fn.handleEvent = wrap(fn.handleEvent, {\n            mechanism: {\n              data: {\n                function: 'handleEvent',\n                handler: getFunctionName(fn),\n                target,\n              },\n              handled: false,\n              type: 'instrument',\n            },\n          });\n        }\n      } catch (err) {\n        // can sometimes get 'Permission denied to access property \"handle Event'\n      }\n\n      return original.apply(this, [\n        eventName,\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        wrap(fn as any as WrappedFunction, {\n          mechanism: {\n            data: {\n              function: 'addEventListener',\n              handler: getFunctionName(fn),\n              target,\n            },\n            handled: false,\n            type: 'instrument',\n          },\n        }),\n        options,\n      ]);\n    };\n  });\n\n  fill(\n    proto,\n    'removeEventListener',\n    function (\n      originalRemoveEventListener: () => void,\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ): (this: any, eventName: string, fn: EventListenerObject, options?: boolean | EventListenerOptions) => () => void {\n      return function (\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this: any,\n        eventName: string,\n        fn: EventListenerObject,\n        options?: boolean | EventListenerOptions,\n      ): () => void {\n        /**\n         * There are 2 possible scenarios here:\n         *\n         * 1. Someone passes a callback, which was attached prior to Sentry initialization, or by using unmodified\n         * method, eg. `document.addEventListener.call(el, name, handler). In this case, we treat this function\n         * as a pass-through, and call original `removeEventListener` with it.\n         *\n         * 2. Someone passes a callback, which was attached after Sentry was initialized, which means that it was using\n         * our wrapped version of `addEventListener`, which internally calls `wrap` helper.\n         * This helper \"wraps\" whole callback inside a try/catch statement, and attached appropriate metadata to it,\n         * in order for us to make a distinction between wrapped/non-wrapped functions possible.\n         * If a function was wrapped, it has additional property of `__sentry_wrapped__`, holding the handler.\n         *\n         * When someone adds a handler prior to initialization, and then do it again, but after,\n         * then we have to detach both of them. Otherwise, if we'd detach only wrapped one, it'd be impossible\n         * to get rid of the initial handler and it'd stick there forever.\n         */\n        const wrappedEventHandler = fn as unknown as WrappedFunction;\n        try {\n          const originalEventHandler = wrappedEventHandler && wrappedEventHandler.__sentry_wrapped__;\n          if (originalEventHandler) {\n            originalRemoveEventListener.call(this, eventName, originalEventHandler, options);\n          }\n        } catch (e) {\n          // ignore, accessing __sentry_wrapped__ will throw in some Selenium environments\n        }\n        return originalRemoveEventListener.call(this, eventName, wrappedEventHandler, options);\n      };\n    },\n  );\n}\n", "import type { Hub } from '@sentry/core';\nimport { functionToStringIntegration, inboundFiltersIntegration } from '@sentry/core';\nimport {\n  captureSession,\n  getClient,\n  getCurrentHub,\n  getIntegrationsToSetup,\n  getReportDialogEndpoint,\n  initAndBind,\n  startSession,\n} from '@sentry/core';\nimport type { Integration, Options, UserFeedback } from '@sentry/types';\nimport {\n  addHistoryInstrumentationHandler,\n  logger,\n  stackParserFromStackParserOptions,\n  supportsFetch,\n} from '@sentry/utils';\n\nimport type { BrowserClientOptions, BrowserOptions } from './client';\nimport { BrowserClient } from './client';\nimport { DEBUG_BUILD } from './debug-build';\nimport type { ReportDialogOptions } from './helpers';\nimport { WINDOW, wrap as internalWrap } from './helpers';\nimport { breadcrumbsIntegration } from './integrations/breadcrumbs';\nimport { dedupeIntegration } from './integrations/dedupe';\nimport { globalHandlersIntegration } from './integrations/globalhandlers';\nimport { httpContextIntegration } from './integrations/httpcontext';\nimport { linkedErrorsIntegration } from './integrations/linkederrors';\nimport { browserApiErrorsIntegration } from './integrations/trycatch';\nimport { defaultStackParser } from './stack-parsers';\nimport { makeFetchTransport, makeXHRTransport } from './transports';\n\n/** @deprecated Use `getDefaultIntegrations(options)` instead. */\nexport const defaultIntegrations = [\n  inboundFiltersIntegration(),\n  functionToStringIntegration(),\n  browserApiErrorsIntegration(),\n  breadcrumbsIntegration(),\n  globalHandlersIntegration(),\n  linkedErrorsIntegration(),\n  dedupeIntegration(),\n  httpContextIntegration(),\n];\n\n/** Get the default integrations for the browser SDK. */\nexport function getDefaultIntegrations(_options: Options): Integration[] {\n  // We return a copy of the defaultIntegrations here to avoid mutating this\n  return [\n    // eslint-disable-next-line deprecation/deprecation\n    ...defaultIntegrations,\n  ];\n}\n\n/**\n * A magic string that build tooling can leverage in order to inject a release value into the SDK.\n */\ndeclare const __SENTRY_RELEASE__: string | undefined;\n\n/**\n * The Sentry Browser SDK Client.\n *\n * To use this SDK, call the {@link init} function as early as possible when\n * loading the web page. To set context information or send manual events, use\n * the provided methods.\n *\n * @example\n *\n * ```\n *\n * import { init } from '@sentry/browser';\n *\n * init({\n *   dsn: '__DSN__',\n *   // ...\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { configureScope } from '@sentry/browser';\n * configureScope((scope: Scope) => {\n *   scope.setExtra({ battery: 0.7 });\n *   scope.setTag({ user_mode: 'admin' });\n *   scope.setUser({ id: '4711' });\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { addBreadcrumb } from '@sentry/browser';\n * addBreadcrumb({\n *   message: 'My Breadcrumb',\n *   // ...\n * });\n * ```\n *\n * @example\n *\n * ```\n *\n * import * as Sentry from '@sentry/browser';\n * Sentry.captureMessage('Hello, world!');\n * Sentry.captureException(new Error('Good bye'));\n * Sentry.captureEvent({\n *   message: 'Manual',\n *   stacktrace: [\n *     // ...\n *   ],\n * });\n * ```\n *\n * @see {@link BrowserOptions} for documentation on configuration options.\n */\nexport function init(options: BrowserOptions = {}): void {\n  if (options.defaultIntegrations === undefined) {\n    options.defaultIntegrations = getDefaultIntegrations(options);\n  }\n  if (options.release === undefined) {\n    // This allows build tooling to find-and-replace __SENTRY_RELEASE__ to inject a release value\n    if (typeof __SENTRY_RELEASE__ === 'string') {\n      options.release = __SENTRY_RELEASE__;\n    }\n\n    // This supports the variable that sentry-webpack-plugin injects\n    if (WINDOW.SENTRY_RELEASE && WINDOW.SENTRY_RELEASE.id) {\n      options.release = WINDOW.SENTRY_RELEASE.id;\n    }\n  }\n  if (options.autoSessionTracking === undefined) {\n    options.autoSessionTracking = true;\n  }\n  if (options.sendClientReports === undefined) {\n    options.sendClientReports = true;\n  }\n\n  const clientOptions: BrowserClientOptions = {\n    ...options,\n    stackParser: stackParserFromStackParserOptions(options.stackParser || defaultStackParser),\n    integrations: getIntegrationsToSetup(options),\n    transport: options.transport || (supportsFetch() ? makeFetchTransport : makeXHRTransport),\n  };\n\n  initAndBind(BrowserClient, clientOptions);\n\n  if (options.autoSessionTracking) {\n    startSessionTracking();\n  }\n}\n\ntype NewReportDialogOptions = ReportDialogOptions & { eventId: string }; // eslint-disable-line\n\ninterface ShowReportDialogFunction {\n  /**\n   * Present the user with a report dialog.\n   *\n   * @param options Everything is optional, we try to fetch all info need from the global scope.\n   */\n  (options: NewReportDialogOptions): void;\n\n  /**\n   * Present the user with a report dialog.\n   *\n   * @param options Everything is optional, we try to fetch all info need from the global scope.\n   *\n   * @deprecated Please always pass an `options` argument with `eventId`. The `hub` argument will not be used in the next version of the SDK.\n   */\n  // eslint-disable-next-line deprecation/deprecation\n  (options?: ReportDialogOptions, hub?: Hub): void;\n}\n\nexport const showReportDialog: ShowReportDialogFunction = (\n  // eslint-disable-next-line deprecation/deprecation\n  options: ReportDialogOptions = {},\n  // eslint-disable-next-line deprecation/deprecation\n  hub: Hub = getCurrentHub(),\n) => {\n  // doesn't work without a document (React Native)\n  if (!WINDOW.document) {\n    DEBUG_BUILD && logger.error('Global document not defined in showReportDialog call');\n    return;\n  }\n\n  // eslint-disable-next-line deprecation/deprecation\n  const { client, scope } = hub.getStackTop();\n  const dsn = options.dsn || (client && client.getDsn());\n  if (!dsn) {\n    DEBUG_BUILD && logger.error('DSN not configured for showReportDialog call');\n    return;\n  }\n\n  if (scope) {\n    options.user = {\n      ...scope.getUser(),\n      ...options.user,\n    };\n  }\n\n  // TODO(v8): Remove this entire if statement. `eventId` will be a required option.\n  // eslint-disable-next-line deprecation/deprecation\n  if (!options.eventId) {\n    // eslint-disable-next-line deprecation/deprecation\n    options.eventId = hub.lastEventId();\n  }\n\n  const script = WINDOW.document.createElement('script');\n  script.async = true;\n  script.crossOrigin = 'anonymous';\n  script.src = getReportDialogEndpoint(dsn, options);\n\n  if (options.onLoad) {\n    script.onload = options.onLoad;\n  }\n\n  const { onClose } = options;\n  if (onClose) {\n    const reportDialogClosedMessageHandler = (event: MessageEvent): void => {\n      if (event.data === '__sentry_reportdialog_closed__') {\n        try {\n          onClose();\n        } finally {\n          WINDOW.removeEventListener('message', reportDialogClosedMessageHandler);\n        }\n      }\n    };\n    WINDOW.addEventListener('message', reportDialogClosedMessageHandler);\n  }\n\n  const injectionPoint = WINDOW.document.head || WINDOW.document.body;\n  if (injectionPoint) {\n    injectionPoint.appendChild(script);\n  } else {\n    DEBUG_BUILD && logger.error('Not injecting report dialog. No injection point found in HTML');\n  }\n};\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nexport function forceLoad(): void {\n  // Noop\n}\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nexport function onLoad(callback: () => void): void {\n  callback();\n}\n\n/**\n * Wrap code within a try/catch block so the SDK is able to capture errors.\n *\n * @deprecated This function will be removed in v8.\n * It is not part of Sentry's official API and it's easily replaceable by using a try/catch block\n * and calling Sentry.captureException.\n *\n * @param fn A function to wrap.\n *\n * @returns The result of wrapped function call.\n */\n// TODO(v8): Remove this function\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function wrap(fn: (...args: any) => any): any {\n  return internalWrap(fn)();\n}\n\n/**\n * Enable automatic Session Tracking for the initial page load.\n */\nfunction startSessionTracking(): void {\n  if (typeof WINDOW.document === 'undefined') {\n    DEBUG_BUILD && logger.warn('Session tracking in non-browser environment with @sentry/browser is not supported.');\n    return;\n  }\n\n  // The session duration for browser sessions does not track a meaningful\n  // concept that can be used as a metric.\n  // Automatically captured sessions are akin to page views, and thus we\n  // discard their duration.\n  startSession({ ignoreDuration: true });\n  captureSession();\n\n  // We want to create a session for every navigation as well\n  addHistoryInstrumentationHandler(({ from, to }) => {\n    // Don't create an additional session for the initial route or if the location did not change\n    if (from !== undefined && from !== to) {\n      startSession({ ignoreDuration: true });\n      captureSession();\n    }\n  });\n}\n\n/**\n * Captures user feedback and sends it to Sentry.\n */\nexport function captureUserFeedback(feedback: UserFeedback): void {\n  const client = getClient<BrowserClient>();\n  if (client) {\n    client.captureUserFeedback(feedback);\n  }\n}\n", "import { GLOBAL_OBJ } from '@sentry/utils';\n\n// exporting a separate copy of `WINDOW` rather than exporting the one from `@sentry/browser`\n// prevents the browser package from being bundled in the CDN bundle, and avoids a\n// circular dependency between the browser and replay packages should `@sentry/browser` import\n// from `@sentry/replay` in the future\nexport const WINDOW = GLOBAL_OBJ as typeof GLOBAL_OBJ & Window;\n\nexport const REPLAY_SESSION_KEY = 'sentryReplaySession';\nexport const REPLAY_EVENT_NAME = 'replay_event';\nexport const RECORDING_EVENT_NAME = 'replay_recording';\nexport const UNABLE_TO_SEND_REPLAY = 'Unable to send Replay';\n\n// The idle limit for a session after which recording is paused.\nexport const SESSION_IDLE_PAUSE_DURATION = 300_000; // 5 minutes in ms\n\n// The idle limit for a session after which the session expires.\nexport const SESSION_IDLE_EXPIRE_DURATION = 900_000; // 15 minutes in ms\n\n/** Default flush delays */\nexport const DEFAULT_FLUSH_MIN_DELAY = 5_000;\n// XXX: Temp fix for our debounce logic where `maxWait` would never occur if it\n// was the same as `wait`\nexport const DEFAULT_FLUSH_MAX_DELAY = 5_500;\n\n/* How long to wait for error checkouts */\nexport const BUFFER_CHECKOUT_TIME = 60_000;\n\nexport const RETRY_BASE_INTERVAL = 5000;\nexport const RETRY_MAX_COUNT = 3;\n\n/* The max (uncompressed) size in bytes of a network body. Any body larger than this will be truncated. */\nexport const NETWORK_BODY_MAX_SIZE = 150_000;\n\n/* The max size of a single console arg that is captured. Any arg larger than this will be truncated. */\nexport const CONSOLE_ARG_MAX_SIZE = 5_000;\n\n/* Min. time to wait before we consider something a slow click. */\nexport const SLOW_CLICK_THRESHOLD = 3_000;\n/* For scroll actions after a click, we only look for a very short time period to detect programmatic scrolling. */\nexport const SLOW_CLICK_SCROLL_TIMEOUT = 300;\n\n/** When encountering a total segment size exceeding this size, stop the replay (as we cannot properly ingest it). */\nexport const REPLAY_MAX_EVENT_BUFFER_SIZE = 20_000_000; // ~20MB\n\n/** Replays must be min. 5s long before we send them. */\nexport const MIN_REPLAY_DURATION = 4_999;\n/* The max. allowed value that the minReplayDuration can be set to. */\nexport const MIN_REPLAY_DURATION_LIMIT = 15_000;\n\n/** The max. length of a replay. */\nexport const MAX_REPLAY_DURATION = 3_600_000; // 60 minutes in ms;\n\n/** Default attributes to be ignored when `maskAllText` is enabled */\nexport const DEFAULT_IGNORED_ATTRIBUTES = ['title', 'placeholder'];\n", "var NodeType;\r\n(function (NodeType) {\r\n    NodeType[NodeType[\"Document\"] = 0] = \"Document\";\r\n    NodeType[NodeType[\"DocumentType\"] = 1] = \"DocumentType\";\r\n    NodeType[NodeType[\"Element\"] = 2] = \"Element\";\r\n    NodeType[NodeType[\"Text\"] = 3] = \"Text\";\r\n    NodeType[NodeType[\"CDATA\"] = 4] = \"CDATA\";\r\n    NodeType[NodeType[\"Comment\"] = 5] = \"Comment\";\r\n})(NodeType || (NodeType = {}));\n\nfunction isElement(n) {\r\n    return n.nodeType === n.ELEMENT_NODE;\r\n}\r\nfunction isShadowRoot(n) {\r\n    const host = n?.host;\r\n    return Boolean(host?.shadowRoot === n);\r\n}\r\nfunction isNativeShadowDom(shadowRoot) {\r\n    return Object.prototype.toString.call(shadowRoot) === '[object ShadowRoot]';\r\n}\r\nfunction fixBrowserCompatibilityIssuesInCSS(cssText) {\r\n    if (cssText.includes(' background-clip: text;') &&\r\n        !cssText.includes(' -webkit-background-clip: text;')) {\r\n        cssText = cssText.replace(' background-clip: text;', ' -webkit-background-clip: text; background-clip: text;');\r\n    }\r\n    return cssText;\r\n}\r\nfunction escapeImportStatement(rule) {\r\n    const { cssText } = rule;\r\n    if (cssText.split('\"').length < 3)\r\n        return cssText;\r\n    const statement = ['@import', `url(${JSON.stringify(rule.href)})`];\r\n    if (rule.layerName === '') {\r\n        statement.push(`layer`);\r\n    }\r\n    else if (rule.layerName) {\r\n        statement.push(`layer(${rule.layerName})`);\r\n    }\r\n    if (rule.supportsText) {\r\n        statement.push(`supports(${rule.supportsText})`);\r\n    }\r\n    if (rule.media.length) {\r\n        statement.push(rule.media.mediaText);\r\n    }\r\n    return statement.join(' ') + ';';\r\n}\r\nfunction stringifyStylesheet(s) {\r\n    try {\r\n        const rules = s.rules || s.cssRules;\r\n        return rules\r\n            ? fixBrowserCompatibilityIssuesInCSS(Array.from(rules, stringifyRule).join(''))\r\n            : null;\r\n    }\r\n    catch (error) {\r\n        return null;\r\n    }\r\n}\r\nfunction stringifyRule(rule) {\r\n    let importStringified;\r\n    if (isCSSImportRule(rule)) {\r\n        try {\r\n            importStringified =\r\n                stringifyStylesheet(rule.styleSheet) ||\r\n                    escapeImportStatement(rule);\r\n        }\r\n        catch (error) {\r\n        }\r\n    }\r\n    else if (isCSSStyleRule(rule) && rule.selectorText.includes(':')) {\r\n        return fixSafariColons(rule.cssText);\r\n    }\r\n    return importStringified || rule.cssText;\r\n}\r\nfunction fixSafariColons(cssStringified) {\r\n    const regex = /(\\[(?:[\\w-]+)[^\\\\])(:(?:[\\w-]+)\\])/gm;\r\n    return cssStringified.replace(regex, '$1\\\\$2');\r\n}\r\nfunction isCSSImportRule(rule) {\r\n    return 'styleSheet' in rule;\r\n}\r\nfunction isCSSStyleRule(rule) {\r\n    return 'selectorText' in rule;\r\n}\r\nclass Mirror {\r\n    constructor() {\r\n        this.idNodeMap = new Map();\r\n        this.nodeMetaMap = new WeakMap();\r\n    }\r\n    getId(n) {\r\n        if (!n)\r\n            return -1;\r\n        const id = this.getMeta(n)?.id;\r\n        return id ?? -1;\r\n    }\r\n    getNode(id) {\r\n        return this.idNodeMap.get(id) || null;\r\n    }\r\n    getIds() {\r\n        return Array.from(this.idNodeMap.keys());\r\n    }\r\n    getMeta(n) {\r\n        return this.nodeMetaMap.get(n) || null;\r\n    }\r\n    removeNodeFromMap(n) {\r\n        const id = this.getId(n);\r\n        this.idNodeMap.delete(id);\r\n        if (n.childNodes) {\r\n            n.childNodes.forEach((childNode) => this.removeNodeFromMap(childNode));\r\n        }\r\n    }\r\n    has(id) {\r\n        return this.idNodeMap.has(id);\r\n    }\r\n    hasNode(node) {\r\n        return this.nodeMetaMap.has(node);\r\n    }\r\n    add(n, meta) {\r\n        const id = meta.id;\r\n        this.idNodeMap.set(id, n);\r\n        this.nodeMetaMap.set(n, meta);\r\n    }\r\n    replace(id, n) {\r\n        const oldNode = this.getNode(id);\r\n        if (oldNode) {\r\n            const meta = this.nodeMetaMap.get(oldNode);\r\n            if (meta)\r\n                this.nodeMetaMap.set(n, meta);\r\n        }\r\n        this.idNodeMap.set(id, n);\r\n    }\r\n    reset() {\r\n        this.idNodeMap = new Map();\r\n        this.nodeMetaMap = new WeakMap();\r\n    }\r\n}\r\nfunction createMirror() {\r\n    return new Mirror();\r\n}\r\nfunction shouldMaskInput({ maskInputOptions, tagName, type, }) {\r\n    if (tagName === 'OPTION') {\r\n        tagName = 'SELECT';\r\n    }\r\n    return Boolean(maskInputOptions[tagName.toLowerCase()] ||\r\n        (type && maskInputOptions[type]) ||\r\n        type === 'password' ||\r\n        (tagName === 'INPUT' && !type && maskInputOptions['text']));\r\n}\r\nfunction maskInputValue({ isMasked, element, value, maskInputFn, }) {\r\n    let text = value || '';\r\n    if (!isMasked) {\r\n        return text;\r\n    }\r\n    if (maskInputFn) {\r\n        text = maskInputFn(text, element);\r\n    }\r\n    return '*'.repeat(text.length);\r\n}\r\nfunction toLowerCase(str) {\r\n    return str.toLowerCase();\r\n}\r\nfunction toUpperCase(str) {\r\n    return str.toUpperCase();\r\n}\r\nconst ORIGINAL_ATTRIBUTE_NAME = '__rrweb_original__';\r\nfunction is2DCanvasBlank(canvas) {\r\n    const ctx = canvas.getContext('2d');\r\n    if (!ctx)\r\n        return true;\r\n    const chunkSize = 50;\r\n    for (let x = 0; x < canvas.width; x += chunkSize) {\r\n        for (let y = 0; y < canvas.height; y += chunkSize) {\r\n            const getImageData = ctx.getImageData;\r\n            const originalGetImageData = ORIGINAL_ATTRIBUTE_NAME in getImageData\r\n                ? getImageData[ORIGINAL_ATTRIBUTE_NAME]\r\n                : getImageData;\r\n            const pixelBuffer = new Uint32Array(originalGetImageData.call(ctx, x, y, Math.min(chunkSize, canvas.width - x), Math.min(chunkSize, canvas.height - y)).data.buffer);\r\n            if (pixelBuffer.some((pixel) => pixel !== 0))\r\n                return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction isNodeMetaEqual(a, b) {\r\n    if (!a || !b || a.type !== b.type)\r\n        return false;\r\n    if (a.type === NodeType.Document)\r\n        return a.compatMode === b.compatMode;\r\n    else if (a.type === NodeType.DocumentType)\r\n        return (a.name === b.name &&\r\n            a.publicId === b.publicId &&\r\n            a.systemId === b.systemId);\r\n    else if (a.type === NodeType.Comment ||\r\n        a.type === NodeType.Text ||\r\n        a.type === NodeType.CDATA)\r\n        return a.textContent === b.textContent;\r\n    else if (a.type === NodeType.Element)\r\n        return (a.tagName === b.tagName &&\r\n            JSON.stringify(a.attributes) ===\r\n                JSON.stringify(b.attributes) &&\r\n            a.isSVG === b.isSVG &&\r\n            a.needBlock === b.needBlock);\r\n    return false;\r\n}\r\nfunction getInputType(element) {\r\n    const type = element.type;\r\n    return element.hasAttribute('data-rr-is-password')\r\n        ? 'password'\r\n        : type\r\n            ?\r\n                toLowerCase(type)\r\n            : null;\r\n}\r\nfunction getInputValue(el, tagName, type) {\r\n    if (tagName === 'INPUT' && (type === 'radio' || type === 'checkbox')) {\r\n        return el.getAttribute('value') || '';\r\n    }\r\n    return el.value;\r\n}\n\nlet _id = 1;\r\nconst tagNameRegex = new RegExp('[^a-z0-9-_:]');\r\nconst IGNORED_NODE = -2;\r\nfunction genId() {\r\n    return _id++;\r\n}\r\nfunction getValidTagName(element) {\r\n    if (element instanceof HTMLFormElement) {\r\n        return 'form';\r\n    }\r\n    const processedTagName = toLowerCase(element.tagName);\r\n    if (tagNameRegex.test(processedTagName)) {\r\n        return 'div';\r\n    }\r\n    return processedTagName;\r\n}\r\nfunction extractOrigin(url) {\r\n    let origin = '';\r\n    if (url.indexOf('//') > -1) {\r\n        origin = url.split('/').slice(0, 3).join('/');\r\n    }\r\n    else {\r\n        origin = url.split('/')[0];\r\n    }\r\n    origin = origin.split('?')[0];\r\n    return origin;\r\n}\r\nlet canvasService;\r\nlet canvasCtx;\r\nconst URL_IN_CSS_REF = /url\\((?:(')([^']*)'|(\")(.*?)\"|([^)]*))\\)/gm;\r\nconst URL_PROTOCOL_MATCH = /^(?:[a-z+]+:)?\\/\\//i;\r\nconst URL_WWW_MATCH = /^www\\..*/i;\r\nconst DATA_URI = /^(data:)([^,]*),(.*)/i;\r\nfunction absoluteToStylesheet(cssText, href) {\r\n    return (cssText || '').replace(URL_IN_CSS_REF, (origin, quote1, path1, quote2, path2, path3) => {\r\n        const filePath = path1 || path2 || path3;\r\n        const maybeQuote = quote1 || quote2 || '';\r\n        if (!filePath) {\r\n            return origin;\r\n        }\r\n        if (URL_PROTOCOL_MATCH.test(filePath) || URL_WWW_MATCH.test(filePath)) {\r\n            return `url(${maybeQuote}${filePath}${maybeQuote})`;\r\n        }\r\n        if (DATA_URI.test(filePath)) {\r\n            return `url(${maybeQuote}${filePath}${maybeQuote})`;\r\n        }\r\n        if (filePath[0] === '/') {\r\n            return `url(${maybeQuote}${extractOrigin(href) + filePath}${maybeQuote})`;\r\n        }\r\n        const stack = href.split('/');\r\n        const parts = filePath.split('/');\r\n        stack.pop();\r\n        for (const part of parts) {\r\n            if (part === '.') {\r\n                continue;\r\n            }\r\n            else if (part === '..') {\r\n                stack.pop();\r\n            }\r\n            else {\r\n                stack.push(part);\r\n            }\r\n        }\r\n        return `url(${maybeQuote}${stack.join('/')}${maybeQuote})`;\r\n    });\r\n}\r\nconst SRCSET_NOT_SPACES = /^[^ \\t\\n\\r\\u000c]+/;\r\nconst SRCSET_COMMAS_OR_SPACES = /^[, \\t\\n\\r\\u000c]+/;\r\nfunction getAbsoluteSrcsetString(doc, attributeValue) {\r\n    if (attributeValue.trim() === '') {\r\n        return attributeValue;\r\n    }\r\n    let pos = 0;\r\n    function collectCharacters(regEx) {\r\n        let chars;\r\n        const match = regEx.exec(attributeValue.substring(pos));\r\n        if (match) {\r\n            chars = match[0];\r\n            pos += chars.length;\r\n            return chars;\r\n        }\r\n        return '';\r\n    }\r\n    const output = [];\r\n    while (true) {\r\n        collectCharacters(SRCSET_COMMAS_OR_SPACES);\r\n        if (pos >= attributeValue.length) {\r\n            break;\r\n        }\r\n        let url = collectCharacters(SRCSET_NOT_SPACES);\r\n        if (url.slice(-1) === ',') {\r\n            url = absoluteToDoc(doc, url.substring(0, url.length - 1));\r\n            output.push(url);\r\n        }\r\n        else {\r\n            let descriptorsStr = '';\r\n            url = absoluteToDoc(doc, url);\r\n            let inParens = false;\r\n            while (true) {\r\n                const c = attributeValue.charAt(pos);\r\n                if (c === '') {\r\n                    output.push((url + descriptorsStr).trim());\r\n                    break;\r\n                }\r\n                else if (!inParens) {\r\n                    if (c === ',') {\r\n                        pos += 1;\r\n                        output.push((url + descriptorsStr).trim());\r\n                        break;\r\n                    }\r\n                    else if (c === '(') {\r\n                        inParens = true;\r\n                    }\r\n                }\r\n                else {\r\n                    if (c === ')') {\r\n                        inParens = false;\r\n                    }\r\n                }\r\n                descriptorsStr += c;\r\n                pos += 1;\r\n            }\r\n        }\r\n    }\r\n    return output.join(', ');\r\n}\r\nfunction absoluteToDoc(doc, attributeValue) {\r\n    if (!attributeValue || attributeValue.trim() === '') {\r\n        return attributeValue;\r\n    }\r\n    const a = doc.createElement('a');\r\n    a.href = attributeValue;\r\n    return a.href;\r\n}\r\nfunction isSVGElement(el) {\r\n    return Boolean(el.tagName === 'svg' || el.ownerSVGElement);\r\n}\r\nfunction getHref() {\r\n    const a = document.createElement('a');\r\n    a.href = '';\r\n    return a.href;\r\n}\r\nfunction transformAttribute(doc, tagName, name, value, element, maskAttributeFn) {\r\n    if (!value) {\r\n        return value;\r\n    }\r\n    if (name === 'src' ||\r\n        (name === 'href' && !(tagName === 'use' && value[0] === '#'))) {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    else if (name === 'xlink:href' && value[0] !== '#') {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    else if (name === 'background' &&\r\n        (tagName === 'table' || tagName === 'td' || tagName === 'th')) {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    else if (name === 'srcset') {\r\n        return getAbsoluteSrcsetString(doc, value);\r\n    }\r\n    else if (name === 'style') {\r\n        return absoluteToStylesheet(value, getHref());\r\n    }\r\n    else if (tagName === 'object' && name === 'data') {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    if (typeof maskAttributeFn === 'function') {\r\n        return maskAttributeFn(name, value, element);\r\n    }\r\n    return value;\r\n}\r\nfunction ignoreAttribute(tagName, name, _value) {\r\n    return (tagName === 'video' || tagName === 'audio') && name === 'autoplay';\r\n}\r\nfunction _isBlockedElement(element, blockClass, blockSelector, unblockSelector) {\r\n    try {\r\n        if (unblockSelector && element.matches(unblockSelector)) {\r\n            return false;\r\n        }\r\n        if (typeof blockClass === 'string') {\r\n            if (element.classList.contains(blockClass)) {\r\n                return true;\r\n            }\r\n        }\r\n        else {\r\n            for (let eIndex = element.classList.length; eIndex--;) {\r\n                const className = element.classList[eIndex];\r\n                if (blockClass.test(className)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        if (blockSelector) {\r\n            return element.matches(blockSelector);\r\n        }\r\n    }\r\n    catch (e) {\r\n    }\r\n    return false;\r\n}\r\nfunction elementClassMatchesRegex(el, regex) {\r\n    for (let eIndex = el.classList.length; eIndex--;) {\r\n        const className = el.classList[eIndex];\r\n        if (regex.test(className)) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction distanceToMatch(node, matchPredicate, limit = Infinity, distance = 0) {\r\n    if (!node)\r\n        return -1;\r\n    if (node.nodeType !== node.ELEMENT_NODE)\r\n        return -1;\r\n    if (distance > limit)\r\n        return -1;\r\n    if (matchPredicate(node))\r\n        return distance;\r\n    return distanceToMatch(node.parentNode, matchPredicate, limit, distance + 1);\r\n}\r\nfunction createMatchPredicate(className, selector) {\r\n    return (node) => {\r\n        const el = node;\r\n        if (el === null)\r\n            return false;\r\n        try {\r\n            if (className) {\r\n                if (typeof className === 'string') {\r\n                    if (el.matches(`.${className}`))\r\n                        return true;\r\n                }\r\n                else if (elementClassMatchesRegex(el, className)) {\r\n                    return true;\r\n                }\r\n            }\r\n            if (selector && el.matches(selector))\r\n                return true;\r\n            return false;\r\n        }\r\n        catch {\r\n            return false;\r\n        }\r\n    };\r\n}\r\nfunction needMaskingText(node, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, maskAllText) {\r\n    try {\r\n        const el = node.nodeType === node.ELEMENT_NODE\r\n            ? node\r\n            : node.parentElement;\r\n        if (el === null)\r\n            return false;\r\n        if (el.tagName === 'INPUT') {\r\n            const autocomplete = el.getAttribute('autocomplete');\r\n            const disallowedAutocompleteValues = [\r\n                'current-password',\r\n                'new-password',\r\n                'cc-number',\r\n                'cc-exp',\r\n                'cc-exp-month',\r\n                'cc-exp-year',\r\n                'cc-csc',\r\n            ];\r\n            if (disallowedAutocompleteValues.includes(autocomplete)) {\r\n                return true;\r\n            }\r\n        }\r\n        let maskDistance = -1;\r\n        let unmaskDistance = -1;\r\n        if (maskAllText) {\r\n            unmaskDistance = distanceToMatch(el, createMatchPredicate(unmaskTextClass, unmaskTextSelector));\r\n            if (unmaskDistance < 0) {\r\n                return true;\r\n            }\r\n            maskDistance = distanceToMatch(el, createMatchPredicate(maskTextClass, maskTextSelector), unmaskDistance >= 0 ? unmaskDistance : Infinity);\r\n        }\r\n        else {\r\n            maskDistance = distanceToMatch(el, createMatchPredicate(maskTextClass, maskTextSelector));\r\n            if (maskDistance < 0) {\r\n                return false;\r\n            }\r\n            unmaskDistance = distanceToMatch(el, createMatchPredicate(unmaskTextClass, unmaskTextSelector), maskDistance >= 0 ? maskDistance : Infinity);\r\n        }\r\n        return maskDistance >= 0\r\n            ? unmaskDistance >= 0\r\n                ? maskDistance <= unmaskDistance\r\n                : true\r\n            : unmaskDistance >= 0\r\n                ? false\r\n                : !!maskAllText;\r\n    }\r\n    catch (e) {\r\n    }\r\n    return !!maskAllText;\r\n}\r\nfunction onceIframeLoaded(iframeEl, listener, iframeLoadTimeout) {\r\n    const win = iframeEl.contentWindow;\r\n    if (!win) {\r\n        return;\r\n    }\r\n    let fired = false;\r\n    let readyState;\r\n    try {\r\n        readyState = win.document.readyState;\r\n    }\r\n    catch (error) {\r\n        return;\r\n    }\r\n    if (readyState !== 'complete') {\r\n        const timer = setTimeout(() => {\r\n            if (!fired) {\r\n                listener();\r\n                fired = true;\r\n            }\r\n        }, iframeLoadTimeout);\r\n        iframeEl.addEventListener('load', () => {\r\n            clearTimeout(timer);\r\n            fired = true;\r\n            listener();\r\n        });\r\n        return;\r\n    }\r\n    const blankUrl = 'about:blank';\r\n    if (win.location.href !== blankUrl ||\r\n        iframeEl.src === blankUrl ||\r\n        iframeEl.src === '') {\r\n        setTimeout(listener, 0);\r\n        return iframeEl.addEventListener('load', listener);\r\n    }\r\n    iframeEl.addEventListener('load', listener);\r\n}\r\nfunction onceStylesheetLoaded(link, listener, styleSheetLoadTimeout) {\r\n    let fired = false;\r\n    let styleSheetLoaded;\r\n    try {\r\n        styleSheetLoaded = link.sheet;\r\n    }\r\n    catch (error) {\r\n        return;\r\n    }\r\n    if (styleSheetLoaded)\r\n        return;\r\n    const timer = setTimeout(() => {\r\n        if (!fired) {\r\n            listener();\r\n            fired = true;\r\n        }\r\n    }, styleSheetLoadTimeout);\r\n    link.addEventListener('load', () => {\r\n        clearTimeout(timer);\r\n        fired = true;\r\n        listener();\r\n    });\r\n}\r\nfunction serializeNode(n, options) {\r\n    const { doc, mirror, blockClass, blockSelector, unblockSelector, maskAllText, maskAttributeFn, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, inlineStylesheet, maskInputOptions = {}, maskTextFn, maskInputFn, dataURLOptions = {}, inlineImages, recordCanvas, keepIframeSrcFn, newlyAddedElement = false, } = options;\r\n    const rootId = getRootId(doc, mirror);\r\n    switch (n.nodeType) {\r\n        case n.DOCUMENT_NODE:\r\n            if (n.compatMode !== 'CSS1Compat') {\r\n                return {\r\n                    type: NodeType.Document,\r\n                    childNodes: [],\r\n                    compatMode: n.compatMode,\r\n                };\r\n            }\r\n            else {\r\n                return {\r\n                    type: NodeType.Document,\r\n                    childNodes: [],\r\n                };\r\n            }\r\n        case n.DOCUMENT_TYPE_NODE:\r\n            return {\r\n                type: NodeType.DocumentType,\r\n                name: n.name,\r\n                publicId: n.publicId,\r\n                systemId: n.systemId,\r\n                rootId,\r\n            };\r\n        case n.ELEMENT_NODE:\r\n            return serializeElementNode(n, {\r\n                doc,\r\n                blockClass,\r\n                blockSelector,\r\n                unblockSelector,\r\n                inlineStylesheet,\r\n                maskAttributeFn,\r\n                maskInputOptions,\r\n                maskInputFn,\r\n                dataURLOptions,\r\n                inlineImages,\r\n                recordCanvas,\r\n                keepIframeSrcFn,\r\n                newlyAddedElement,\r\n                rootId,\r\n                maskAllText,\r\n                maskTextClass,\r\n                unmaskTextClass,\r\n                maskTextSelector,\r\n                unmaskTextSelector,\r\n            });\r\n        case n.TEXT_NODE:\r\n            return serializeTextNode(n, {\r\n                maskAllText,\r\n                maskTextClass,\r\n                unmaskTextClass,\r\n                maskTextSelector,\r\n                unmaskTextSelector,\r\n                maskTextFn,\r\n                maskInputOptions,\r\n                maskInputFn,\r\n                rootId,\r\n            });\r\n        case n.CDATA_SECTION_NODE:\r\n            return {\r\n                type: NodeType.CDATA,\r\n                textContent: '',\r\n                rootId,\r\n            };\r\n        case n.COMMENT_NODE:\r\n            return {\r\n                type: NodeType.Comment,\r\n                textContent: n.textContent || '',\r\n                rootId,\r\n            };\r\n        default:\r\n            return false;\r\n    }\r\n}\r\nfunction getRootId(doc, mirror) {\r\n    if (!mirror.hasNode(doc))\r\n        return undefined;\r\n    const docId = mirror.getId(doc);\r\n    return docId === 1 ? undefined : docId;\r\n}\r\nfunction serializeTextNode(n, options) {\r\n    const { maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, maskTextFn, maskInputOptions, maskInputFn, rootId, } = options;\r\n    const parentTagName = n.parentNode && n.parentNode.tagName;\r\n    let textContent = n.textContent;\r\n    const isStyle = parentTagName === 'STYLE' ? true : undefined;\r\n    const isScript = parentTagName === 'SCRIPT' ? true : undefined;\r\n    const isTextarea = parentTagName === 'TEXTAREA' ? true : undefined;\r\n    if (isStyle && textContent) {\r\n        try {\r\n            if (n.nextSibling || n.previousSibling) {\r\n            }\r\n            else if (n.parentNode.sheet?.cssRules) {\r\n                textContent = stringifyStylesheet(n.parentNode.sheet);\r\n            }\r\n        }\r\n        catch (err) {\r\n            console.warn(`Cannot get CSS styles from text's parentNode. Error: ${err}`, n);\r\n        }\r\n        textContent = absoluteToStylesheet(textContent, getHref());\r\n    }\r\n    if (isScript) {\r\n        textContent = 'SCRIPT_PLACEHOLDER';\r\n    }\r\n    const forceMask = needMaskingText(n, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, maskAllText);\r\n    if (!isStyle && !isScript && !isTextarea && textContent && forceMask) {\r\n        textContent = maskTextFn\r\n            ? maskTextFn(textContent)\r\n            : textContent.replace(/[\\S]/g, '*');\r\n    }\r\n    if (isTextarea && textContent && (maskInputOptions.textarea || forceMask)) {\r\n        textContent = maskInputFn\r\n            ? maskInputFn(textContent, n.parentNode)\r\n            : textContent.replace(/[\\S]/g, '*');\r\n    }\r\n    if (parentTagName === 'OPTION' && textContent) {\r\n        const isInputMasked = shouldMaskInput({\r\n            type: null,\r\n            tagName: parentTagName,\r\n            maskInputOptions,\r\n        });\r\n        textContent = maskInputValue({\r\n            isMasked: needMaskingText(n, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, isInputMasked),\r\n            element: n,\r\n            value: textContent,\r\n            maskInputFn,\r\n        });\r\n    }\r\n    return {\r\n        type: NodeType.Text,\r\n        textContent: textContent || '',\r\n        isStyle,\r\n        rootId,\r\n    };\r\n}\r\nfunction serializeElementNode(n, options) {\r\n    const { doc, blockClass, blockSelector, unblockSelector, inlineStylesheet, maskInputOptions = {}, maskAttributeFn, maskInputFn, dataURLOptions = {}, inlineImages, recordCanvas, keepIframeSrcFn, newlyAddedElement = false, rootId, maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, } = options;\r\n    const needBlock = _isBlockedElement(n, blockClass, blockSelector, unblockSelector);\r\n    const tagName = getValidTagName(n);\r\n    let attributes = {};\r\n    const len = n.attributes.length;\r\n    for (let i = 0; i < len; i++) {\r\n        const attr = n.attributes[i];\r\n        if (attr.name && !ignoreAttribute(tagName, attr.name, attr.value)) {\r\n            attributes[attr.name] = transformAttribute(doc, tagName, toLowerCase(attr.name), attr.value, n, maskAttributeFn);\r\n        }\r\n    }\r\n    if (tagName === 'link' && inlineStylesheet) {\r\n        const stylesheet = Array.from(doc.styleSheets).find((s) => {\r\n            return s.href === n.href;\r\n        });\r\n        let cssText = null;\r\n        if (stylesheet) {\r\n            cssText = stringifyStylesheet(stylesheet);\r\n        }\r\n        if (cssText) {\r\n            delete attributes.rel;\r\n            delete attributes.href;\r\n            attributes._cssText = absoluteToStylesheet(cssText, stylesheet.href);\r\n        }\r\n    }\r\n    if (tagName === 'style' &&\r\n        n.sheet &&\r\n        !(n.innerText || n.textContent || '').trim().length) {\r\n        const cssText = stringifyStylesheet(n.sheet);\r\n        if (cssText) {\r\n            attributes._cssText = absoluteToStylesheet(cssText, getHref());\r\n        }\r\n    }\r\n    if (tagName === 'input' ||\r\n        tagName === 'textarea' ||\r\n        tagName === 'select' ||\r\n        tagName === 'option') {\r\n        const el = n;\r\n        const type = getInputType(el);\r\n        const value = getInputValue(el, toUpperCase(tagName), type);\r\n        const checked = el.checked;\r\n        if (type !== 'submit' && type !== 'button' && value) {\r\n            const forceMask = needMaskingText(el, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, shouldMaskInput({\r\n                type,\r\n                tagName: toUpperCase(tagName),\r\n                maskInputOptions,\r\n            }));\r\n            attributes.value = maskInputValue({\r\n                isMasked: forceMask,\r\n                element: el,\r\n                value,\r\n                maskInputFn,\r\n            });\r\n        }\r\n        if (checked) {\r\n            attributes.checked = checked;\r\n        }\r\n    }\r\n    if (tagName === 'option') {\r\n        if (n.selected && !maskInputOptions['select']) {\r\n            attributes.selected = true;\r\n        }\r\n        else {\r\n            delete attributes.selected;\r\n        }\r\n    }\r\n    if (tagName === 'canvas' && recordCanvas) {\r\n        if (n.__context === '2d') {\r\n            if (!is2DCanvasBlank(n)) {\r\n                attributes.rr_dataURL = n.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            }\r\n        }\r\n        else if (!('__context' in n)) {\r\n            const canvasDataURL = n.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            const blankCanvas = document.createElement('canvas');\r\n            blankCanvas.width = n.width;\r\n            blankCanvas.height = n.height;\r\n            const blankCanvasDataURL = blankCanvas.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            if (canvasDataURL !== blankCanvasDataURL) {\r\n                attributes.rr_dataURL = canvasDataURL;\r\n            }\r\n        }\r\n    }\r\n    if (tagName === 'img' && inlineImages) {\r\n        if (!canvasService) {\r\n            canvasService = doc.createElement('canvas');\r\n            canvasCtx = canvasService.getContext('2d');\r\n        }\r\n        const image = n;\r\n        const oldValue = image.crossOrigin;\r\n        image.crossOrigin = 'anonymous';\r\n        const recordInlineImage = () => {\r\n            image.removeEventListener('load', recordInlineImage);\r\n            try {\r\n                canvasService.width = image.naturalWidth;\r\n                canvasService.height = image.naturalHeight;\r\n                canvasCtx.drawImage(image, 0, 0);\r\n                attributes.rr_dataURL = canvasService.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            }\r\n            catch (err) {\r\n                console.warn(`Cannot inline img src=${image.currentSrc}! Error: ${err}`);\r\n            }\r\n            oldValue\r\n                ? (attributes.crossOrigin = oldValue)\r\n                : image.removeAttribute('crossorigin');\r\n        };\r\n        if (image.complete && image.naturalWidth !== 0)\r\n            recordInlineImage();\r\n        else\r\n            image.addEventListener('load', recordInlineImage);\r\n    }\r\n    if (tagName === 'audio' || tagName === 'video') {\r\n        attributes.rr_mediaState = n.paused\r\n            ? 'paused'\r\n            : 'played';\r\n        attributes.rr_mediaCurrentTime = n.currentTime;\r\n    }\r\n    if (!newlyAddedElement) {\r\n        if (n.scrollLeft) {\r\n            attributes.rr_scrollLeft = n.scrollLeft;\r\n        }\r\n        if (n.scrollTop) {\r\n            attributes.rr_scrollTop = n.scrollTop;\r\n        }\r\n    }\r\n    if (needBlock) {\r\n        const { width, height } = n.getBoundingClientRect();\r\n        attributes = {\r\n            class: attributes.class,\r\n            rr_width: `${width}px`,\r\n            rr_height: `${height}px`,\r\n        };\r\n    }\r\n    if (tagName === 'iframe' && !keepIframeSrcFn(attributes.src)) {\r\n        if (!n.contentDocument) {\r\n            attributes.rr_src = attributes.src;\r\n        }\r\n        delete attributes.src;\r\n    }\r\n    let isCustomElement;\r\n    try {\r\n        if (customElements.get(tagName))\r\n            isCustomElement = true;\r\n    }\r\n    catch (e) {\r\n    }\r\n    return {\r\n        type: NodeType.Element,\r\n        tagName,\r\n        attributes,\r\n        childNodes: [],\r\n        isSVG: isSVGElement(n) || undefined,\r\n        needBlock,\r\n        rootId,\r\n        isCustom: isCustomElement,\r\n    };\r\n}\r\nfunction lowerIfExists(maybeAttr) {\r\n    if (maybeAttr === undefined || maybeAttr === null) {\r\n        return '';\r\n    }\r\n    else {\r\n        return maybeAttr.toLowerCase();\r\n    }\r\n}\r\nfunction slimDOMExcluded(sn, slimDOMOptions) {\r\n    if (slimDOMOptions.comment && sn.type === NodeType.Comment) {\r\n        return true;\r\n    }\r\n    else if (sn.type === NodeType.Element) {\r\n        if (slimDOMOptions.script &&\r\n            (sn.tagName === 'script' ||\r\n                (sn.tagName === 'link' &&\r\n                    (sn.attributes.rel === 'preload' ||\r\n                        sn.attributes.rel === 'modulepreload') &&\r\n                    sn.attributes.as === 'script') ||\r\n                (sn.tagName === 'link' &&\r\n                    sn.attributes.rel === 'prefetch' &&\r\n                    typeof sn.attributes.href === 'string' &&\r\n                    sn.attributes.href.endsWith('.js')))) {\r\n            return true;\r\n        }\r\n        else if (slimDOMOptions.headFavicon &&\r\n            ((sn.tagName === 'link' && sn.attributes.rel === 'shortcut icon') ||\r\n                (sn.tagName === 'meta' &&\r\n                    (lowerIfExists(sn.attributes.name).match(/^msapplication-tile(image|color)$/) ||\r\n                        lowerIfExists(sn.attributes.name) === 'application-name' ||\r\n                        lowerIfExists(sn.attributes.rel) === 'icon' ||\r\n                        lowerIfExists(sn.attributes.rel) === 'apple-touch-icon' ||\r\n                        lowerIfExists(sn.attributes.rel) === 'shortcut icon')))) {\r\n            return true;\r\n        }\r\n        else if (sn.tagName === 'meta') {\r\n            if (slimDOMOptions.headMetaDescKeywords &&\r\n                lowerIfExists(sn.attributes.name).match(/^description|keywords$/)) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaSocial &&\r\n                (lowerIfExists(sn.attributes.property).match(/^(og|twitter|fb):/) ||\r\n                    lowerIfExists(sn.attributes.name).match(/^(og|twitter):/) ||\r\n                    lowerIfExists(sn.attributes.name) === 'pinterest')) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaRobots &&\r\n                (lowerIfExists(sn.attributes.name) === 'robots' ||\r\n                    lowerIfExists(sn.attributes.name) === 'googlebot' ||\r\n                    lowerIfExists(sn.attributes.name) === 'bingbot')) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaHttpEquiv &&\r\n                sn.attributes['http-equiv'] !== undefined) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaAuthorship &&\r\n                (lowerIfExists(sn.attributes.name) === 'author' ||\r\n                    lowerIfExists(sn.attributes.name) === 'generator' ||\r\n                    lowerIfExists(sn.attributes.name) === 'framework' ||\r\n                    lowerIfExists(sn.attributes.name) === 'publisher' ||\r\n                    lowerIfExists(sn.attributes.name) === 'progid' ||\r\n                    lowerIfExists(sn.attributes.property).match(/^article:/) ||\r\n                    lowerIfExists(sn.attributes.property).match(/^product:/))) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaVerification &&\r\n                (lowerIfExists(sn.attributes.name) === 'google-site-verification' ||\r\n                    lowerIfExists(sn.attributes.name) === 'yandex-verification' ||\r\n                    lowerIfExists(sn.attributes.name) === 'csrf-token' ||\r\n                    lowerIfExists(sn.attributes.name) === 'p:domain_verify' ||\r\n                    lowerIfExists(sn.attributes.name) === 'verify-v1' ||\r\n                    lowerIfExists(sn.attributes.name) === 'verification' ||\r\n                    lowerIfExists(sn.attributes.name) === 'shopify-checkout-api-token')) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction serializeNodeWithId(n, options) {\r\n    const { doc, mirror, blockClass, blockSelector, unblockSelector, maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, skipChild = false, inlineStylesheet = true, maskInputOptions = {}, maskAttributeFn, maskTextFn, maskInputFn, slimDOMOptions, dataURLOptions = {}, inlineImages = false, recordCanvas = false, onSerialize, onIframeLoad, iframeLoadTimeout = 5000, onStylesheetLoad, stylesheetLoadTimeout = 5000, keepIframeSrcFn = () => false, newlyAddedElement = false, } = options;\r\n    let { preserveWhiteSpace = true } = options;\r\n    const _serializedNode = serializeNode(n, {\r\n        doc,\r\n        mirror,\r\n        blockClass,\r\n        blockSelector,\r\n        maskAllText,\r\n        unblockSelector,\r\n        maskTextClass,\r\n        unmaskTextClass,\r\n        maskTextSelector,\r\n        unmaskTextSelector,\r\n        inlineStylesheet,\r\n        maskInputOptions,\r\n        maskAttributeFn,\r\n        maskTextFn,\r\n        maskInputFn,\r\n        dataURLOptions,\r\n        inlineImages,\r\n        recordCanvas,\r\n        keepIframeSrcFn,\r\n        newlyAddedElement,\r\n    });\r\n    if (!_serializedNode) {\r\n        console.warn(n, 'not serialized');\r\n        return null;\r\n    }\r\n    let id;\r\n    if (mirror.hasNode(n)) {\r\n        id = mirror.getId(n);\r\n    }\r\n    else if (slimDOMExcluded(_serializedNode, slimDOMOptions) ||\r\n        (!preserveWhiteSpace &&\r\n            _serializedNode.type === NodeType.Text &&\r\n            !_serializedNode.isStyle &&\r\n            !_serializedNode.textContent.replace(/^\\s+|\\s+$/gm, '').length)) {\r\n        id = IGNORED_NODE;\r\n    }\r\n    else {\r\n        id = genId();\r\n    }\r\n    const serializedNode = Object.assign(_serializedNode, { id });\r\n    mirror.add(n, serializedNode);\r\n    if (id === IGNORED_NODE) {\r\n        return null;\r\n    }\r\n    if (onSerialize) {\r\n        onSerialize(n);\r\n    }\r\n    let recordChild = !skipChild;\r\n    if (serializedNode.type === NodeType.Element) {\r\n        recordChild = recordChild && !serializedNode.needBlock;\r\n        delete serializedNode.needBlock;\r\n        const shadowRoot = n.shadowRoot;\r\n        if (shadowRoot && isNativeShadowDom(shadowRoot))\r\n            serializedNode.isShadowHost = true;\r\n    }\r\n    if ((serializedNode.type === NodeType.Document ||\r\n        serializedNode.type === NodeType.Element) &&\r\n        recordChild) {\r\n        if (slimDOMOptions.headWhitespace &&\r\n            serializedNode.type === NodeType.Element &&\r\n            serializedNode.tagName === 'head') {\r\n            preserveWhiteSpace = false;\r\n        }\r\n        const bypassOptions = {\r\n            doc,\r\n            mirror,\r\n            blockClass,\r\n            blockSelector,\r\n            maskAllText,\r\n            unblockSelector,\r\n            maskTextClass,\r\n            unmaskTextClass,\r\n            maskTextSelector,\r\n            unmaskTextSelector,\r\n            skipChild,\r\n            inlineStylesheet,\r\n            maskInputOptions,\r\n            maskAttributeFn,\r\n            maskTextFn,\r\n            maskInputFn,\r\n            slimDOMOptions,\r\n            dataURLOptions,\r\n            inlineImages,\r\n            recordCanvas,\r\n            preserveWhiteSpace,\r\n            onSerialize,\r\n            onIframeLoad,\r\n            iframeLoadTimeout,\r\n            onStylesheetLoad,\r\n            stylesheetLoadTimeout,\r\n            keepIframeSrcFn,\r\n        };\r\n        for (const childN of Array.from(n.childNodes)) {\r\n            const serializedChildNode = serializeNodeWithId(childN, bypassOptions);\r\n            if (serializedChildNode) {\r\n                serializedNode.childNodes.push(serializedChildNode);\r\n            }\r\n        }\r\n        if (isElement(n) && n.shadowRoot) {\r\n            for (const childN of Array.from(n.shadowRoot.childNodes)) {\r\n                const serializedChildNode = serializeNodeWithId(childN, bypassOptions);\r\n                if (serializedChildNode) {\r\n                    isNativeShadowDom(n.shadowRoot) &&\r\n                        (serializedChildNode.isShadow = true);\r\n                    serializedNode.childNodes.push(serializedChildNode);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (n.parentNode &&\r\n        isShadowRoot(n.parentNode) &&\r\n        isNativeShadowDom(n.parentNode)) {\r\n        serializedNode.isShadow = true;\r\n    }\r\n    if (serializedNode.type === NodeType.Element &&\r\n        serializedNode.tagName === 'iframe') {\r\n        onceIframeLoaded(n, () => {\r\n            const iframeDoc = n.contentDocument;\r\n            if (iframeDoc && onIframeLoad) {\r\n                const serializedIframeNode = serializeNodeWithId(iframeDoc, {\r\n                    doc: iframeDoc,\r\n                    mirror,\r\n                    blockClass,\r\n                    blockSelector,\r\n                    unblockSelector,\r\n                    maskAllText,\r\n                    maskTextClass,\r\n                    unmaskTextClass,\r\n                    maskTextSelector,\r\n                    unmaskTextSelector,\r\n                    skipChild: false,\r\n                    inlineStylesheet,\r\n                    maskInputOptions,\r\n                    maskAttributeFn,\r\n                    maskTextFn,\r\n                    maskInputFn,\r\n                    slimDOMOptions,\r\n                    dataURLOptions,\r\n                    inlineImages,\r\n                    recordCanvas,\r\n                    preserveWhiteSpace,\r\n                    onSerialize,\r\n                    onIframeLoad,\r\n                    iframeLoadTimeout,\r\n                    onStylesheetLoad,\r\n                    stylesheetLoadTimeout,\r\n                    keepIframeSrcFn,\r\n                });\r\n                if (serializedIframeNode) {\r\n                    onIframeLoad(n, serializedIframeNode);\r\n                }\r\n            }\r\n        }, iframeLoadTimeout);\r\n    }\r\n    if (serializedNode.type === NodeType.Element &&\r\n        serializedNode.tagName === 'link' &&\r\n        serializedNode.attributes.rel === 'stylesheet') {\r\n        onceStylesheetLoaded(n, () => {\r\n            if (onStylesheetLoad) {\r\n                const serializedLinkNode = serializeNodeWithId(n, {\r\n                    doc,\r\n                    mirror,\r\n                    blockClass,\r\n                    blockSelector,\r\n                    unblockSelector,\r\n                    maskAllText,\r\n                    maskTextClass,\r\n                    unmaskTextClass,\r\n                    maskTextSelector,\r\n                    unmaskTextSelector,\r\n                    skipChild: false,\r\n                    inlineStylesheet,\r\n                    maskInputOptions,\r\n                    maskAttributeFn,\r\n                    maskTextFn,\r\n                    maskInputFn,\r\n                    slimDOMOptions,\r\n                    dataURLOptions,\r\n                    inlineImages,\r\n                    recordCanvas,\r\n                    preserveWhiteSpace,\r\n                    onSerialize,\r\n                    onIframeLoad,\r\n                    iframeLoadTimeout,\r\n                    onStylesheetLoad,\r\n                    stylesheetLoadTimeout,\r\n                    keepIframeSrcFn,\r\n                });\r\n                if (serializedLinkNode) {\r\n                    onStylesheetLoad(n, serializedLinkNode);\r\n                }\r\n            }\r\n        }, stylesheetLoadTimeout);\r\n    }\r\n    return serializedNode;\r\n}\r\nfunction snapshot(n, options) {\r\n    const { mirror = new Mirror(), blockClass = 'rr-block', blockSelector = null, unblockSelector = null, maskAllText = false, maskTextClass = 'rr-mask', unmaskTextClass = null, maskTextSelector = null, unmaskTextSelector = null, inlineStylesheet = true, inlineImages = false, recordCanvas = false, maskAllInputs = false, maskAttributeFn, maskTextFn, maskInputFn, slimDOM = false, dataURLOptions, preserveWhiteSpace, onSerialize, onIframeLoad, iframeLoadTimeout, onStylesheetLoad, stylesheetLoadTimeout, keepIframeSrcFn = () => false, } = options || {};\r\n    const maskInputOptions = maskAllInputs === true\r\n        ? {\r\n            color: true,\r\n            date: true,\r\n            'datetime-local': true,\r\n            email: true,\r\n            month: true,\r\n            number: true,\r\n            range: true,\r\n            search: true,\r\n            tel: true,\r\n            text: true,\r\n            time: true,\r\n            url: true,\r\n            week: true,\r\n            textarea: true,\r\n            select: true,\r\n        }\r\n        : maskAllInputs === false\r\n            ? {}\r\n            : maskAllInputs;\r\n    const slimDOMOptions = slimDOM === true || slimDOM === 'all'\r\n        ?\r\n            {\r\n                script: true,\r\n                comment: true,\r\n                headFavicon: true,\r\n                headWhitespace: true,\r\n                headMetaDescKeywords: slimDOM === 'all',\r\n                headMetaSocial: true,\r\n                headMetaRobots: true,\r\n                headMetaHttpEquiv: true,\r\n                headMetaAuthorship: true,\r\n                headMetaVerification: true,\r\n            }\r\n        : slimDOM === false\r\n            ? {}\r\n            : slimDOM;\r\n    return serializeNodeWithId(n, {\r\n        doc: n,\r\n        mirror,\r\n        blockClass,\r\n        blockSelector,\r\n        unblockSelector,\r\n        maskAllText,\r\n        maskTextClass,\r\n        unmaskTextClass,\r\n        maskTextSelector,\r\n        unmaskTextSelector,\r\n        skipChild: false,\r\n        inlineStylesheet,\r\n        maskInputOptions,\r\n        maskAttributeFn,\r\n        maskTextFn,\r\n        maskInputFn,\r\n        slimDOMOptions,\r\n        dataURLOptions,\r\n        inlineImages,\r\n        recordCanvas,\r\n        preserveWhiteSpace,\r\n        onSerialize,\r\n        onIframeLoad,\r\n        iframeLoadTimeout,\r\n        onStylesheetLoad,\r\n        stylesheetLoadTimeout,\r\n        keepIframeSrcFn,\r\n        newlyAddedElement: false,\r\n    });\r\n}\r\n\nconst commentre = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\r\nfunction parse(css, options = {}) {\r\n    let lineno = 1;\r\n    let column = 1;\r\n    function updatePosition(str) {\r\n        const lines = str.match(/\\n/g);\r\n        if (lines) {\r\n            lineno += lines.length;\r\n        }\r\n        const i = str.lastIndexOf('\\n');\r\n        column = i === -1 ? column + str.length : str.length - i;\r\n    }\r\n    function position() {\r\n        const start = { line: lineno, column };\r\n        return (node) => {\r\n            node.position = new Position(start);\r\n            whitespace();\r\n            return node;\r\n        };\r\n    }\r\n    class Position {\r\n        constructor(start) {\r\n            this.start = start;\r\n            this.end = { line: lineno, column };\r\n            this.source = options.source;\r\n        }\r\n    }\r\n    Position.prototype.content = css;\r\n    const errorsList = [];\r\n    function error(msg) {\r\n        const err = new Error(`${options.source || ''}:${lineno}:${column}: ${msg}`);\r\n        err.reason = msg;\r\n        err.filename = options.source;\r\n        err.line = lineno;\r\n        err.column = column;\r\n        err.source = css;\r\n        if (options.silent) {\r\n            errorsList.push(err);\r\n        }\r\n        else {\r\n            throw err;\r\n        }\r\n    }\r\n    function stylesheet() {\r\n        const rulesList = rules();\r\n        return {\r\n            type: 'stylesheet',\r\n            stylesheet: {\r\n                source: options.source,\r\n                rules: rulesList,\r\n                parsingErrors: errorsList,\r\n            },\r\n        };\r\n    }\r\n    function open() {\r\n        return match(/^{\\s*/);\r\n    }\r\n    function close() {\r\n        return match(/^}/);\r\n    }\r\n    function rules() {\r\n        let node;\r\n        const rules = [];\r\n        whitespace();\r\n        comments(rules);\r\n        while (css.length && css.charAt(0) !== '}' && (node = atrule() || rule())) {\r\n            if (node) {\r\n                rules.push(node);\r\n                comments(rules);\r\n            }\r\n        }\r\n        return rules;\r\n    }\r\n    function match(re) {\r\n        const m = re.exec(css);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const str = m[0];\r\n        updatePosition(str);\r\n        css = css.slice(str.length);\r\n        return m;\r\n    }\r\n    function whitespace() {\r\n        match(/^\\s*/);\r\n    }\r\n    function comments(rules = []) {\r\n        let c;\r\n        while ((c = comment())) {\r\n            if (c) {\r\n                rules.push(c);\r\n            }\r\n            c = comment();\r\n        }\r\n        return rules;\r\n    }\r\n    function comment() {\r\n        const pos = position();\r\n        if ('/' !== css.charAt(0) || '*' !== css.charAt(1)) {\r\n            return;\r\n        }\r\n        let i = 2;\r\n        while ('' !== css.charAt(i) &&\r\n            ('*' !== css.charAt(i) || '/' !== css.charAt(i + 1))) {\r\n            ++i;\r\n        }\r\n        i += 2;\r\n        if ('' === css.charAt(i - 1)) {\r\n            return error('End of comment missing');\r\n        }\r\n        const str = css.slice(2, i - 2);\r\n        column += 2;\r\n        updatePosition(str);\r\n        css = css.slice(i);\r\n        column += 2;\r\n        return pos({\r\n            type: 'comment',\r\n            comment: str,\r\n        });\r\n    }\r\n    function selector() {\r\n        const m = match(/^([^{]+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        return trim(m[0])\r\n            .replace(/\\/\\*([^*]|[\\r\\n]|(\\*+([^*/]|[\\r\\n])))*\\*\\/+/g, '')\r\n            .replace(/\"(?:\\\\\"|[^\"])*\"|'(?:\\\\'|[^'])*'/g, (m) => {\r\n            return m.replace(/,/g, '\\u200C');\r\n        })\r\n            .split(/\\s*(?![^(]*\\)),\\s*/)\r\n            .map((s) => {\r\n            return s.replace(/\\u200C/g, ',');\r\n        });\r\n    }\r\n    function declaration() {\r\n        const pos = position();\r\n        const propMatch = match(/^(\\*?[-#\\/\\*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/);\r\n        if (!propMatch) {\r\n            return;\r\n        }\r\n        const prop = trim(propMatch[0]);\r\n        if (!match(/^:\\s*/)) {\r\n            return error(`property missing ':'`);\r\n        }\r\n        const val = match(/^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^\\)]*?\\)|[^};])+)/);\r\n        const ret = pos({\r\n            type: 'declaration',\r\n            property: prop.replace(commentre, ''),\r\n            value: val ? trim(val[0]).replace(commentre, '') : '',\r\n        });\r\n        match(/^[;\\s]*/);\r\n        return ret;\r\n    }\r\n    function declarations() {\r\n        const decls = [];\r\n        if (!open()) {\r\n            return error(`missing '{'`);\r\n        }\r\n        comments(decls);\r\n        let decl;\r\n        while ((decl = declaration())) {\r\n            if (decl !== false) {\r\n                decls.push(decl);\r\n                comments(decls);\r\n            }\r\n            decl = declaration();\r\n        }\r\n        if (!close()) {\r\n            return error(`missing '}'`);\r\n        }\r\n        return decls;\r\n    }\r\n    function keyframe() {\r\n        let m;\r\n        const vals = [];\r\n        const pos = position();\r\n        while ((m = match(/^((\\d+\\.\\d+|\\.\\d+|\\d+)%?|[a-z]+)\\s*/))) {\r\n            vals.push(m[1]);\r\n            match(/^,\\s*/);\r\n        }\r\n        if (!vals.length) {\r\n            return;\r\n        }\r\n        return pos({\r\n            type: 'keyframe',\r\n            values: vals,\r\n            declarations: declarations(),\r\n        });\r\n    }\r\n    function atkeyframes() {\r\n        const pos = position();\r\n        let m = match(/^@([-\\w]+)?keyframes\\s*/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const vendor = m[1];\r\n        m = match(/^([-\\w]+)\\s*/);\r\n        if (!m) {\r\n            return error('@keyframes missing name');\r\n        }\r\n        const name = m[1];\r\n        if (!open()) {\r\n            return error(`@keyframes missing '{'`);\r\n        }\r\n        let frame;\r\n        let frames = comments();\r\n        while ((frame = keyframe())) {\r\n            frames.push(frame);\r\n            frames = frames.concat(comments());\r\n        }\r\n        if (!close()) {\r\n            return error(`@keyframes missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'keyframes',\r\n            name,\r\n            vendor,\r\n            keyframes: frames,\r\n        });\r\n    }\r\n    function atsupports() {\r\n        const pos = position();\r\n        const m = match(/^@supports *([^{]+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const supports = trim(m[1]);\r\n        if (!open()) {\r\n            return error(`@supports missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@supports missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'supports',\r\n            supports,\r\n            rules: style,\r\n        });\r\n    }\r\n    function athost() {\r\n        const pos = position();\r\n        const m = match(/^@host\\s*/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        if (!open()) {\r\n            return error(`@host missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@host missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'host',\r\n            rules: style,\r\n        });\r\n    }\r\n    function atmedia() {\r\n        const pos = position();\r\n        const m = match(/^@media *([^{]+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const media = trim(m[1]);\r\n        if (!open()) {\r\n            return error(`@media missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@media missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'media',\r\n            media,\r\n            rules: style,\r\n        });\r\n    }\r\n    function atcustommedia() {\r\n        const pos = position();\r\n        const m = match(/^@custom-media\\s+(--[^\\s]+)\\s*([^{;]+);/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        return pos({\r\n            type: 'custom-media',\r\n            name: trim(m[1]),\r\n            media: trim(m[2]),\r\n        });\r\n    }\r\n    function atpage() {\r\n        const pos = position();\r\n        const m = match(/^@page */);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const sel = selector() || [];\r\n        if (!open()) {\r\n            return error(`@page missing '{'`);\r\n        }\r\n        let decls = comments();\r\n        let decl;\r\n        while ((decl = declaration())) {\r\n            decls.push(decl);\r\n            decls = decls.concat(comments());\r\n        }\r\n        if (!close()) {\r\n            return error(`@page missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'page',\r\n            selectors: sel,\r\n            declarations: decls,\r\n        });\r\n    }\r\n    function atdocument() {\r\n        const pos = position();\r\n        const m = match(/^@([-\\w]+)?document *([^{]+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const vendor = trim(m[1]);\r\n        const doc = trim(m[2]);\r\n        if (!open()) {\r\n            return error(`@document missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@document missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'document',\r\n            document: doc,\r\n            vendor,\r\n            rules: style,\r\n        });\r\n    }\r\n    function atfontface() {\r\n        const pos = position();\r\n        const m = match(/^@font-face\\s*/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        if (!open()) {\r\n            return error(`@font-face missing '{'`);\r\n        }\r\n        let decls = comments();\r\n        let decl;\r\n        while ((decl = declaration())) {\r\n            decls.push(decl);\r\n            decls = decls.concat(comments());\r\n        }\r\n        if (!close()) {\r\n            return error(`@font-face missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'font-face',\r\n            declarations: decls,\r\n        });\r\n    }\r\n    const atimport = _compileAtrule('import');\r\n    const atcharset = _compileAtrule('charset');\r\n    const atnamespace = _compileAtrule('namespace');\r\n    function _compileAtrule(name) {\r\n        const re = new RegExp('^@' + name + '\\\\s*([^;]+);');\r\n        return () => {\r\n            const pos = position();\r\n            const m = match(re);\r\n            if (!m) {\r\n                return;\r\n            }\r\n            const ret = { type: name };\r\n            ret[name] = m[1].trim();\r\n            return pos(ret);\r\n        };\r\n    }\r\n    function atrule() {\r\n        if (css[0] !== '@') {\r\n            return;\r\n        }\r\n        return (atkeyframes() ||\r\n            atmedia() ||\r\n            atcustommedia() ||\r\n            atsupports() ||\r\n            atimport() ||\r\n            atcharset() ||\r\n            atnamespace() ||\r\n            atdocument() ||\r\n            atpage() ||\r\n            athost() ||\r\n            atfontface());\r\n    }\r\n    function rule() {\r\n        const pos = position();\r\n        const sel = selector();\r\n        if (!sel) {\r\n            return error('selector missing');\r\n        }\r\n        comments();\r\n        return pos({\r\n            type: 'rule',\r\n            selectors: sel,\r\n            declarations: declarations(),\r\n        });\r\n    }\r\n    return addParent(stylesheet());\r\n}\r\nfunction trim(str) {\r\n    return str ? str.replace(/^\\s+|\\s+$/g, '') : '';\r\n}\r\nfunction addParent(obj, parent) {\r\n    const isNode = obj && typeof obj.type === 'string';\r\n    const childParent = isNode ? obj : parent;\r\n    for (const k of Object.keys(obj)) {\r\n        const value = obj[k];\r\n        if (Array.isArray(value)) {\r\n            value.forEach((v) => {\r\n                addParent(v, childParent);\r\n            });\r\n        }\r\n        else if (value && typeof value === 'object') {\r\n            addParent(value, childParent);\r\n        }\r\n    }\r\n    if (isNode) {\r\n        Object.defineProperty(obj, 'parent', {\r\n            configurable: true,\r\n            writable: true,\r\n            enumerable: false,\r\n            value: parent || null,\r\n        });\r\n    }\r\n    return obj;\r\n}\n\nconst tagMap = {\r\n    script: 'noscript',\r\n    altglyph: 'altGlyph',\r\n    altglyphdef: 'altGlyphDef',\r\n    altglyphitem: 'altGlyphItem',\r\n    animatecolor: 'animateColor',\r\n    animatemotion: 'animateMotion',\r\n    animatetransform: 'animateTransform',\r\n    clippath: 'clipPath',\r\n    feblend: 'feBlend',\r\n    fecolormatrix: 'feColorMatrix',\r\n    fecomponenttransfer: 'feComponentTransfer',\r\n    fecomposite: 'feComposite',\r\n    feconvolvematrix: 'feConvolveMatrix',\r\n    fediffuselighting: 'feDiffuseLighting',\r\n    fedisplacementmap: 'feDisplacementMap',\r\n    fedistantlight: 'feDistantLight',\r\n    fedropshadow: 'feDropShadow',\r\n    feflood: 'feFlood',\r\n    fefunca: 'feFuncA',\r\n    fefuncb: 'feFuncB',\r\n    fefuncg: 'feFuncG',\r\n    fefuncr: 'feFuncR',\r\n    fegaussianblur: 'feGaussianBlur',\r\n    feimage: 'feImage',\r\n    femerge: 'feMerge',\r\n    femergenode: 'feMergeNode',\r\n    femorphology: 'feMorphology',\r\n    feoffset: 'feOffset',\r\n    fepointlight: 'fePointLight',\r\n    fespecularlighting: 'feSpecularLighting',\r\n    fespotlight: 'feSpotLight',\r\n    fetile: 'feTile',\r\n    feturbulence: 'feTurbulence',\r\n    foreignobject: 'foreignObject',\r\n    glyphref: 'glyphRef',\r\n    lineargradient: 'linearGradient',\r\n    radialgradient: 'radialGradient',\r\n};\r\nfunction getTagName(n) {\r\n    let tagName = tagMap[n.tagName] ? tagMap[n.tagName] : n.tagName;\r\n    if (tagName === 'link' && n.attributes._cssText) {\r\n        tagName = 'style';\r\n    }\r\n    return tagName;\r\n}\r\nfunction escapeRegExp(str) {\r\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\r\n}\r\nconst HOVER_SELECTOR = /([^\\\\]):hover/;\r\nconst HOVER_SELECTOR_GLOBAL = new RegExp(HOVER_SELECTOR.source, 'g');\r\nfunction addHoverClass(cssText, cache) {\r\n    const cachedStyle = cache?.stylesWithHoverClass.get(cssText);\r\n    if (cachedStyle)\r\n        return cachedStyle;\r\n    if (cssText.length >= 1000000) {\r\n        return cssText;\r\n    }\r\n    const ast = parse(cssText, {\r\n        silent: true,\r\n    });\r\n    if (!ast.stylesheet) {\r\n        return cssText;\r\n    }\r\n    const selectors = [];\r\n    ast.stylesheet.rules.forEach((rule) => {\r\n        if ('selectors' in rule) {\r\n            (rule.selectors || []).forEach((selector) => {\r\n                if (HOVER_SELECTOR.test(selector)) {\r\n                    selectors.push(selector);\r\n                }\r\n            });\r\n        }\r\n    });\r\n    if (selectors.length === 0) {\r\n        return cssText;\r\n    }\r\n    const selectorMatcher = new RegExp(selectors\r\n        .filter((selector, index) => selectors.indexOf(selector) === index)\r\n        .sort((a, b) => b.length - a.length)\r\n        .map((selector) => {\r\n        return escapeRegExp(selector);\r\n    })\r\n        .join('|'), 'g');\r\n    const result = cssText.replace(selectorMatcher, (selector) => {\r\n        const newSelector = selector.replace(HOVER_SELECTOR_GLOBAL, '$1.\\\\:hover');\r\n        return `${selector}, ${newSelector}`;\r\n    });\r\n    cache?.stylesWithHoverClass.set(cssText, result);\r\n    return result;\r\n}\r\nfunction createCache() {\r\n    const stylesWithHoverClass = new Map();\r\n    return {\r\n        stylesWithHoverClass,\r\n    };\r\n}\r\nfunction buildNode(n, options) {\r\n    const { doc, hackCss, cache } = options;\r\n    switch (n.type) {\r\n        case NodeType.Document:\r\n            return doc.implementation.createDocument(null, '', null);\r\n        case NodeType.DocumentType:\r\n            return doc.implementation.createDocumentType(n.name || 'html', n.publicId, n.systemId);\r\n        case NodeType.Element: {\r\n            const tagName = getTagName(n);\r\n            let node;\r\n            if (n.isSVG) {\r\n                node = doc.createElementNS('http://www.w3.org/2000/svg', tagName);\r\n            }\r\n            else {\r\n                if (n.isCustom &&\r\n                    doc.defaultView?.customElements &&\r\n                    !doc.defaultView.customElements.get(n.tagName))\r\n                    doc.defaultView.customElements.define(n.tagName, class extends doc.defaultView.HTMLElement {\r\n                    });\r\n                node = doc.createElement(tagName);\r\n            }\r\n            const specialAttributes = {};\r\n            for (const name in n.attributes) {\r\n                if (!Object.prototype.hasOwnProperty.call(n.attributes, name)) {\r\n                    continue;\r\n                }\r\n                let value = n.attributes[name];\r\n                if (tagName === 'option' &&\r\n                    name === 'selected' &&\r\n                    value === false) {\r\n                    continue;\r\n                }\r\n                if (value === null) {\r\n                    continue;\r\n                }\r\n                if (value === true)\r\n                    value = '';\r\n                if (name.startsWith('rr_')) {\r\n                    specialAttributes[name] = value;\r\n                    continue;\r\n                }\r\n                const isTextarea = tagName === 'textarea' && name === 'value';\r\n                const isRemoteOrDynamicCss = tagName === 'style' && name === '_cssText';\r\n                if (isRemoteOrDynamicCss && hackCss && typeof value === 'string') {\r\n                    value = addHoverClass(value, cache);\r\n                }\r\n                if ((isTextarea || isRemoteOrDynamicCss) && typeof value === 'string') {\r\n                    const child = doc.createTextNode(value);\r\n                    for (const c of Array.from(node.childNodes)) {\r\n                        if (c.nodeType === node.TEXT_NODE) {\r\n                            node.removeChild(c);\r\n                        }\r\n                    }\r\n                    node.appendChild(child);\r\n                    continue;\r\n                }\r\n                try {\r\n                    if (n.isSVG && name === 'xlink:href') {\r\n                        node.setAttributeNS('http://www.w3.org/1999/xlink', name, value.toString());\r\n                    }\r\n                    else if (name === 'onload' ||\r\n                        name === 'onclick' ||\r\n                        name.substring(0, 7) === 'onmouse') {\r\n                        node.setAttribute('_' + name, value.toString());\r\n                    }\r\n                    else if (tagName === 'meta' &&\r\n                        n.attributes['http-equiv'] === 'Content-Security-Policy' &&\r\n                        name === 'content') {\r\n                        node.setAttribute('csp-content', value.toString());\r\n                        continue;\r\n                    }\r\n                    else if (tagName === 'link' &&\r\n                        (n.attributes.rel === 'preload' ||\r\n                            n.attributes.rel === 'modulepreload') &&\r\n                        n.attributes.as === 'script') {\r\n                    }\r\n                    else if (tagName === 'link' &&\r\n                        n.attributes.rel === 'prefetch' &&\r\n                        typeof n.attributes.href === 'string' &&\r\n                        n.attributes.href.endsWith('.js')) {\r\n                    }\r\n                    else if (tagName === 'img' &&\r\n                        n.attributes.srcset &&\r\n                        n.attributes.rr_dataURL) {\r\n                        node.setAttribute('rrweb-original-srcset', n.attributes.srcset);\r\n                    }\r\n                    else {\r\n                        node.setAttribute(name, value.toString());\r\n                    }\r\n                }\r\n                catch (error) {\r\n                }\r\n            }\r\n            for (const name in specialAttributes) {\r\n                const value = specialAttributes[name];\r\n                if (tagName === 'canvas' && name === 'rr_dataURL') {\r\n                    const image = document.createElement('img');\r\n                    image.onload = () => {\r\n                        const ctx = node.getContext('2d');\r\n                        if (ctx) {\r\n                            ctx.drawImage(image, 0, 0, image.width, image.height);\r\n                        }\r\n                    };\r\n                    image.src = value.toString();\r\n                    if (node.RRNodeType)\r\n                        node.rr_dataURL = value.toString();\r\n                }\r\n                else if (tagName === 'img' && name === 'rr_dataURL') {\r\n                    const image = node;\r\n                    if (!image.currentSrc.startsWith('data:')) {\r\n                        image.setAttribute('rrweb-original-src', n.attributes.src);\r\n                        image.src = value.toString();\r\n                    }\r\n                }\r\n                if (name === 'rr_width') {\r\n                    node.style.setProperty('width', value.toString());\r\n                }\r\n                else if (name === 'rr_height') {\r\n                    node.style.setProperty('height', value.toString());\r\n                }\r\n                else if (name === 'rr_mediaCurrentTime' &&\r\n                    typeof value === 'number') {\r\n                    node.currentTime = value;\r\n                }\r\n                else if (name === 'rr_mediaState') {\r\n                    switch (value) {\r\n                        case 'played':\r\n                            node\r\n                                .play()\r\n                                .catch((e) => console.warn('media playback error', e));\r\n                            break;\r\n                        case 'paused':\r\n                            node.pause();\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            if (n.isShadowHost) {\r\n                if (!node.shadowRoot) {\r\n                    node.attachShadow({ mode: 'open' });\r\n                }\r\n                else {\r\n                    while (node.shadowRoot.firstChild) {\r\n                        node.shadowRoot.removeChild(node.shadowRoot.firstChild);\r\n                    }\r\n                }\r\n            }\r\n            return node;\r\n        }\r\n        case NodeType.Text:\r\n            return doc.createTextNode(n.isStyle && hackCss\r\n                ? addHoverClass(n.textContent, cache)\r\n                : n.textContent);\r\n        case NodeType.CDATA:\r\n            return doc.createCDATASection(n.textContent);\r\n        case NodeType.Comment:\r\n            return doc.createComment(n.textContent);\r\n        default:\r\n            return null;\r\n    }\r\n}\r\nfunction buildNodeWithSN(n, options) {\r\n    const { doc, mirror, skipChild = false, hackCss = true, afterAppend, cache, } = options;\r\n    if (mirror.has(n.id)) {\r\n        const nodeInMirror = mirror.getNode(n.id);\r\n        const meta = mirror.getMeta(nodeInMirror);\r\n        if (isNodeMetaEqual(meta, n))\r\n            return mirror.getNode(n.id);\r\n    }\r\n    let node = buildNode(n, { doc, hackCss, cache });\r\n    if (!node) {\r\n        return null;\r\n    }\r\n    if (n.rootId && mirror.getNode(n.rootId) !== doc) {\r\n        mirror.replace(n.rootId, doc);\r\n    }\r\n    if (n.type === NodeType.Document) {\r\n        doc.close();\r\n        doc.open();\r\n        if (n.compatMode === 'BackCompat' &&\r\n            n.childNodes &&\r\n            n.childNodes[0].type !== NodeType.DocumentType) {\r\n            if (n.childNodes[0].type === NodeType.Element &&\r\n                'xmlns' in n.childNodes[0].attributes &&\r\n                n.childNodes[0].attributes.xmlns === 'http://www.w3.org/1999/xhtml') {\r\n                doc.write('<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"\">');\r\n            }\r\n            else {\r\n                doc.write('<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"\">');\r\n            }\r\n        }\r\n        node = doc;\r\n    }\r\n    mirror.add(node, n);\r\n    if ((n.type === NodeType.Document || n.type === NodeType.Element) &&\r\n        !skipChild) {\r\n        for (const childN of n.childNodes) {\r\n            const childNode = buildNodeWithSN(childN, {\r\n                doc,\r\n                mirror,\r\n                skipChild: false,\r\n                hackCss,\r\n                afterAppend,\r\n                cache,\r\n            });\r\n            if (!childNode) {\r\n                console.warn('Failed to rebuild', childN);\r\n                continue;\r\n            }\r\n            if (childN.isShadow && isElement(node) && node.shadowRoot) {\r\n                node.shadowRoot.appendChild(childNode);\r\n            }\r\n            else if (n.type === NodeType.Document &&\r\n                childN.type == NodeType.Element) {\r\n                const htmlElement = childNode;\r\n                let body = null;\r\n                htmlElement.childNodes.forEach((child) => {\r\n                    if (child.nodeName === 'BODY')\r\n                        body = child;\r\n                });\r\n                if (body) {\r\n                    htmlElement.removeChild(body);\r\n                    node.appendChild(childNode);\r\n                    htmlElement.appendChild(body);\r\n                }\r\n                else {\r\n                    node.appendChild(childNode);\r\n                }\r\n            }\r\n            else {\r\n                node.appendChild(childNode);\r\n            }\r\n            if (afterAppend) {\r\n                afterAppend(childNode, childN.id);\r\n            }\r\n        }\r\n    }\r\n    return node;\r\n}\r\nfunction visit(mirror, onVisit) {\r\n    function walk(node) {\r\n        onVisit(node);\r\n    }\r\n    for (const id of mirror.getIds()) {\r\n        if (mirror.has(id)) {\r\n            walk(mirror.getNode(id));\r\n        }\r\n    }\r\n}\r\nfunction handleScroll(node, mirror) {\r\n    const n = mirror.getMeta(node);\r\n    if (n?.type !== NodeType.Element) {\r\n        return;\r\n    }\r\n    const el = node;\r\n    for (const name in n.attributes) {\r\n        if (!(Object.prototype.hasOwnProperty.call(n.attributes, name) &&\r\n            name.startsWith('rr_'))) {\r\n            continue;\r\n        }\r\n        const value = n.attributes[name];\r\n        if (name === 'rr_scrollLeft') {\r\n            el.scrollLeft = value;\r\n        }\r\n        if (name === 'rr_scrollTop') {\r\n            el.scrollTop = value;\r\n        }\r\n    }\r\n}\r\nfunction rebuild(n, options) {\r\n    const { doc, onVisit, hackCss = true, afterAppend, cache, mirror = new Mirror(), } = options;\r\n    const node = buildNodeWithSN(n, {\r\n        doc,\r\n        mirror,\r\n        skipChild: false,\r\n        hackCss,\r\n        afterAppend,\r\n        cache,\r\n    });\r\n    visit(mirror, (visitedNode) => {\r\n        if (onVisit) {\r\n            onVisit(visitedNode);\r\n        }\r\n        handleScroll(visitedNode, mirror);\r\n    });\r\n    return node;\r\n}\n\nexport { IGNORED_NODE, Mirror, NodeType, addHoverClass, buildNodeWithSN, createCache, createMatchPredicate, createMirror, distanceToMatch, escapeImportStatement, fixSafariColons, genId, getInputType, getInputValue, ignoreAttribute, is2DCanvasBlank, isCSSImportRule, isCSSStyleRule, isElement, isNativeShadowDom, isNodeMetaEqual, isShadowRoot, maskInputValue, needMaskingText, rebuild, serializeNodeWithId, shouldMaskInput, snapshot, stringifyRule, stringifyStylesheet, toLowerCase, toUpperCase, transformAttribute };\n", "import { distanceToMatch, IGNORED_NODE, isShadowRoot, createMatchPredicate } from '../../rrweb-snapshot/es/rrweb-snapshot.js';\n\nfunction on(type, fn, target = document) {\r\n    const options = { capture: true, passive: true };\r\n    target.addEventListener(type, fn, options);\r\n    return () => target.removeEventListener(type, fn, options);\r\n}\r\nconst DEPARTED_MIRROR_ACCESS_WARNING = 'Please stop import mirror directly. Instead of that,' +\r\n    '\\r\\n' +\r\n    'now you can use replayer.getMirror() to access the mirror instance of a replayer,' +\r\n    '\\r\\n' +\r\n    'or you can use record.mirror to access the mirror instance during recording.';\r\nlet _mirror = {\r\n    map: {},\r\n    getId() {\r\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\r\n        return -1;\r\n    },\r\n    getNode() {\r\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\r\n        return null;\r\n    },\r\n    removeNodeFromMap() {\r\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\r\n    },\r\n    has() {\r\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\r\n        return false;\r\n    },\r\n    reset() {\r\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\r\n    },\r\n};\r\nif (typeof window !== 'undefined' && window.Proxy && window.Reflect) {\r\n    _mirror = new Proxy(_mirror, {\r\n        get(target, prop, receiver) {\r\n            if (prop === 'map') {\r\n                console.error(DEPARTED_MIRROR_ACCESS_WARNING);\r\n            }\r\n            return Reflect.get(target, prop, receiver);\r\n        },\r\n    });\r\n}\r\nfunction throttle(func, wait, options = {}) {\r\n    let timeout = null;\r\n    let previous = 0;\r\n    return function (...args) {\r\n        const now = Date.now();\r\n        if (!previous && options.leading === false) {\r\n            previous = now;\r\n        }\r\n        const remaining = wait - (now - previous);\r\n        const context = this;\r\n        if (remaining <= 0 || remaining > wait) {\r\n            if (timeout) {\r\n                clearTimeout(timeout);\r\n                timeout = null;\r\n            }\r\n            previous = now;\r\n            func.apply(context, args);\r\n        }\r\n        else if (!timeout && options.trailing !== false) {\r\n            timeout = setTimeout(() => {\r\n                previous = options.leading === false ? 0 : Date.now();\r\n                timeout = null;\r\n                func.apply(context, args);\r\n            }, remaining);\r\n        }\r\n    };\r\n}\r\nfunction hookSetter(target, key, d, isRevoked, win = window) {\r\n    const original = win.Object.getOwnPropertyDescriptor(target, key);\r\n    win.Object.defineProperty(target, key, isRevoked\r\n        ? d\r\n        : {\r\n            set(value) {\r\n                setTimeout(() => {\r\n                    d.set.call(this, value);\r\n                }, 0);\r\n                if (original && original.set) {\r\n                    original.set.call(this, value);\r\n                }\r\n            },\r\n        });\r\n    return () => hookSetter(target, key, original || {}, true);\r\n}\r\nfunction patch(source, name, replacement) {\r\n    try {\r\n        if (!(name in source)) {\r\n            return () => {\r\n            };\r\n        }\r\n        const original = source[name];\r\n        const wrapped = replacement(original);\r\n        if (typeof wrapped === 'function') {\r\n            wrapped.prototype = wrapped.prototype || {};\r\n            Object.defineProperties(wrapped, {\r\n                __rrweb_original__: {\r\n                    enumerable: false,\r\n                    value: original,\r\n                },\r\n            });\r\n        }\r\n        source[name] = wrapped;\r\n        return () => {\r\n            source[name] = original;\r\n        };\r\n    }\r\n    catch {\r\n        return () => {\r\n        };\r\n    }\r\n}\r\nlet nowTimestamp = Date.now;\r\nif (!(/[1-9][0-9]{12}/.test(Date.now().toString()))) {\r\n    nowTimestamp = () => new Date().getTime();\r\n}\r\nfunction getWindowScroll(win) {\r\n    const doc = win.document;\r\n    return {\r\n        left: doc.scrollingElement\r\n            ? doc.scrollingElement.scrollLeft\r\n            : win.pageXOffset !== undefined\r\n                ? win.pageXOffset\r\n                : doc?.documentElement.scrollLeft ||\r\n                    doc?.body?.parentElement?.scrollLeft ||\r\n                    doc?.body?.scrollLeft ||\r\n                    0,\r\n        top: doc.scrollingElement\r\n            ? doc.scrollingElement.scrollTop\r\n            : win.pageYOffset !== undefined\r\n                ? win.pageYOffset\r\n                : doc?.documentElement.scrollTop ||\r\n                    doc?.body?.parentElement?.scrollTop ||\r\n                    doc?.body?.scrollTop ||\r\n                    0,\r\n    };\r\n}\r\nfunction getWindowHeight() {\r\n    return (window.innerHeight ||\r\n        (document.documentElement && document.documentElement.clientHeight) ||\r\n        (document.body && document.body.clientHeight));\r\n}\r\nfunction getWindowWidth() {\r\n    return (window.innerWidth ||\r\n        (document.documentElement && document.documentElement.clientWidth) ||\r\n        (document.body && document.body.clientWidth));\r\n}\r\nfunction isBlocked(node, blockClass, blockSelector, unblockSelector, checkAncestors) {\r\n    if (!node) {\r\n        return false;\r\n    }\r\n    const el = node.nodeType === node.ELEMENT_NODE\r\n        ? node\r\n        : node.parentElement;\r\n    if (!el)\r\n        return false;\r\n    const blockedPredicate = createMatchPredicate(blockClass, blockSelector);\r\n    if (!checkAncestors) {\r\n        const isUnblocked = unblockSelector && el.matches(unblockSelector);\r\n        return blockedPredicate(el) && !isUnblocked;\r\n    }\r\n    const blockDistance = distanceToMatch(el, blockedPredicate);\r\n    let unblockDistance = -1;\r\n    if (blockDistance < 0) {\r\n        return false;\r\n    }\r\n    if (unblockSelector) {\r\n        unblockDistance = distanceToMatch(el, createMatchPredicate(null, unblockSelector));\r\n    }\r\n    if (blockDistance > -1 && unblockDistance < 0) {\r\n        return true;\r\n    }\r\n    return blockDistance < unblockDistance;\r\n}\r\nfunction isSerialized(n, mirror) {\r\n    return mirror.getId(n) !== -1;\r\n}\r\nfunction isIgnored(n, mirror) {\r\n    return mirror.getId(n) === IGNORED_NODE;\r\n}\r\nfunction isAncestorRemoved(target, mirror) {\r\n    if (isShadowRoot(target)) {\r\n        return false;\r\n    }\r\n    const id = mirror.getId(target);\r\n    if (!mirror.has(id)) {\r\n        return true;\r\n    }\r\n    if (target.parentNode &&\r\n        target.parentNode.nodeType === target.DOCUMENT_NODE) {\r\n        return false;\r\n    }\r\n    if (!target.parentNode) {\r\n        return true;\r\n    }\r\n    return isAncestorRemoved(target.parentNode, mirror);\r\n}\r\nfunction legacy_isTouchEvent(event) {\r\n    return Boolean(event.changedTouches);\r\n}\r\nfunction polyfill(win = window) {\r\n    if ('NodeList' in win && !win.NodeList.prototype.forEach) {\r\n        win.NodeList.prototype.forEach = Array.prototype\r\n            .forEach;\r\n    }\r\n    if ('DOMTokenList' in win && !win.DOMTokenList.prototype.forEach) {\r\n        win.DOMTokenList.prototype.forEach = Array.prototype\r\n            .forEach;\r\n    }\r\n    if (!Node.prototype.contains) {\r\n        Node.prototype.contains = (...args) => {\r\n            let node = args[0];\r\n            if (!(0 in args)) {\r\n                throw new TypeError('1 argument is required');\r\n            }\r\n            do {\r\n                if (this === node) {\r\n                    return true;\r\n                }\r\n            } while ((node = node && node.parentNode));\r\n            return false;\r\n        };\r\n    }\r\n}\r\nfunction queueToResolveTrees(queue) {\r\n    const queueNodeMap = {};\r\n    const putIntoMap = (m, parent) => {\r\n        const nodeInTree = {\r\n            value: m,\r\n            parent,\r\n            children: [],\r\n        };\r\n        queueNodeMap[m.node.id] = nodeInTree;\r\n        return nodeInTree;\r\n    };\r\n    const queueNodeTrees = [];\r\n    for (const mutation of queue) {\r\n        const { nextId, parentId } = mutation;\r\n        if (nextId && nextId in queueNodeMap) {\r\n            const nextInTree = queueNodeMap[nextId];\r\n            if (nextInTree.parent) {\r\n                const idx = nextInTree.parent.children.indexOf(nextInTree);\r\n                nextInTree.parent.children.splice(idx, 0, putIntoMap(mutation, nextInTree.parent));\r\n            }\r\n            else {\r\n                const idx = queueNodeTrees.indexOf(nextInTree);\r\n                queueNodeTrees.splice(idx, 0, putIntoMap(mutation, null));\r\n            }\r\n            continue;\r\n        }\r\n        if (parentId in queueNodeMap) {\r\n            const parentInTree = queueNodeMap[parentId];\r\n            parentInTree.children.push(putIntoMap(mutation, parentInTree));\r\n            continue;\r\n        }\r\n        queueNodeTrees.push(putIntoMap(mutation, null));\r\n    }\r\n    return queueNodeTrees;\r\n}\r\nfunction iterateResolveTree(tree, cb) {\r\n    cb(tree.value);\r\n    for (let i = tree.children.length - 1; i >= 0; i--) {\r\n        iterateResolveTree(tree.children[i], cb);\r\n    }\r\n}\r\nfunction isSerializedIframe(n, mirror) {\r\n    return Boolean(n.nodeName === 'IFRAME' && mirror.getMeta(n));\r\n}\r\nfunction isSerializedStylesheet(n, mirror) {\r\n    return Boolean(n.nodeName === 'LINK' &&\r\n        n.nodeType === n.ELEMENT_NODE &&\r\n        n.getAttribute &&\r\n        n.getAttribute('rel') === 'stylesheet' &&\r\n        mirror.getMeta(n));\r\n}\r\nfunction getBaseDimension(node, rootIframe) {\r\n    const frameElement = node.ownerDocument?.defaultView?.frameElement;\r\n    if (!frameElement || frameElement === rootIframe) {\r\n        return {\r\n            x: 0,\r\n            y: 0,\r\n            relativeScale: 1,\r\n            absoluteScale: 1,\r\n        };\r\n    }\r\n    const frameDimension = frameElement.getBoundingClientRect();\r\n    const frameBaseDimension = getBaseDimension(frameElement, rootIframe);\r\n    const relativeScale = frameDimension.height / frameElement.clientHeight;\r\n    return {\r\n        x: frameDimension.x * frameBaseDimension.relativeScale +\r\n            frameBaseDimension.x,\r\n        y: frameDimension.y * frameBaseDimension.relativeScale +\r\n            frameBaseDimension.y,\r\n        relativeScale,\r\n        absoluteScale: frameBaseDimension.absoluteScale * relativeScale,\r\n    };\r\n}\r\nfunction hasShadowRoot(n) {\r\n    return Boolean(n?.shadowRoot);\r\n}\r\nfunction getNestedRule(rules, position) {\r\n    const rule = rules[position[0]];\r\n    if (position.length === 1) {\r\n        return rule;\r\n    }\r\n    else {\r\n        return getNestedRule(rule.cssRules[position[1]].cssRules, position.slice(2));\r\n    }\r\n}\r\nfunction getPositionsAndIndex(nestedIndex) {\r\n    const positions = [...nestedIndex];\r\n    const index = positions.pop();\r\n    return { positions, index };\r\n}\r\nfunction uniqueTextMutations(mutations) {\r\n    const idSet = new Set();\r\n    const uniqueMutations = [];\r\n    for (let i = mutations.length; i--;) {\r\n        const mutation = mutations[i];\r\n        if (!idSet.has(mutation.id)) {\r\n            uniqueMutations.push(mutation);\r\n            idSet.add(mutation.id);\r\n        }\r\n    }\r\n    return uniqueMutations;\r\n}\r\nclass StyleSheetMirror {\r\n    constructor() {\r\n        this.id = 1;\r\n        this.styleIDMap = new WeakMap();\r\n        this.idStyleMap = new Map();\r\n    }\r\n    getId(stylesheet) {\r\n        return this.styleIDMap.get(stylesheet) ?? -1;\r\n    }\r\n    has(stylesheet) {\r\n        return this.styleIDMap.has(stylesheet);\r\n    }\r\n    add(stylesheet, id) {\r\n        if (this.has(stylesheet))\r\n            return this.getId(stylesheet);\r\n        let newId;\r\n        if (id === undefined) {\r\n            newId = this.id++;\r\n        }\r\n        else\r\n            newId = id;\r\n        this.styleIDMap.set(stylesheet, newId);\r\n        this.idStyleMap.set(newId, stylesheet);\r\n        return newId;\r\n    }\r\n    getStyle(id) {\r\n        return this.idStyleMap.get(id) || null;\r\n    }\r\n    reset() {\r\n        this.styleIDMap = new WeakMap();\r\n        this.idStyleMap = new Map();\r\n        this.id = 1;\r\n    }\r\n    generateId() {\r\n        return this.id++;\r\n    }\r\n}\r\nfunction getShadowHost(n) {\r\n    let shadowHost = null;\r\n    if (n.getRootNode?.()?.nodeType === Node.DOCUMENT_FRAGMENT_NODE &&\r\n        n.getRootNode().host)\r\n        shadowHost = n.getRootNode().host;\r\n    return shadowHost;\r\n}\r\nfunction getRootShadowHost(n) {\r\n    let rootShadowHost = n;\r\n    let shadowHost;\r\n    while ((shadowHost = getShadowHost(rootShadowHost)))\r\n        rootShadowHost = shadowHost;\r\n    return rootShadowHost;\r\n}\r\nfunction shadowHostInDom(n) {\r\n    const doc = n.ownerDocument;\r\n    if (!doc)\r\n        return false;\r\n    const shadowHost = getRootShadowHost(n);\r\n    return doc.contains(shadowHost);\r\n}\r\nfunction inDom(n) {\r\n    const doc = n.ownerDocument;\r\n    if (!doc)\r\n        return false;\r\n    return doc.contains(n) || shadowHostInDom(n);\r\n}\r\nlet cachedRequestAnimationFrameImplementation;\r\nfunction getRequestAnimationFrameImplementation() {\r\n    if (cachedRequestAnimationFrameImplementation) {\r\n        return cachedRequestAnimationFrameImplementation;\r\n    }\r\n    const document = window.document;\r\n    let requestAnimationFrameImplementation = window.requestAnimationFrame;\r\n    if (document && typeof document.createElement === 'function') {\r\n        try {\r\n            const sandbox = document.createElement('iframe');\r\n            sandbox.hidden = true;\r\n            document.head.appendChild(sandbox);\r\n            const contentWindow = sandbox.contentWindow;\r\n            if (contentWindow && contentWindow.requestAnimationFrame) {\r\n                requestAnimationFrameImplementation =\r\n                    contentWindow.requestAnimationFrame;\r\n            }\r\n            document.head.removeChild(sandbox);\r\n        }\r\n        catch (e) {\r\n        }\r\n    }\r\n    return (cachedRequestAnimationFrameImplementation =\r\n        requestAnimationFrameImplementation.bind(window));\r\n}\r\nfunction onRequestAnimationFrame(...rest) {\r\n    return getRequestAnimationFrameImplementation()(...rest);\r\n}\n\nexport { StyleSheetMirror, _mirror, getBaseDimension, getNestedRule, getPositionsAndIndex, getRootShadowHost, getShadowHost, getWindowHeight, getWindowScroll, getWindowWidth, hasShadowRoot, hookSetter, inDom, isAncestorRemoved, isBlocked, isIgnored, isSerialized, isSerializedIframe, isSerializedStylesheet, iterateResolveTree, legacy_isTouchEvent, nowTimestamp, on, onRequestAnimationFrame, patch, polyfill, queueToResolveTrees, shadowHostInDom, throttle, uniqueTextMutations };\n", "var EventType = /* @__PURE__ */ ((EventType2) => {\n  EventType2[EventType2[\"DomContentLoaded\"] = 0] = \"DomContentLoaded\";\n  EventType2[EventType2[\"Load\"] = 1] = \"Load\";\n  EventType2[EventType2[\"FullSnapshot\"] = 2] = \"FullSnapshot\";\n  EventType2[EventType2[\"IncrementalSnapshot\"] = 3] = \"IncrementalSnapshot\";\n  EventType2[EventType2[\"Meta\"] = 4] = \"Meta\";\n  EventType2[EventType2[\"Custom\"] = 5] = \"Custom\";\n  EventType2[EventType2[\"Plugin\"] = 6] = \"Plugin\";\n  return EventType2;\n})(EventType || {});\nvar IncrementalSource = /* @__PURE__ */ ((IncrementalSource2) => {\n  IncrementalSource2[IncrementalSource2[\"Mutation\"] = 0] = \"Mutation\";\n  IncrementalSource2[IncrementalSource2[\"MouseMove\"] = 1] = \"MouseMove\";\n  IncrementalSource2[IncrementalSource2[\"MouseInteraction\"] = 2] = \"MouseInteraction\";\n  IncrementalSource2[IncrementalSource2[\"Scroll\"] = 3] = \"Scroll\";\n  IncrementalSource2[IncrementalSource2[\"ViewportResize\"] = 4] = \"ViewportResize\";\n  IncrementalSource2[IncrementalSource2[\"Input\"] = 5] = \"Input\";\n  IncrementalSource2[IncrementalSource2[\"TouchMove\"] = 6] = \"TouchMove\";\n  IncrementalSource2[IncrementalSource2[\"MediaInteraction\"] = 7] = \"MediaInteraction\";\n  IncrementalSource2[IncrementalSource2[\"StyleSheetRule\"] = 8] = \"StyleSheetRule\";\n  IncrementalSource2[IncrementalSource2[\"CanvasMutation\"] = 9] = \"CanvasMutation\";\n  IncrementalSource2[IncrementalSource2[\"Font\"] = 10] = \"Font\";\n  IncrementalSource2[IncrementalSource2[\"Log\"] = 11] = \"Log\";\n  IncrementalSource2[IncrementalSource2[\"Drag\"] = 12] = \"Drag\";\n  IncrementalSource2[IncrementalSource2[\"StyleDeclaration\"] = 13] = \"StyleDeclaration\";\n  IncrementalSource2[IncrementalSource2[\"Selection\"] = 14] = \"Selection\";\n  IncrementalSource2[IncrementalSource2[\"AdoptedStyleSheet\"] = 15] = \"AdoptedStyleSheet\";\n  IncrementalSource2[IncrementalSource2[\"CustomElement\"] = 16] = \"CustomElement\";\n  return IncrementalSource2;\n})(IncrementalSource || {});\nvar MouseInteractions = /* @__PURE__ */ ((MouseInteractions2) => {\n  MouseInteractions2[MouseInteractions2[\"MouseUp\"] = 0] = \"MouseUp\";\n  MouseInteractions2[MouseInteractions2[\"MouseDown\"] = 1] = \"MouseDown\";\n  MouseInteractions2[MouseInteractions2[\"Click\"] = 2] = \"Click\";\n  MouseInteractions2[MouseInteractions2[\"ContextMenu\"] = 3] = \"ContextMenu\";\n  MouseInteractions2[MouseInteractions2[\"DblClick\"] = 4] = \"DblClick\";\n  MouseInteractions2[MouseInteractions2[\"Focus\"] = 5] = \"Focus\";\n  MouseInteractions2[MouseInteractions2[\"Blur\"] = 6] = \"Blur\";\n  MouseInteractions2[MouseInteractions2[\"TouchStart\"] = 7] = \"TouchStart\";\n  MouseInteractions2[MouseInteractions2[\"TouchMove_Departed\"] = 8] = \"TouchMove_Departed\";\n  MouseInteractions2[MouseInteractions2[\"TouchEnd\"] = 9] = \"TouchEnd\";\n  MouseInteractions2[MouseInteractions2[\"TouchCancel\"] = 10] = \"TouchCancel\";\n  return MouseInteractions2;\n})(MouseInteractions || {});\nvar PointerTypes = /* @__PURE__ */ ((PointerTypes2) => {\n  PointerTypes2[PointerTypes2[\"Mouse\"] = 0] = \"Mouse\";\n  PointerTypes2[PointerTypes2[\"Pen\"] = 1] = \"Pen\";\n  PointerTypes2[PointerTypes2[\"Touch\"] = 2] = \"Touch\";\n  return PointerTypes2;\n})(PointerTypes || {});\nvar CanvasContext = /* @__PURE__ */ ((CanvasContext2) => {\n  CanvasContext2[CanvasContext2[\"2D\"] = 0] = \"2D\";\n  CanvasContext2[CanvasContext2[\"WebGL\"] = 1] = \"WebGL\";\n  CanvasContext2[CanvasContext2[\"WebGL2\"] = 2] = \"WebGL2\";\n  return CanvasContext2;\n})(CanvasContext || {});\nvar ReplayerEvents = /* @__PURE__ */ ((ReplayerEvents2) => {\n  ReplayerEvents2[\"Start\"] = \"start\";\n  ReplayerEvents2[\"Pause\"] = \"pause\";\n  ReplayerEvents2[\"Resume\"] = \"resume\";\n  ReplayerEvents2[\"Resize\"] = \"resize\";\n  ReplayerEvents2[\"Finish\"] = \"finish\";\n  ReplayerEvents2[\"FullsnapshotRebuilded\"] = \"fullsnapshot-rebuilded\";\n  ReplayerEvents2[\"LoadStylesheetStart\"] = \"load-stylesheet-start\";\n  ReplayerEvents2[\"LoadStylesheetEnd\"] = \"load-stylesheet-end\";\n  ReplayerEvents2[\"SkipStart\"] = \"skip-start\";\n  ReplayerEvents2[\"SkipEnd\"] = \"skip-end\";\n  ReplayerEvents2[\"MouseInteraction\"] = \"mouse-interaction\";\n  ReplayerEvents2[\"EventCast\"] = \"event-cast\";\n  ReplayerEvents2[\"CustomEvent\"] = \"custom-event\";\n  ReplayerEvents2[\"Flush\"] = \"flush\";\n  ReplayerEvents2[\"StateChange\"] = \"state-change\";\n  ReplayerEvents2[\"PlayBack\"] = \"play-back\";\n  ReplayerEvents2[\"Destroy\"] = \"destroy\";\n  return ReplayerEvents2;\n})(ReplayerEvents || {});\n\nexport { CanvasContext, EventType, IncrementalSource, MouseInteractions, PointerTypes, ReplayerEvents };\n", "import { isShadowRoot, isNativeShadowDom, getInputType, getInputValue, shouldMaskInput, needMaskingText, maskInputValue, ignoreAttribute, transformAttribute, toLowerCase, IGNORED_NODE, serializeNodeWithId } from '../../../rrweb-snapshot/es/rrweb-snapshot.js';\nimport { isIgnored, isBlocked, isSerialized, isAncestorRemoved, hasShadowRoot, inDom, getShadowHost, isSerializedIframe, isSerializedStylesheet } from '../utils.js';\n\nfunction isNodeInLinkedList(n) {\r\n    return '__ln' in n;\r\n}\r\nclass DoubleLinkedList {\r\n    constructor() {\r\n        this.length = 0;\r\n        this.head = null;\r\n        this.tail = null;\r\n    }\r\n    get(position) {\r\n        if (position >= this.length) {\r\n            throw new Error('Position outside of list range');\r\n        }\r\n        let current = this.head;\r\n        for (let index = 0; index < position; index++) {\r\n            current = current?.next || null;\r\n        }\r\n        return current;\r\n    }\r\n    addNode(n) {\r\n        const node = {\r\n            value: n,\r\n            previous: null,\r\n            next: null,\r\n        };\r\n        n.__ln = node;\r\n        if (n.previousSibling && isNodeInLinkedList(n.previousSibling)) {\r\n            const current = n.previousSibling.__ln.next;\r\n            node.next = current;\r\n            node.previous = n.previousSibling.__ln;\r\n            n.previousSibling.__ln.next = node;\r\n            if (current) {\r\n                current.previous = node;\r\n            }\r\n        }\r\n        else if (n.nextSibling &&\r\n            isNodeInLinkedList(n.nextSibling) &&\r\n            n.nextSibling.__ln.previous) {\r\n            const current = n.nextSibling.__ln.previous;\r\n            node.previous = current;\r\n            node.next = n.nextSibling.__ln;\r\n            n.nextSibling.__ln.previous = node;\r\n            if (current) {\r\n                current.next = node;\r\n            }\r\n        }\r\n        else {\r\n            if (this.head) {\r\n                this.head.previous = node;\r\n            }\r\n            node.next = this.head;\r\n            this.head = node;\r\n        }\r\n        if (node.next === null) {\r\n            this.tail = node;\r\n        }\r\n        this.length++;\r\n    }\r\n    removeNode(n) {\r\n        const current = n.__ln;\r\n        if (!this.head) {\r\n            return;\r\n        }\r\n        if (!current.previous) {\r\n            this.head = current.next;\r\n            if (this.head) {\r\n                this.head.previous = null;\r\n            }\r\n            else {\r\n                this.tail = null;\r\n            }\r\n        }\r\n        else {\r\n            current.previous.next = current.next;\r\n            if (current.next) {\r\n                current.next.previous = current.previous;\r\n            }\r\n            else {\r\n                this.tail = current.previous;\r\n            }\r\n        }\r\n        if (n.__ln) {\r\n            delete n.__ln;\r\n        }\r\n        this.length--;\r\n    }\r\n}\r\nconst moveKey = (id, parentId) => `${id}@${parentId}`;\r\nclass MutationBuffer {\r\n    constructor() {\r\n        this.frozen = false;\r\n        this.locked = false;\r\n        this.texts = [];\r\n        this.attributes = [];\r\n        this.removes = [];\r\n        this.mapRemoves = [];\r\n        this.movedMap = {};\r\n        this.addedSet = new Set();\r\n        this.movedSet = new Set();\r\n        this.droppedSet = new Set();\r\n        this.processMutations = (mutations) => {\r\n            mutations.forEach(this.processMutation);\r\n            this.emit();\r\n        };\r\n        this.emit = () => {\r\n            if (this.frozen || this.locked) {\r\n                return;\r\n            }\r\n            const adds = [];\r\n            const addedIds = new Set();\r\n            const addList = new DoubleLinkedList();\r\n            const getNextId = (n) => {\r\n                let ns = n;\r\n                let nextId = IGNORED_NODE;\r\n                while (nextId === IGNORED_NODE) {\r\n                    ns = ns && ns.nextSibling;\r\n                    nextId = ns && this.mirror.getId(ns);\r\n                }\r\n                return nextId;\r\n            };\r\n            const pushAdd = (n) => {\r\n                if (!n.parentNode || !inDom(n)) {\r\n                    return;\r\n                }\r\n                const parentId = isShadowRoot(n.parentNode)\r\n                    ? this.mirror.getId(getShadowHost(n))\r\n                    : this.mirror.getId(n.parentNode);\r\n                const nextId = getNextId(n);\r\n                if (parentId === -1 || nextId === -1) {\r\n                    return addList.addNode(n);\r\n                }\r\n                const sn = serializeNodeWithId(n, {\r\n                    doc: this.doc,\r\n                    mirror: this.mirror,\r\n                    blockClass: this.blockClass,\r\n                    blockSelector: this.blockSelector,\r\n                    maskAllText: this.maskAllText,\r\n                    unblockSelector: this.unblockSelector,\r\n                    maskTextClass: this.maskTextClass,\r\n                    unmaskTextClass: this.unmaskTextClass,\r\n                    maskTextSelector: this.maskTextSelector,\r\n                    unmaskTextSelector: this.unmaskTextSelector,\r\n                    skipChild: true,\r\n                    newlyAddedElement: true,\r\n                    inlineStylesheet: this.inlineStylesheet,\r\n                    maskInputOptions: this.maskInputOptions,\r\n                    maskAttributeFn: this.maskAttributeFn,\r\n                    maskTextFn: this.maskTextFn,\r\n                    maskInputFn: this.maskInputFn,\r\n                    slimDOMOptions: this.slimDOMOptions,\r\n                    dataURLOptions: this.dataURLOptions,\r\n                    recordCanvas: this.recordCanvas,\r\n                    inlineImages: this.inlineImages,\r\n                    onSerialize: (currentN) => {\r\n                        if (isSerializedIframe(currentN, this.mirror)) {\r\n                            this.iframeManager.addIframe(currentN);\r\n                        }\r\n                        if (isSerializedStylesheet(currentN, this.mirror)) {\r\n                            this.stylesheetManager.trackLinkElement(currentN);\r\n                        }\r\n                        if (hasShadowRoot(n)) {\r\n                            this.shadowDomManager.addShadowRoot(n.shadowRoot, this.doc);\r\n                        }\r\n                    },\r\n                    onIframeLoad: (iframe, childSn) => {\r\n                        this.iframeManager.attachIframe(iframe, childSn);\r\n                        this.shadowDomManager.observeAttachShadow(iframe);\r\n                    },\r\n                    onStylesheetLoad: (link, childSn) => {\r\n                        this.stylesheetManager.attachLinkElement(link, childSn);\r\n                    },\r\n                });\r\n                if (sn) {\r\n                    adds.push({\r\n                        parentId,\r\n                        nextId,\r\n                        node: sn,\r\n                    });\r\n                    addedIds.add(sn.id);\r\n                }\r\n            };\r\n            while (this.mapRemoves.length) {\r\n                this.mirror.removeNodeFromMap(this.mapRemoves.shift());\r\n            }\r\n            for (const n of this.movedSet) {\r\n                if (isParentRemoved(this.removes, n, this.mirror) &&\r\n                    !this.movedSet.has(n.parentNode)) {\r\n                    continue;\r\n                }\r\n                pushAdd(n);\r\n            }\r\n            for (const n of this.addedSet) {\r\n                if (!isAncestorInSet(this.droppedSet, n) &&\r\n                    !isParentRemoved(this.removes, n, this.mirror)) {\r\n                    pushAdd(n);\r\n                }\r\n                else if (isAncestorInSet(this.movedSet, n)) {\r\n                    pushAdd(n);\r\n                }\r\n                else {\r\n                    this.droppedSet.add(n);\r\n                }\r\n            }\r\n            let candidate = null;\r\n            while (addList.length) {\r\n                let node = null;\r\n                if (candidate) {\r\n                    const parentId = this.mirror.getId(candidate.value.parentNode);\r\n                    const nextId = getNextId(candidate.value);\r\n                    if (parentId !== -1 && nextId !== -1) {\r\n                        node = candidate;\r\n                    }\r\n                }\r\n                if (!node) {\r\n                    let tailNode = addList.tail;\r\n                    while (tailNode) {\r\n                        const _node = tailNode;\r\n                        tailNode = tailNode.previous;\r\n                        if (_node) {\r\n                            const parentId = this.mirror.getId(_node.value.parentNode);\r\n                            const nextId = getNextId(_node.value);\r\n                            if (nextId === -1)\r\n                                continue;\r\n                            else if (parentId !== -1) {\r\n                                node = _node;\r\n                                break;\r\n                            }\r\n                            else {\r\n                                const unhandledNode = _node.value;\r\n                                if (unhandledNode.parentNode &&\r\n                                    unhandledNode.parentNode.nodeType ===\r\n                                        Node.DOCUMENT_FRAGMENT_NODE) {\r\n                                    const shadowHost = unhandledNode.parentNode\r\n                                        .host;\r\n                                    const parentId = this.mirror.getId(shadowHost);\r\n                                    if (parentId !== -1) {\r\n                                        node = _node;\r\n                                        break;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if (!node) {\r\n                    while (addList.head) {\r\n                        addList.removeNode(addList.head.value);\r\n                    }\r\n                    break;\r\n                }\r\n                candidate = node.previous;\r\n                addList.removeNode(node.value);\r\n                pushAdd(node.value);\r\n            }\r\n            const payload = {\r\n                texts: this.texts\r\n                    .map((text) => ({\r\n                    id: this.mirror.getId(text.node),\r\n                    value: text.value,\r\n                }))\r\n                    .filter((text) => !addedIds.has(text.id))\r\n                    .filter((text) => this.mirror.has(text.id)),\r\n                attributes: this.attributes\r\n                    .map((attribute) => {\r\n                    const { attributes } = attribute;\r\n                    if (typeof attributes.style === 'string') {\r\n                        const diffAsStr = JSON.stringify(attribute.styleDiff);\r\n                        const unchangedAsStr = JSON.stringify(attribute._unchangedStyles);\r\n                        if (diffAsStr.length < attributes.style.length) {\r\n                            if ((diffAsStr + unchangedAsStr).split('var(').length ===\r\n                                attributes.style.split('var(').length) {\r\n                                attributes.style = attribute.styleDiff;\r\n                            }\r\n                        }\r\n                    }\r\n                    return {\r\n                        id: this.mirror.getId(attribute.node),\r\n                        attributes: attributes,\r\n                    };\r\n                })\r\n                    .filter((attribute) => !addedIds.has(attribute.id))\r\n                    .filter((attribute) => this.mirror.has(attribute.id)),\r\n                removes: this.removes,\r\n                adds,\r\n            };\r\n            if (!payload.texts.length &&\r\n                !payload.attributes.length &&\r\n                !payload.removes.length &&\r\n                !payload.adds.length) {\r\n                return;\r\n            }\r\n            this.texts = [];\r\n            this.attributes = [];\r\n            this.removes = [];\r\n            this.addedSet = new Set();\r\n            this.movedSet = new Set();\r\n            this.droppedSet = new Set();\r\n            this.movedMap = {};\r\n            this.mutationCb(payload);\r\n        };\r\n        this.processMutation = (m) => {\r\n            if (isIgnored(m.target, this.mirror)) {\r\n                return;\r\n            }\r\n            let unattachedDoc;\r\n            try {\r\n                unattachedDoc = document.implementation.createHTMLDocument();\r\n            }\r\n            catch (e) {\r\n                unattachedDoc = this.doc;\r\n            }\r\n            switch (m.type) {\r\n                case 'characterData': {\r\n                    const value = m.target.textContent;\r\n                    if (!isBlocked(m.target, this.blockClass, this.blockSelector, this.unblockSelector, false) &&\r\n                        value !== m.oldValue) {\r\n                        this.texts.push({\r\n                            value: needMaskingText(m.target, this.maskTextClass, this.maskTextSelector, this.unmaskTextClass, this.unmaskTextSelector, this.maskAllText) && value\r\n                                ? this.maskTextFn\r\n                                    ? this.maskTextFn(value)\r\n                                    : value.replace(/[\\S]/g, '*')\r\n                                : value,\r\n                            node: m.target,\r\n                        });\r\n                    }\r\n                    break;\r\n                }\r\n                case 'attributes': {\r\n                    const target = m.target;\r\n                    let attributeName = m.attributeName;\r\n                    let value = m.target.getAttribute(attributeName);\r\n                    if (attributeName === 'value') {\r\n                        const type = getInputType(target);\r\n                        const tagName = target.tagName;\r\n                        value = getInputValue(target, tagName, type);\r\n                        const isInputMasked = shouldMaskInput({\r\n                            maskInputOptions: this.maskInputOptions,\r\n                            tagName,\r\n                            type,\r\n                        });\r\n                        const forceMask = needMaskingText(m.target, this.maskTextClass, this.maskTextSelector, this.unmaskTextClass, this.unmaskTextSelector, isInputMasked);\r\n                        value = maskInputValue({\r\n                            isMasked: forceMask,\r\n                            element: target,\r\n                            value,\r\n                            maskInputFn: this.maskInputFn,\r\n                        });\r\n                    }\r\n                    if (isBlocked(m.target, this.blockClass, this.blockSelector, this.unblockSelector, false) ||\r\n                        value === m.oldValue) {\r\n                        return;\r\n                    }\r\n                    let item = this.attributes.find((a) => a.node === m.target);\r\n                    if (target.tagName === 'IFRAME' &&\r\n                        attributeName === 'src' &&\r\n                        !this.keepIframeSrcFn(value)) {\r\n                        if (!target.contentDocument) {\r\n                            attributeName = 'rr_src';\r\n                        }\r\n                        else {\r\n                            return;\r\n                        }\r\n                    }\r\n                    if (!item) {\r\n                        item = {\r\n                            node: m.target,\r\n                            attributes: {},\r\n                            styleDiff: {},\r\n                            _unchangedStyles: {},\r\n                        };\r\n                        this.attributes.push(item);\r\n                    }\r\n                    if (attributeName === 'type' &&\r\n                        target.tagName === 'INPUT' &&\r\n                        (m.oldValue || '').toLowerCase() === 'password') {\r\n                        target.setAttribute('data-rr-is-password', 'true');\r\n                    }\r\n                    if (!ignoreAttribute(target.tagName, attributeName)) {\r\n                        item.attributes[attributeName] = transformAttribute(this.doc, toLowerCase(target.tagName), toLowerCase(attributeName), value, target, this.maskAttributeFn);\r\n                        if (attributeName === 'style') {\r\n                            const old = unattachedDoc.createElement('span');\r\n                            if (m.oldValue) {\r\n                                old.setAttribute('style', m.oldValue);\r\n                            }\r\n                            for (const pname of Array.from(target.style)) {\r\n                                const newValue = target.style.getPropertyValue(pname);\r\n                                const newPriority = target.style.getPropertyPriority(pname);\r\n                                if (newValue !== old.style.getPropertyValue(pname) ||\r\n                                    newPriority !== old.style.getPropertyPriority(pname)) {\r\n                                    if (newPriority === '') {\r\n                                        item.styleDiff[pname] = newValue;\r\n                                    }\r\n                                    else {\r\n                                        item.styleDiff[pname] = [newValue, newPriority];\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    item._unchangedStyles[pname] = [newValue, newPriority];\r\n                                }\r\n                            }\r\n                            for (const pname of Array.from(old.style)) {\r\n                                if (target.style.getPropertyValue(pname) === '') {\r\n                                    item.styleDiff[pname] = false;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                }\r\n                case 'childList': {\r\n                    if (isBlocked(m.target, this.blockClass, this.blockSelector, this.unblockSelector, true)) {\r\n                        return;\r\n                    }\r\n                    m.addedNodes.forEach((n) => this.genAdds(n, m.target));\r\n                    m.removedNodes.forEach((n) => {\r\n                        const nodeId = this.mirror.getId(n);\r\n                        const parentId = isShadowRoot(m.target)\r\n                            ? this.mirror.getId(m.target.host)\r\n                            : this.mirror.getId(m.target);\r\n                        if (isBlocked(m.target, this.blockClass, this.blockSelector, this.unblockSelector, false) ||\r\n                            isIgnored(n, this.mirror) ||\r\n                            !isSerialized(n, this.mirror)) {\r\n                            return;\r\n                        }\r\n                        if (this.addedSet.has(n)) {\r\n                            deepDelete(this.addedSet, n);\r\n                            this.droppedSet.add(n);\r\n                        }\r\n                        else if (this.addedSet.has(m.target) && nodeId === -1) ;\r\n                        else if (isAncestorRemoved(m.target, this.mirror)) ;\r\n                        else if (this.movedSet.has(n) &&\r\n                            this.movedMap[moveKey(nodeId, parentId)]) {\r\n                            deepDelete(this.movedSet, n);\r\n                        }\r\n                        else {\r\n                            this.removes.push({\r\n                                parentId,\r\n                                id: nodeId,\r\n                                isShadow: isShadowRoot(m.target) && isNativeShadowDom(m.target)\r\n                                    ? true\r\n                                    : undefined,\r\n                            });\r\n                        }\r\n                        this.mapRemoves.push(n);\r\n                    });\r\n                    break;\r\n                }\r\n            }\r\n        };\r\n        this.genAdds = (n, target) => {\r\n            if (this.processedNodeManager.inOtherBuffer(n, this))\r\n                return;\r\n            if (this.addedSet.has(n) || this.movedSet.has(n))\r\n                return;\r\n            if (this.mirror.hasNode(n)) {\r\n                if (isIgnored(n, this.mirror)) {\r\n                    return;\r\n                }\r\n                this.movedSet.add(n);\r\n                let targetId = null;\r\n                if (target && this.mirror.hasNode(target)) {\r\n                    targetId = this.mirror.getId(target);\r\n                }\r\n                if (targetId && targetId !== -1) {\r\n                    this.movedMap[moveKey(this.mirror.getId(n), targetId)] = true;\r\n                }\r\n            }\r\n            else {\r\n                this.addedSet.add(n);\r\n                this.droppedSet.delete(n);\r\n            }\r\n            if (!isBlocked(n, this.blockClass, this.blockSelector, this.unblockSelector, false)) {\r\n                n.childNodes.forEach((childN) => this.genAdds(childN));\r\n                if (hasShadowRoot(n)) {\r\n                    n.shadowRoot.childNodes.forEach((childN) => {\r\n                        this.processedNodeManager.add(childN, this);\r\n                        this.genAdds(childN, n);\r\n                    });\r\n                }\r\n            }\r\n        };\r\n    }\r\n    init(options) {\r\n        [\r\n            'mutationCb',\r\n            'blockClass',\r\n            'blockSelector',\r\n            'unblockSelector',\r\n            'maskAllText',\r\n            'maskTextClass',\r\n            'unmaskTextClass',\r\n            'maskTextSelector',\r\n            'unmaskTextSelector',\r\n            'inlineStylesheet',\r\n            'maskInputOptions',\r\n            'maskAttributeFn',\r\n            'maskTextFn',\r\n            'maskInputFn',\r\n            'keepIframeSrcFn',\r\n            'recordCanvas',\r\n            'inlineImages',\r\n            'slimDOMOptions',\r\n            'dataURLOptions',\r\n            'doc',\r\n            'mirror',\r\n            'iframeManager',\r\n            'stylesheetManager',\r\n            'shadowDomManager',\r\n            'canvasManager',\r\n            'processedNodeManager',\r\n        ].forEach((key) => {\r\n            this[key] = options[key];\r\n        });\r\n    }\r\n    freeze() {\r\n        this.frozen = true;\r\n        this.canvasManager.freeze();\r\n    }\r\n    unfreeze() {\r\n        this.frozen = false;\r\n        this.canvasManager.unfreeze();\r\n        this.emit();\r\n    }\r\n    isFrozen() {\r\n        return this.frozen;\r\n    }\r\n    lock() {\r\n        this.locked = true;\r\n        this.canvasManager.lock();\r\n    }\r\n    unlock() {\r\n        this.locked = false;\r\n        this.canvasManager.unlock();\r\n        this.emit();\r\n    }\r\n    reset() {\r\n        this.shadowDomManager.reset();\r\n        this.canvasManager.reset();\r\n    }\r\n}\r\nfunction deepDelete(addsSet, n) {\r\n    addsSet.delete(n);\r\n    n.childNodes.forEach((childN) => deepDelete(addsSet, childN));\r\n}\r\nfunction isParentRemoved(removes, n, mirror) {\r\n    if (removes.length === 0)\r\n        return false;\r\n    return _isParentRemoved(removes, n, mirror);\r\n}\r\nfunction _isParentRemoved(removes, n, mirror) {\r\n    const { parentNode } = n;\r\n    if (!parentNode) {\r\n        return false;\r\n    }\r\n    const parentId = mirror.getId(parentNode);\r\n    if (removes.some((r) => r.id === parentId)) {\r\n        return true;\r\n    }\r\n    return _isParentRemoved(removes, parentNode, mirror);\r\n}\r\nfunction isAncestorInSet(set, n) {\r\n    if (set.size === 0)\r\n        return false;\r\n    return _isAncestorInSet(set, n);\r\n}\r\nfunction _isAncestorInSet(set, n) {\r\n    const { parentNode } = n;\r\n    if (!parentNode) {\r\n        return false;\r\n    }\r\n    if (set.has(parentNode)) {\r\n        return true;\r\n    }\r\n    return _isAncestorInSet(set, parentNode);\r\n}\n\nexport { MutationBuffer as default };\n", "let errorHandler;\r\nfunction registerErrorHandler(handler) {\r\n    errorHandler = handler;\r\n}\r\nfunction unregisterErrorHandler() {\r\n    errorHandler = undefined;\r\n}\r\nconst callbackWrapper = (cb) => {\r\n    if (!errorHandler) {\r\n        return cb;\r\n    }\r\n    const rrwebWrapped = ((...rest) => {\r\n        try {\r\n            return cb(...rest);\r\n        }\r\n        catch (error) {\r\n            if (errorHandler && errorHandler(error) === true) {\r\n                return () => {\r\n                };\r\n            }\r\n            throw error;\r\n        }\r\n    });\r\n    return rrwebWrapped;\r\n};\n\nexport { callbackWrapper, registerErrorHandler, unregisterErrorHandler };\n", "import { toLowerCase, toUpperCase, getInputType, getInputValue, shouldMaskInput, needMaskingText, maskInputValue } from '../../../rrweb-snapshot/es/rrweb-snapshot.js';\nimport { on, throttle, isBlocked, getWindowScroll, hookSetter, patch, legacy_isTouchEvent, nowTimestamp, getWindowHeight, getWindowWidth } from '../utils.js';\nimport { MouseInteractions, IncrementalSource, PointerTypes } from '../../../types/dist/rrweb-types.js';\nimport MutationBuffer from './mutation.js';\nimport { callbackWrapper } from './error-handler.js';\n\nconst mutationBuffers = [];\r\nfunction getEventTarget(event) {\r\n    try {\r\n        if ('composedPath' in event) {\r\n            const path = event.composedPath();\r\n            if (path.length) {\r\n                return path[0];\r\n            }\r\n        }\r\n        else if ('path' in event && event.path.length) {\r\n            return event.path[0];\r\n        }\r\n    }\r\n    catch {\r\n    }\r\n    return event && event.target;\r\n}\r\nfunction initMutationObserver(options, rootEl) {\r\n    const mutationBuffer = new MutationBuffer();\r\n    mutationBuffers.push(mutationBuffer);\r\n    mutationBuffer.init(options);\r\n    let mutationObserverCtor = window.MutationObserver ||\r\n        window.__rrMutationObserver;\r\n    const angularZoneSymbol = window?.Zone?.__symbol__?.('MutationObserver');\r\n    if (angularZoneSymbol &&\r\n        window[angularZoneSymbol]) {\r\n        mutationObserverCtor = window[angularZoneSymbol];\r\n    }\r\n    const observer = new mutationObserverCtor(callbackWrapper((mutations) => {\r\n        if (options.onMutation && options.onMutation(mutations) === false) {\r\n            return;\r\n        }\r\n        mutationBuffer.processMutations.bind(mutationBuffer)(mutations);\r\n    }));\r\n    observer.observe(rootEl, {\r\n        attributes: true,\r\n        attributeOldValue: true,\r\n        characterData: true,\r\n        characterDataOldValue: true,\r\n        childList: true,\r\n        subtree: true,\r\n    });\r\n    return observer;\r\n}\r\nfunction initMoveObserver({ mousemoveCb, sampling, doc, mirror, }) {\r\n    if (sampling.mousemove === false) {\r\n        return () => {\r\n        };\r\n    }\r\n    const threshold = typeof sampling.mousemove === 'number' ? sampling.mousemove : 50;\r\n    const callbackThreshold = typeof sampling.mousemoveCallback === 'number'\r\n        ? sampling.mousemoveCallback\r\n        : 500;\r\n    let positions = [];\r\n    let timeBaseline;\r\n    const wrappedCb = throttle(callbackWrapper((source) => {\r\n        const totalOffset = Date.now() - timeBaseline;\r\n        mousemoveCb(positions.map((p) => {\r\n            p.timeOffset -= totalOffset;\r\n            return p;\r\n        }), source);\r\n        positions = [];\r\n        timeBaseline = null;\r\n    }), callbackThreshold);\r\n    const updatePosition = callbackWrapper(throttle(callbackWrapper((evt) => {\r\n        const target = getEventTarget(evt);\r\n        const { clientX, clientY } = legacy_isTouchEvent(evt)\r\n            ? evt.changedTouches[0]\r\n            : evt;\r\n        if (!timeBaseline) {\r\n            timeBaseline = nowTimestamp();\r\n        }\r\n        positions.push({\r\n            x: clientX,\r\n            y: clientY,\r\n            id: mirror.getId(target),\r\n            timeOffset: nowTimestamp() - timeBaseline,\r\n        });\r\n        wrappedCb(typeof DragEvent !== 'undefined' && evt instanceof DragEvent\r\n            ? IncrementalSource.Drag\r\n            : evt instanceof MouseEvent\r\n                ? IncrementalSource.MouseMove\r\n                : IncrementalSource.TouchMove);\r\n    }), threshold, {\r\n        trailing: false,\r\n    }));\r\n    const handlers = [\r\n        on('mousemove', updatePosition, doc),\r\n        on('touchmove', updatePosition, doc),\r\n        on('drag', updatePosition, doc),\r\n    ];\r\n    return callbackWrapper(() => {\r\n        handlers.forEach((h) => h());\r\n    });\r\n}\r\nfunction initMouseInteractionObserver({ mouseInteractionCb, doc, mirror, blockClass, blockSelector, unblockSelector, sampling, }) {\r\n    if (sampling.mouseInteraction === false) {\r\n        return () => {\r\n        };\r\n    }\r\n    const disableMap = sampling.mouseInteraction === true ||\r\n        sampling.mouseInteraction === undefined\r\n        ? {}\r\n        : sampling.mouseInteraction;\r\n    const handlers = [];\r\n    let currentPointerType = null;\r\n    const getHandler = (eventKey) => {\r\n        return (event) => {\r\n            const target = getEventTarget(event);\r\n            if (isBlocked(target, blockClass, blockSelector, unblockSelector, true)) {\r\n                return;\r\n            }\r\n            let pointerType = null;\r\n            let thisEventKey = eventKey;\r\n            if ('pointerType' in event) {\r\n                switch (event.pointerType) {\r\n                    case 'mouse':\r\n                        pointerType = PointerTypes.Mouse;\r\n                        break;\r\n                    case 'touch':\r\n                        pointerType = PointerTypes.Touch;\r\n                        break;\r\n                    case 'pen':\r\n                        pointerType = PointerTypes.Pen;\r\n                        break;\r\n                }\r\n                if (pointerType === PointerTypes.Touch) {\r\n                    if (MouseInteractions[eventKey] === MouseInteractions.MouseDown) {\r\n                        thisEventKey = 'TouchStart';\r\n                    }\r\n                    else if (MouseInteractions[eventKey] === MouseInteractions.MouseUp) {\r\n                        thisEventKey = 'TouchEnd';\r\n                    }\r\n                }\r\n                else if (pointerType === PointerTypes.Pen) ;\r\n            }\r\n            else if (legacy_isTouchEvent(event)) {\r\n                pointerType = PointerTypes.Touch;\r\n            }\r\n            if (pointerType !== null) {\r\n                currentPointerType = pointerType;\r\n                if ((thisEventKey.startsWith('Touch') &&\r\n                    pointerType === PointerTypes.Touch) ||\r\n                    (thisEventKey.startsWith('Mouse') &&\r\n                        pointerType === PointerTypes.Mouse)) {\r\n                    pointerType = null;\r\n                }\r\n            }\r\n            else if (MouseInteractions[eventKey] === MouseInteractions.Click) {\r\n                pointerType = currentPointerType;\r\n                currentPointerType = null;\r\n            }\r\n            const e = legacy_isTouchEvent(event) ? event.changedTouches[0] : event;\r\n            if (!e) {\r\n                return;\r\n            }\r\n            const id = mirror.getId(target);\r\n            const { clientX, clientY } = e;\r\n            callbackWrapper(mouseInteractionCb)({\r\n                type: MouseInteractions[thisEventKey],\r\n                id,\r\n                x: clientX,\r\n                y: clientY,\r\n                ...(pointerType !== null && { pointerType }),\r\n            });\r\n        };\r\n    };\r\n    Object.keys(MouseInteractions)\r\n        .filter((key) => Number.isNaN(Number(key)) &&\r\n        !key.endsWith('_Departed') &&\r\n        disableMap[key] !== false)\r\n        .forEach((eventKey) => {\r\n        let eventName = toLowerCase(eventKey);\r\n        const handler = getHandler(eventKey);\r\n        if (window.PointerEvent) {\r\n            switch (MouseInteractions[eventKey]) {\r\n                case MouseInteractions.MouseDown:\r\n                case MouseInteractions.MouseUp:\r\n                    eventName = eventName.replace('mouse', 'pointer');\r\n                    break;\r\n                case MouseInteractions.TouchStart:\r\n                case MouseInteractions.TouchEnd:\r\n                    return;\r\n            }\r\n        }\r\n        handlers.push(on(eventName, handler, doc));\r\n    });\r\n    return callbackWrapper(() => {\r\n        handlers.forEach((h) => h());\r\n    });\r\n}\r\nfunction initScrollObserver({ scrollCb, doc, mirror, blockClass, blockSelector, unblockSelector, sampling, }) {\r\n    const updatePosition = callbackWrapper(throttle(callbackWrapper((evt) => {\r\n        const target = getEventTarget(evt);\r\n        if (!target ||\r\n            isBlocked(target, blockClass, blockSelector, unblockSelector, true)) {\r\n            return;\r\n        }\r\n        const id = mirror.getId(target);\r\n        if (target === doc && doc.defaultView) {\r\n            const scrollLeftTop = getWindowScroll(doc.defaultView);\r\n            scrollCb({\r\n                id,\r\n                x: scrollLeftTop.left,\r\n                y: scrollLeftTop.top,\r\n            });\r\n        }\r\n        else {\r\n            scrollCb({\r\n                id,\r\n                x: target.scrollLeft,\r\n                y: target.scrollTop,\r\n            });\r\n        }\r\n    }), sampling.scroll || 100));\r\n    return on('scroll', updatePosition, doc);\r\n}\r\nfunction initViewportResizeObserver({ viewportResizeCb }, { win }) {\r\n    let lastH = -1;\r\n    let lastW = -1;\r\n    const updateDimension = callbackWrapper(throttle(callbackWrapper(() => {\r\n        const height = getWindowHeight();\r\n        const width = getWindowWidth();\r\n        if (lastH !== height || lastW !== width) {\r\n            viewportResizeCb({\r\n                width: Number(width),\r\n                height: Number(height),\r\n            });\r\n            lastH = height;\r\n            lastW = width;\r\n        }\r\n    }), 200));\r\n    return on('resize', updateDimension, win);\r\n}\r\nconst INPUT_TAGS = ['INPUT', 'TEXTAREA', 'SELECT'];\r\nconst lastInputValueMap = new WeakMap();\r\nfunction initInputObserver({ inputCb, doc, mirror, blockClass, blockSelector, unblockSelector, ignoreClass, ignoreSelector, maskInputOptions, maskInputFn, sampling, userTriggeredOnInput, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, }) {\r\n    function eventHandler(event) {\r\n        let target = getEventTarget(event);\r\n        const userTriggered = event.isTrusted;\r\n        const tagName = target && toUpperCase(target.tagName);\r\n        if (tagName === 'OPTION')\r\n            target = target.parentElement;\r\n        if (!target ||\r\n            !tagName ||\r\n            INPUT_TAGS.indexOf(tagName) < 0 ||\r\n            isBlocked(target, blockClass, blockSelector, unblockSelector, true)) {\r\n            return;\r\n        }\r\n        const el = target;\r\n        if (el.classList.contains(ignoreClass) ||\r\n            (ignoreSelector && el.matches(ignoreSelector))) {\r\n            return;\r\n        }\r\n        const type = getInputType(target);\r\n        let text = getInputValue(el, tagName, type);\r\n        let isChecked = false;\r\n        const isInputMasked = shouldMaskInput({\r\n            maskInputOptions,\r\n            tagName,\r\n            type,\r\n        });\r\n        const forceMask = needMaskingText(target, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, isInputMasked);\r\n        if (type === 'radio' || type === 'checkbox') {\r\n            isChecked = target.checked;\r\n        }\r\n        text = maskInputValue({\r\n            isMasked: forceMask,\r\n            element: target,\r\n            value: text,\r\n            maskInputFn,\r\n        });\r\n        cbWithDedup(target, userTriggeredOnInput\r\n            ? { text, isChecked, userTriggered }\r\n            : { text, isChecked });\r\n        const name = target.name;\r\n        if (type === 'radio' && name && isChecked) {\r\n            doc\r\n                .querySelectorAll(`input[type=\"radio\"][name=\"${name}\"]`)\r\n                .forEach((el) => {\r\n                if (el !== target) {\r\n                    const text = maskInputValue({\r\n                        isMasked: forceMask,\r\n                        element: el,\r\n                        value: getInputValue(el, tagName, type),\r\n                        maskInputFn,\r\n                    });\r\n                    cbWithDedup(el, userTriggeredOnInput\r\n                        ? { text, isChecked: !isChecked, userTriggered: false }\r\n                        : { text, isChecked: !isChecked });\r\n                }\r\n            });\r\n        }\r\n    }\r\n    function cbWithDedup(target, v) {\r\n        const lastInputValue = lastInputValueMap.get(target);\r\n        if (!lastInputValue ||\r\n            lastInputValue.text !== v.text ||\r\n            lastInputValue.isChecked !== v.isChecked) {\r\n            lastInputValueMap.set(target, v);\r\n            const id = mirror.getId(target);\r\n            callbackWrapper(inputCb)({\r\n                ...v,\r\n                id,\r\n            });\r\n        }\r\n    }\r\n    const events = sampling.input === 'last' ? ['change'] : ['input', 'change'];\r\n    const handlers = events.map((eventName) => on(eventName, callbackWrapper(eventHandler), doc));\r\n    const currentWindow = doc.defaultView;\r\n    if (!currentWindow) {\r\n        return () => {\r\n            handlers.forEach((h) => h());\r\n        };\r\n    }\r\n    const propertyDescriptor = currentWindow.Object.getOwnPropertyDescriptor(currentWindow.HTMLInputElement.prototype, 'value');\r\n    const hookProperties = [\r\n        [currentWindow.HTMLInputElement.prototype, 'value'],\r\n        [currentWindow.HTMLInputElement.prototype, 'checked'],\r\n        [currentWindow.HTMLSelectElement.prototype, 'value'],\r\n        [currentWindow.HTMLTextAreaElement.prototype, 'value'],\r\n        [currentWindow.HTMLSelectElement.prototype, 'selectedIndex'],\r\n        [currentWindow.HTMLOptionElement.prototype, 'selected'],\r\n    ];\r\n    if (propertyDescriptor && propertyDescriptor.set) {\r\n        handlers.push(...hookProperties.map((p) => hookSetter(p[0], p[1], {\r\n            set() {\r\n                callbackWrapper(eventHandler)({\r\n                    target: this,\r\n                    isTrusted: false,\r\n                });\r\n            },\r\n        }, false, currentWindow)));\r\n    }\r\n    return callbackWrapper(() => {\r\n        handlers.forEach((h) => h());\r\n    });\r\n}\r\nfunction getNestedCSSRulePositions(rule) {\r\n    const positions = [];\r\n    function recurse(childRule, pos) {\r\n        if ((hasNestedCSSRule('CSSGroupingRule') &&\r\n            childRule.parentRule instanceof CSSGroupingRule) ||\r\n            (hasNestedCSSRule('CSSMediaRule') &&\r\n                childRule.parentRule instanceof CSSMediaRule) ||\r\n            (hasNestedCSSRule('CSSSupportsRule') &&\r\n                childRule.parentRule instanceof CSSSupportsRule) ||\r\n            (hasNestedCSSRule('CSSConditionRule') &&\r\n                childRule.parentRule instanceof CSSConditionRule)) {\r\n            const rules = Array.from(childRule.parentRule.cssRules);\r\n            const index = rules.indexOf(childRule);\r\n            pos.unshift(index);\r\n        }\r\n        else if (childRule.parentStyleSheet) {\r\n            const rules = Array.from(childRule.parentStyleSheet.cssRules);\r\n            const index = rules.indexOf(childRule);\r\n            pos.unshift(index);\r\n        }\r\n        return pos;\r\n    }\r\n    return recurse(rule, positions);\r\n}\r\nfunction getIdAndStyleId(sheet, mirror, styleMirror) {\r\n    let id, styleId;\r\n    if (!sheet)\r\n        return {};\r\n    if (sheet.ownerNode)\r\n        id = mirror.getId(sheet.ownerNode);\r\n    else\r\n        styleId = styleMirror.getId(sheet);\r\n    return {\r\n        styleId,\r\n        id,\r\n    };\r\n}\r\nfunction initStyleSheetObserver({ styleSheetRuleCb, mirror, stylesheetManager }, { win }) {\r\n    if (!win.CSSStyleSheet || !win.CSSStyleSheet.prototype) {\r\n        return () => {\r\n        };\r\n    }\r\n    const insertRule = win.CSSStyleSheet.prototype.insertRule;\r\n    win.CSSStyleSheet.prototype.insertRule = new Proxy(insertRule, {\r\n        apply: callbackWrapper((target, thisArg, argumentsList) => {\r\n            const [rule, index] = argumentsList;\r\n            const { id, styleId } = getIdAndStyleId(thisArg, mirror, stylesheetManager.styleMirror);\r\n            if ((id && id !== -1) || (styleId && styleId !== -1)) {\r\n                styleSheetRuleCb({\r\n                    id,\r\n                    styleId,\r\n                    adds: [{ rule, index }],\r\n                });\r\n            }\r\n            return target.apply(thisArg, argumentsList);\r\n        }),\r\n    });\r\n    const deleteRule = win.CSSStyleSheet.prototype.deleteRule;\r\n    win.CSSStyleSheet.prototype.deleteRule = new Proxy(deleteRule, {\r\n        apply: callbackWrapper((target, thisArg, argumentsList) => {\r\n            const [index] = argumentsList;\r\n            const { id, styleId } = getIdAndStyleId(thisArg, mirror, stylesheetManager.styleMirror);\r\n            if ((id && id !== -1) || (styleId && styleId !== -1)) {\r\n                styleSheetRuleCb({\r\n                    id,\r\n                    styleId,\r\n                    removes: [{ index }],\r\n                });\r\n            }\r\n            return target.apply(thisArg, argumentsList);\r\n        }),\r\n    });\r\n    let replace;\r\n    if (win.CSSStyleSheet.prototype.replace) {\r\n        replace = win.CSSStyleSheet.prototype.replace;\r\n        win.CSSStyleSheet.prototype.replace = new Proxy(replace, {\r\n            apply: callbackWrapper((target, thisArg, argumentsList) => {\r\n                const [text] = argumentsList;\r\n                const { id, styleId } = getIdAndStyleId(thisArg, mirror, stylesheetManager.styleMirror);\r\n                if ((id && id !== -1) || (styleId && styleId !== -1)) {\r\n                    styleSheetRuleCb({\r\n                        id,\r\n                        styleId,\r\n                        replace: text,\r\n                    });\r\n                }\r\n                return target.apply(thisArg, argumentsList);\r\n            }),\r\n        });\r\n    }\r\n    let replaceSync;\r\n    if (win.CSSStyleSheet.prototype.replaceSync) {\r\n        replaceSync = win.CSSStyleSheet.prototype.replaceSync;\r\n        win.CSSStyleSheet.prototype.replaceSync = new Proxy(replaceSync, {\r\n            apply: callbackWrapper((target, thisArg, argumentsList) => {\r\n                const [text] = argumentsList;\r\n                const { id, styleId } = getIdAndStyleId(thisArg, mirror, stylesheetManager.styleMirror);\r\n                if ((id && id !== -1) || (styleId && styleId !== -1)) {\r\n                    styleSheetRuleCb({\r\n                        id,\r\n                        styleId,\r\n                        replaceSync: text,\r\n                    });\r\n                }\r\n                return target.apply(thisArg, argumentsList);\r\n            }),\r\n        });\r\n    }\r\n    const supportedNestedCSSRuleTypes = {};\r\n    if (canMonkeyPatchNestedCSSRule('CSSGroupingRule')) {\r\n        supportedNestedCSSRuleTypes.CSSGroupingRule = win.CSSGroupingRule;\r\n    }\r\n    else {\r\n        if (canMonkeyPatchNestedCSSRule('CSSMediaRule')) {\r\n            supportedNestedCSSRuleTypes.CSSMediaRule = win.CSSMediaRule;\r\n        }\r\n        if (canMonkeyPatchNestedCSSRule('CSSConditionRule')) {\r\n            supportedNestedCSSRuleTypes.CSSConditionRule = win.CSSConditionRule;\r\n        }\r\n        if (canMonkeyPatchNestedCSSRule('CSSSupportsRule')) {\r\n            supportedNestedCSSRuleTypes.CSSSupportsRule = win.CSSSupportsRule;\r\n        }\r\n    }\r\n    const unmodifiedFunctions = {};\r\n    Object.entries(supportedNestedCSSRuleTypes).forEach(([typeKey, type]) => {\r\n        unmodifiedFunctions[typeKey] = {\r\n            insertRule: type.prototype.insertRule,\r\n            deleteRule: type.prototype.deleteRule,\r\n        };\r\n        type.prototype.insertRule = new Proxy(unmodifiedFunctions[typeKey].insertRule, {\r\n            apply: callbackWrapper((target, thisArg, argumentsList) => {\r\n                const [rule, index] = argumentsList;\r\n                const { id, styleId } = getIdAndStyleId(thisArg.parentStyleSheet, mirror, stylesheetManager.styleMirror);\r\n                if ((id && id !== -1) || (styleId && styleId !== -1)) {\r\n                    styleSheetRuleCb({\r\n                        id,\r\n                        styleId,\r\n                        adds: [\r\n                            {\r\n                                rule,\r\n                                index: [\r\n                                    ...getNestedCSSRulePositions(thisArg),\r\n                                    index || 0,\r\n                                ],\r\n                            },\r\n                        ],\r\n                    });\r\n                }\r\n                return target.apply(thisArg, argumentsList);\r\n            }),\r\n        });\r\n        type.prototype.deleteRule = new Proxy(unmodifiedFunctions[typeKey].deleteRule, {\r\n            apply: callbackWrapper((target, thisArg, argumentsList) => {\r\n                const [index] = argumentsList;\r\n                const { id, styleId } = getIdAndStyleId(thisArg.parentStyleSheet, mirror, stylesheetManager.styleMirror);\r\n                if ((id && id !== -1) || (styleId && styleId !== -1)) {\r\n                    styleSheetRuleCb({\r\n                        id,\r\n                        styleId,\r\n                        removes: [\r\n                            { index: [...getNestedCSSRulePositions(thisArg), index] },\r\n                        ],\r\n                    });\r\n                }\r\n                return target.apply(thisArg, argumentsList);\r\n            }),\r\n        });\r\n    });\r\n    return callbackWrapper(() => {\r\n        win.CSSStyleSheet.prototype.insertRule = insertRule;\r\n        win.CSSStyleSheet.prototype.deleteRule = deleteRule;\r\n        replace && (win.CSSStyleSheet.prototype.replace = replace);\r\n        replaceSync && (win.CSSStyleSheet.prototype.replaceSync = replaceSync);\r\n        Object.entries(supportedNestedCSSRuleTypes).forEach(([typeKey, type]) => {\r\n            type.prototype.insertRule = unmodifiedFunctions[typeKey].insertRule;\r\n            type.prototype.deleteRule = unmodifiedFunctions[typeKey].deleteRule;\r\n        });\r\n    });\r\n}\r\nfunction initAdoptedStyleSheetObserver({ mirror, stylesheetManager, }, host) {\r\n    let hostId = null;\r\n    if (host.nodeName === '#document')\r\n        hostId = mirror.getId(host);\r\n    else\r\n        hostId = mirror.getId(host.host);\r\n    const patchTarget = host.nodeName === '#document'\r\n        ? host.defaultView?.Document\r\n        : host.ownerDocument?.defaultView?.ShadowRoot;\r\n    const originalPropertyDescriptor = patchTarget?.prototype\r\n        ? Object.getOwnPropertyDescriptor(patchTarget?.prototype, 'adoptedStyleSheets')\r\n        : undefined;\r\n    if (hostId === null ||\r\n        hostId === -1 ||\r\n        !patchTarget ||\r\n        !originalPropertyDescriptor)\r\n        return () => {\r\n        };\r\n    Object.defineProperty(host, 'adoptedStyleSheets', {\r\n        configurable: originalPropertyDescriptor.configurable,\r\n        enumerable: originalPropertyDescriptor.enumerable,\r\n        get() {\r\n            return originalPropertyDescriptor.get?.call(this);\r\n        },\r\n        set(sheets) {\r\n            const result = originalPropertyDescriptor.set?.call(this, sheets);\r\n            if (hostId !== null && hostId !== -1) {\r\n                try {\r\n                    stylesheetManager.adoptStyleSheets(sheets, hostId);\r\n                }\r\n                catch (e) {\r\n                }\r\n            }\r\n            return result;\r\n        },\r\n    });\r\n    return callbackWrapper(() => {\r\n        Object.defineProperty(host, 'adoptedStyleSheets', {\r\n            configurable: originalPropertyDescriptor.configurable,\r\n            enumerable: originalPropertyDescriptor.enumerable,\r\n            get: originalPropertyDescriptor.get,\r\n            set: originalPropertyDescriptor.set,\r\n        });\r\n    });\r\n}\r\nfunction initStyleDeclarationObserver({ styleDeclarationCb, mirror, ignoreCSSAttributes, stylesheetManager, }, { win }) {\r\n    const setProperty = win.CSSStyleDeclaration.prototype.setProperty;\r\n    win.CSSStyleDeclaration.prototype.setProperty = new Proxy(setProperty, {\r\n        apply: callbackWrapper((target, thisArg, argumentsList) => {\r\n            const [property, value, priority] = argumentsList;\r\n            if (ignoreCSSAttributes.has(property)) {\r\n                return setProperty.apply(thisArg, [property, value, priority]);\r\n            }\r\n            const { id, styleId } = getIdAndStyleId(thisArg.parentRule?.parentStyleSheet, mirror, stylesheetManager.styleMirror);\r\n            if ((id && id !== -1) || (styleId && styleId !== -1)) {\r\n                styleDeclarationCb({\r\n                    id,\r\n                    styleId,\r\n                    set: {\r\n                        property,\r\n                        value,\r\n                        priority,\r\n                    },\r\n                    index: getNestedCSSRulePositions(thisArg.parentRule),\r\n                });\r\n            }\r\n            return target.apply(thisArg, argumentsList);\r\n        }),\r\n    });\r\n    const removeProperty = win.CSSStyleDeclaration.prototype.removeProperty;\r\n    win.CSSStyleDeclaration.prototype.removeProperty = new Proxy(removeProperty, {\r\n        apply: callbackWrapper((target, thisArg, argumentsList) => {\r\n            const [property] = argumentsList;\r\n            if (ignoreCSSAttributes.has(property)) {\r\n                return removeProperty.apply(thisArg, [property]);\r\n            }\r\n            const { id, styleId } = getIdAndStyleId(thisArg.parentRule?.parentStyleSheet, mirror, stylesheetManager.styleMirror);\r\n            if ((id && id !== -1) || (styleId && styleId !== -1)) {\r\n                styleDeclarationCb({\r\n                    id,\r\n                    styleId,\r\n                    remove: {\r\n                        property,\r\n                    },\r\n                    index: getNestedCSSRulePositions(thisArg.parentRule),\r\n                });\r\n            }\r\n            return target.apply(thisArg, argumentsList);\r\n        }),\r\n    });\r\n    return callbackWrapper(() => {\r\n        win.CSSStyleDeclaration.prototype.setProperty = setProperty;\r\n        win.CSSStyleDeclaration.prototype.removeProperty = removeProperty;\r\n    });\r\n}\r\nfunction initMediaInteractionObserver({ mediaInteractionCb, blockClass, blockSelector, unblockSelector, mirror, sampling, doc, }) {\r\n    const handler = callbackWrapper((type) => throttle(callbackWrapper((event) => {\r\n        const target = getEventTarget(event);\r\n        if (!target ||\r\n            isBlocked(target, blockClass, blockSelector, unblockSelector, true)) {\r\n            return;\r\n        }\r\n        const { currentTime, volume, muted, playbackRate } = target;\r\n        mediaInteractionCb({\r\n            type,\r\n            id: mirror.getId(target),\r\n            currentTime,\r\n            volume,\r\n            muted,\r\n            playbackRate,\r\n        });\r\n    }), sampling.media || 500));\r\n    const handlers = [\r\n        on('play', handler(0), doc),\r\n        on('pause', handler(1), doc),\r\n        on('seeked', handler(2), doc),\r\n        on('volumechange', handler(3), doc),\r\n        on('ratechange', handler(4), doc),\r\n    ];\r\n    return callbackWrapper(() => {\r\n        handlers.forEach((h) => h());\r\n    });\r\n}\r\nfunction initFontObserver({ fontCb, doc }) {\r\n    const win = doc.defaultView;\r\n    if (!win) {\r\n        return () => {\r\n        };\r\n    }\r\n    const handlers = [];\r\n    const fontMap = new WeakMap();\r\n    const originalFontFace = win.FontFace;\r\n    win.FontFace = function FontFace(family, source, descriptors) {\r\n        const fontFace = new originalFontFace(family, source, descriptors);\r\n        fontMap.set(fontFace, {\r\n            family,\r\n            buffer: typeof source !== 'string',\r\n            descriptors,\r\n            fontSource: typeof source === 'string'\r\n                ? source\r\n                : JSON.stringify(Array.from(new Uint8Array(source))),\r\n        });\r\n        return fontFace;\r\n    };\r\n    const restoreHandler = patch(doc.fonts, 'add', function (original) {\r\n        return function (fontFace) {\r\n            setTimeout(callbackWrapper(() => {\r\n                const p = fontMap.get(fontFace);\r\n                if (p) {\r\n                    fontCb(p);\r\n                    fontMap.delete(fontFace);\r\n                }\r\n            }), 0);\r\n            return original.apply(this, [fontFace]);\r\n        };\r\n    });\r\n    handlers.push(() => {\r\n        win.FontFace = originalFontFace;\r\n    });\r\n    handlers.push(restoreHandler);\r\n    return callbackWrapper(() => {\r\n        handlers.forEach((h) => h());\r\n    });\r\n}\r\nfunction initSelectionObserver(param) {\r\n    const { doc, mirror, blockClass, blockSelector, unblockSelector, selectionCb, } = param;\r\n    let collapsed = true;\r\n    const updateSelection = callbackWrapper(() => {\r\n        const selection = doc.getSelection();\r\n        if (!selection || (collapsed && selection?.isCollapsed))\r\n            return;\r\n        collapsed = selection.isCollapsed || false;\r\n        const ranges = [];\r\n        const count = selection.rangeCount || 0;\r\n        for (let i = 0; i < count; i++) {\r\n            const range = selection.getRangeAt(i);\r\n            const { startContainer, startOffset, endContainer, endOffset } = range;\r\n            const blocked = isBlocked(startContainer, blockClass, blockSelector, unblockSelector, true) ||\r\n                isBlocked(endContainer, blockClass, blockSelector, unblockSelector, true);\r\n            if (blocked)\r\n                continue;\r\n            ranges.push({\r\n                start: mirror.getId(startContainer),\r\n                startOffset,\r\n                end: mirror.getId(endContainer),\r\n                endOffset,\r\n            });\r\n        }\r\n        selectionCb({ ranges });\r\n    });\r\n    updateSelection();\r\n    return on('selectionchange', updateSelection);\r\n}\r\nfunction initCustomElementObserver({ doc, customElementCb, }) {\r\n    const win = doc.defaultView;\r\n    if (!win || !win.customElements)\r\n        return () => { };\r\n    const restoreHandler = patch(win.customElements, 'define', function (original) {\r\n        return function (name, constructor, options) {\r\n            try {\r\n                customElementCb({\r\n                    define: {\r\n                        name,\r\n                    },\r\n                });\r\n            }\r\n            catch (e) {\r\n            }\r\n            return original.apply(this, [name, constructor, options]);\r\n        };\r\n    });\r\n    return restoreHandler;\r\n}\r\nfunction initObservers(o, _hooks = {}) {\r\n    const currentWindow = o.doc.defaultView;\r\n    if (!currentWindow) {\r\n        return () => {\r\n        };\r\n    }\r\n    const mutationObserver = initMutationObserver(o, o.doc);\r\n    const mousemoveHandler = initMoveObserver(o);\r\n    const mouseInteractionHandler = initMouseInteractionObserver(o);\r\n    const scrollHandler = initScrollObserver(o);\r\n    const viewportResizeHandler = initViewportResizeObserver(o, {\r\n        win: currentWindow,\r\n    });\r\n    const inputHandler = initInputObserver(o);\r\n    const mediaInteractionHandler = initMediaInteractionObserver(o);\r\n    const styleSheetObserver = initStyleSheetObserver(o, { win: currentWindow });\r\n    const adoptedStyleSheetObserver = initAdoptedStyleSheetObserver(o, o.doc);\r\n    const styleDeclarationObserver = initStyleDeclarationObserver(o, {\r\n        win: currentWindow,\r\n    });\r\n    const fontObserver = o.collectFonts\r\n        ? initFontObserver(o)\r\n        : () => {\r\n        };\r\n    const selectionObserver = initSelectionObserver(o);\r\n    const customElementObserver = initCustomElementObserver(o);\r\n    const pluginHandlers = [];\r\n    for (const plugin of o.plugins) {\r\n        pluginHandlers.push(plugin.observer(plugin.callback, currentWindow, plugin.options));\r\n    }\r\n    return callbackWrapper(() => {\r\n        mutationBuffers.forEach((b) => b.reset());\r\n        mutationObserver.disconnect();\r\n        mousemoveHandler();\r\n        mouseInteractionHandler();\r\n        scrollHandler();\r\n        viewportResizeHandler();\r\n        inputHandler();\r\n        mediaInteractionHandler();\r\n        styleSheetObserver();\r\n        adoptedStyleSheetObserver();\r\n        styleDeclarationObserver();\r\n        fontObserver();\r\n        selectionObserver();\r\n        customElementObserver();\r\n        pluginHandlers.forEach((h) => h());\r\n    });\r\n}\r\nfunction hasNestedCSSRule(prop) {\r\n    return typeof window[prop] !== 'undefined';\r\n}\r\nfunction canMonkeyPatchNestedCSSRule(prop) {\r\n    return Boolean(typeof window[prop] !== 'undefined' &&\r\n        window[prop].prototype &&\r\n        'insertRule' in window[prop].prototype &&\r\n        'deleteRule' in window[prop].prototype);\r\n}\n\nexport { INPUT_TAGS, initAdoptedStyleSheetObserver, initMutationObserver, initObservers, initScrollObserver, mutationBuffers };\n", "class CrossOriginIframeMirror {\r\n    constructor(generateIdFn) {\r\n        this.generateIdFn = generateIdFn;\r\n        this.iframeIdToRemoteIdMap = new WeakMap();\r\n        this.iframeRemoteIdToIdMap = new WeakMap();\r\n    }\r\n    getId(iframe, remoteId, idToRemoteMap, remoteToIdMap) {\r\n        const idToRemoteIdMap = idToRemoteMap || this.getIdToRemoteIdMap(iframe);\r\n        const remoteIdToIdMap = remoteToIdMap || this.getRemoteIdToIdMap(iframe);\r\n        let id = idToRemoteIdMap.get(remoteId);\r\n        if (!id) {\r\n            id = this.generateIdFn();\r\n            idToRemoteIdMap.set(remoteId, id);\r\n            remoteIdToIdMap.set(id, remoteId);\r\n        }\r\n        return id;\r\n    }\r\n    getIds(iframe, remoteId) {\r\n        const idToRemoteIdMap = this.getIdToRemoteIdMap(iframe);\r\n        const remoteIdToIdMap = this.getRemoteIdToIdMap(iframe);\r\n        return remoteId.map((id) => this.getId(iframe, id, idToRemoteIdMap, remoteIdToIdMap));\r\n    }\r\n    getRemoteId(iframe, id, map) {\r\n        const remoteIdToIdMap = map || this.getRemoteIdToIdMap(iframe);\r\n        if (typeof id !== 'number')\r\n            return id;\r\n        const remoteId = remoteIdToIdMap.get(id);\r\n        if (!remoteId)\r\n            return -1;\r\n        return remoteId;\r\n    }\r\n    getRemoteIds(iframe, ids) {\r\n        const remoteIdToIdMap = this.getRemoteIdToIdMap(iframe);\r\n        return ids.map((id) => this.getRemoteId(iframe, id, remoteIdToIdMap));\r\n    }\r\n    reset(iframe) {\r\n        if (!iframe) {\r\n            this.iframeIdToRemoteIdMap = new WeakMap();\r\n            this.iframeRemoteIdToIdMap = new WeakMap();\r\n            return;\r\n        }\r\n        this.iframeIdToRemoteIdMap.delete(iframe);\r\n        this.iframeRemoteIdToIdMap.delete(iframe);\r\n    }\r\n    getIdToRemoteIdMap(iframe) {\r\n        let idToRemoteIdMap = this.iframeIdToRemoteIdMap.get(iframe);\r\n        if (!idToRemoteIdMap) {\r\n            idToRemoteIdMap = new Map();\r\n            this.iframeIdToRemoteIdMap.set(iframe, idToRemoteIdMap);\r\n        }\r\n        return idToRemoteIdMap;\r\n    }\r\n    getRemoteIdToIdMap(iframe) {\r\n        let remoteIdToIdMap = this.iframeRemoteIdToIdMap.get(iframe);\r\n        if (!remoteIdToIdMap) {\r\n            remoteIdToIdMap = new Map();\r\n            this.iframeRemoteIdToIdMap.set(iframe, remoteIdToIdMap);\r\n        }\r\n        return remoteIdToIdMap;\r\n    }\r\n}\n\nexport { CrossOriginIframeMirror as default };\n", "import { genId, NodeType } from '../../../rrweb-snapshot/es/rrweb-snapshot.js';\nimport CrossOriginIframeMirror from './cross-origin-iframe-mirror.js';\nimport { EventType, IncrementalSource } from '../../../types/dist/rrweb-types.js';\n\nclass IframeManagerNoop {\r\n    constructor() {\r\n        this.crossOriginIframeMirror = new CrossOriginIframeMirror(genId);\r\n        this.crossOriginIframeRootIdMap = new WeakMap();\r\n    }\r\n    addIframe() {\r\n    }\r\n    addLoadListener() {\r\n    }\r\n    attachIframe() {\r\n    }\r\n}\r\nclass IframeManager {\r\n    constructor(options) {\r\n        this.iframes = new WeakMap();\r\n        this.crossOriginIframeMap = new WeakMap();\r\n        this.crossOriginIframeMirror = new CrossOriginIframeMirror(genId);\r\n        this.crossOriginIframeRootIdMap = new WeakMap();\r\n        this.mutationCb = options.mutationCb;\r\n        this.wrappedEmit = options.wrappedEmit;\r\n        this.stylesheetManager = options.stylesheetManager;\r\n        this.recordCrossOriginIframes = options.recordCrossOriginIframes;\r\n        this.crossOriginIframeStyleMirror = new CrossOriginIframeMirror(this.stylesheetManager.styleMirror.generateId.bind(this.stylesheetManager.styleMirror));\r\n        this.mirror = options.mirror;\r\n        if (this.recordCrossOriginIframes) {\r\n            window.addEventListener('message', this.handleMessage.bind(this));\r\n        }\r\n    }\r\n    addIframe(iframeEl) {\r\n        this.iframes.set(iframeEl, true);\r\n        if (iframeEl.contentWindow)\r\n            this.crossOriginIframeMap.set(iframeEl.contentWindow, iframeEl);\r\n    }\r\n    addLoadListener(cb) {\r\n        this.loadListener = cb;\r\n    }\r\n    attachIframe(iframeEl, childSn) {\r\n        this.mutationCb({\r\n            adds: [\r\n                {\r\n                    parentId: this.mirror.getId(iframeEl),\r\n                    nextId: null,\r\n                    node: childSn,\r\n                },\r\n            ],\r\n            removes: [],\r\n            texts: [],\r\n            attributes: [],\r\n            isAttachIframe: true,\r\n        });\r\n        this.loadListener?.(iframeEl);\r\n        if (iframeEl.contentDocument &&\r\n            iframeEl.contentDocument.adoptedStyleSheets &&\r\n            iframeEl.contentDocument.adoptedStyleSheets.length > 0)\r\n            this.stylesheetManager.adoptStyleSheets(iframeEl.contentDocument.adoptedStyleSheets, this.mirror.getId(iframeEl.contentDocument));\r\n    }\r\n    handleMessage(message) {\r\n        const crossOriginMessageEvent = message;\r\n        if (crossOriginMessageEvent.data.type !== 'rrweb' ||\r\n            crossOriginMessageEvent.origin !== crossOriginMessageEvent.data.origin)\r\n            return;\r\n        const iframeSourceWindow = message.source;\r\n        if (!iframeSourceWindow)\r\n            return;\r\n        const iframeEl = this.crossOriginIframeMap.get(message.source);\r\n        if (!iframeEl)\r\n            return;\r\n        const transformedEvent = this.transformCrossOriginEvent(iframeEl, crossOriginMessageEvent.data.event);\r\n        if (transformedEvent)\r\n            this.wrappedEmit(transformedEvent, crossOriginMessageEvent.data.isCheckout);\r\n    }\r\n    transformCrossOriginEvent(iframeEl, e) {\r\n        switch (e.type) {\r\n            case EventType.FullSnapshot: {\r\n                this.crossOriginIframeMirror.reset(iframeEl);\r\n                this.crossOriginIframeStyleMirror.reset(iframeEl);\r\n                this.replaceIdOnNode(e.data.node, iframeEl);\r\n                const rootId = e.data.node.id;\r\n                this.crossOriginIframeRootIdMap.set(iframeEl, rootId);\r\n                this.patchRootIdOnNode(e.data.node, rootId);\r\n                return {\r\n                    timestamp: e.timestamp,\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source: IncrementalSource.Mutation,\r\n                        adds: [\r\n                            {\r\n                                parentId: this.mirror.getId(iframeEl),\r\n                                nextId: null,\r\n                                node: e.data.node,\r\n                            },\r\n                        ],\r\n                        removes: [],\r\n                        texts: [],\r\n                        attributes: [],\r\n                        isAttachIframe: true,\r\n                    },\r\n                };\r\n            }\r\n            case EventType.Meta:\r\n            case EventType.Load:\r\n            case EventType.DomContentLoaded: {\r\n                return false;\r\n            }\r\n            case EventType.Plugin: {\r\n                return e;\r\n            }\r\n            case EventType.Custom: {\r\n                this.replaceIds(e.data.payload, iframeEl, ['id', 'parentId', 'previousId', 'nextId']);\r\n                return e;\r\n            }\r\n            case EventType.IncrementalSnapshot: {\r\n                switch (e.data.source) {\r\n                    case IncrementalSource.Mutation: {\r\n                        e.data.adds.forEach((n) => {\r\n                            this.replaceIds(n, iframeEl, [\r\n                                'parentId',\r\n                                'nextId',\r\n                                'previousId',\r\n                            ]);\r\n                            this.replaceIdOnNode(n.node, iframeEl);\r\n                            const rootId = this.crossOriginIframeRootIdMap.get(iframeEl);\r\n                            rootId && this.patchRootIdOnNode(n.node, rootId);\r\n                        });\r\n                        e.data.removes.forEach((n) => {\r\n                            this.replaceIds(n, iframeEl, ['parentId', 'id']);\r\n                        });\r\n                        e.data.attributes.forEach((n) => {\r\n                            this.replaceIds(n, iframeEl, ['id']);\r\n                        });\r\n                        e.data.texts.forEach((n) => {\r\n                            this.replaceIds(n, iframeEl, ['id']);\r\n                        });\r\n                        return e;\r\n                    }\r\n                    case IncrementalSource.Drag:\r\n                    case IncrementalSource.TouchMove:\r\n                    case IncrementalSource.MouseMove: {\r\n                        e.data.positions.forEach((p) => {\r\n                            this.replaceIds(p, iframeEl, ['id']);\r\n                        });\r\n                        return e;\r\n                    }\r\n                    case IncrementalSource.ViewportResize: {\r\n                        return false;\r\n                    }\r\n                    case IncrementalSource.MediaInteraction:\r\n                    case IncrementalSource.MouseInteraction:\r\n                    case IncrementalSource.Scroll:\r\n                    case IncrementalSource.CanvasMutation:\r\n                    case IncrementalSource.Input: {\r\n                        this.replaceIds(e.data, iframeEl, ['id']);\r\n                        return e;\r\n                    }\r\n                    case IncrementalSource.StyleSheetRule:\r\n                    case IncrementalSource.StyleDeclaration: {\r\n                        this.replaceIds(e.data, iframeEl, ['id']);\r\n                        this.replaceStyleIds(e.data, iframeEl, ['styleId']);\r\n                        return e;\r\n                    }\r\n                    case IncrementalSource.Font: {\r\n                        return e;\r\n                    }\r\n                    case IncrementalSource.Selection: {\r\n                        e.data.ranges.forEach((range) => {\r\n                            this.replaceIds(range, iframeEl, ['start', 'end']);\r\n                        });\r\n                        return e;\r\n                    }\r\n                    case IncrementalSource.AdoptedStyleSheet: {\r\n                        this.replaceIds(e.data, iframeEl, ['id']);\r\n                        this.replaceStyleIds(e.data, iframeEl, ['styleIds']);\r\n                        e.data.styles?.forEach((style) => {\r\n                            this.replaceStyleIds(style, iframeEl, ['styleId']);\r\n                        });\r\n                        return e;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    replace(iframeMirror, obj, iframeEl, keys) {\r\n        for (const key of keys) {\r\n            if (!Array.isArray(obj[key]) && typeof obj[key] !== 'number')\r\n                continue;\r\n            if (Array.isArray(obj[key])) {\r\n                obj[key] = iframeMirror.getIds(iframeEl, obj[key]);\r\n            }\r\n            else {\r\n                obj[key] = iframeMirror.getId(iframeEl, obj[key]);\r\n            }\r\n        }\r\n        return obj;\r\n    }\r\n    replaceIds(obj, iframeEl, keys) {\r\n        return this.replace(this.crossOriginIframeMirror, obj, iframeEl, keys);\r\n    }\r\n    replaceStyleIds(obj, iframeEl, keys) {\r\n        return this.replace(this.crossOriginIframeStyleMirror, obj, iframeEl, keys);\r\n    }\r\n    replaceIdOnNode(node, iframeEl) {\r\n        this.replaceIds(node, iframeEl, ['id', 'rootId']);\r\n        if ('childNodes' in node) {\r\n            node.childNodes.forEach((child) => {\r\n                this.replaceIdOnNode(child, iframeEl);\r\n            });\r\n        }\r\n    }\r\n    patchRootIdOnNode(node, rootId) {\r\n        if (node.type !== NodeType.Document && !node.rootId)\r\n            node.rootId = rootId;\r\n        if ('childNodes' in node) {\r\n            node.childNodes.forEach((child) => {\r\n                this.patchRootIdOnNode(child, rootId);\r\n            });\r\n        }\r\n    }\r\n}\n\nexport { IframeManager, IframeManagerNoop };\n", "import { initMutationObserver, initScrollObserver, initAdoptedStyleSheetObserver } from './observer.js';\nimport { patch, inDom } from '../utils.js';\nimport { isNativeShadowDom } from '../../../rrweb-snapshot/es/rrweb-snapshot.js';\n\nclass ShadowDomManagerNoop {\r\n    init() {\r\n    }\r\n    addShadowRoot() {\r\n    }\r\n    observeAttachShadow() {\r\n    }\r\n    reset() {\r\n    }\r\n}\r\nclass ShadowDomManager {\r\n    constructor(options) {\r\n        this.shadowDoms = new WeakSet();\r\n        this.restoreHandlers = [];\r\n        this.mutationCb = options.mutationCb;\r\n        this.scrollCb = options.scrollCb;\r\n        this.bypassOptions = options.bypassOptions;\r\n        this.mirror = options.mirror;\r\n        this.init();\r\n    }\r\n    init() {\r\n        this.reset();\r\n        this.patchAttachShadow(Element, document);\r\n    }\r\n    addShadowRoot(shadowRoot, doc) {\r\n        if (!isNativeShadowDom(shadowRoot))\r\n            return;\r\n        if (this.shadowDoms.has(shadowRoot))\r\n            return;\r\n        this.shadowDoms.add(shadowRoot);\r\n        const observer = initMutationObserver({\r\n            ...this.bypassOptions,\r\n            doc,\r\n            mutationCb: this.mutationCb,\r\n            mirror: this.mirror,\r\n            shadowDomManager: this,\r\n        }, shadowRoot);\r\n        this.restoreHandlers.push(() => observer.disconnect());\r\n        this.restoreHandlers.push(initScrollObserver({\r\n            ...this.bypassOptions,\r\n            scrollCb: this.scrollCb,\r\n            doc: shadowRoot,\r\n            mirror: this.mirror,\r\n        }));\r\n        setTimeout(() => {\r\n            if (shadowRoot.adoptedStyleSheets &&\r\n                shadowRoot.adoptedStyleSheets.length > 0)\r\n                this.bypassOptions.stylesheetManager.adoptStyleSheets(shadowRoot.adoptedStyleSheets, this.mirror.getId(shadowRoot.host));\r\n            this.restoreHandlers.push(initAdoptedStyleSheetObserver({\r\n                mirror: this.mirror,\r\n                stylesheetManager: this.bypassOptions.stylesheetManager,\r\n            }, shadowRoot));\r\n        }, 0);\r\n    }\r\n    observeAttachShadow(iframeElement) {\r\n        if (!iframeElement.contentWindow || !iframeElement.contentDocument)\r\n            return;\r\n        this.patchAttachShadow(iframeElement.contentWindow.Element, iframeElement.contentDocument);\r\n    }\r\n    patchAttachShadow(element, doc) {\r\n        const manager = this;\r\n        this.restoreHandlers.push(patch(element.prototype, 'attachShadow', function (original) {\r\n            return function (option) {\r\n                const shadowRoot = original.call(this, option);\r\n                if (this.shadowRoot && inDom(this))\r\n                    manager.addShadowRoot(this.shadowRoot, doc);\r\n                return shadowRoot;\r\n            };\r\n        }));\r\n    }\r\n    reset() {\r\n        this.restoreHandlers.forEach((handler) => {\r\n            try {\r\n                handler();\r\n            }\r\n            catch (e) {\r\n            }\r\n        });\r\n        this.restoreHandlers = [];\r\n        this.shadowDoms = new WeakSet();\r\n    }\r\n}\n\nexport { ShadowDomManager, ShadowDomManagerNoop };\n", "import { onRequestAnimationFrame, isBlocked } from '../../../utils.js';\nimport { CanvasContext } from '../../../../../types/dist/rrweb-types.js';\nimport initCanvas2DMutationObserver from './2d.js';\nimport initCanvasContextObserver from './canvas.js';\nimport initCanvasWebGLMutationObserver from './webgl.js';\nimport { getImageBitmapDataUrlWorkerURL as t } from '../../../../../rrweb-worker/es/rrweb-worker/index.js';\nimport { callbackWrapper, registerErrorHandler } from '../../error-handler.js';\n\nclass CanvasManagerNoop {\r\n    reset() {\r\n    }\r\n    freeze() {\r\n    }\r\n    unfreeze() {\r\n    }\r\n    lock() {\r\n    }\r\n    unlock() {\r\n    }\r\n    snapshot() {\r\n    }\r\n}\r\nclass CanvasManager {\r\n    reset() {\r\n        this.pendingCanvasMutations.clear();\r\n        this.resetObservers && this.resetObservers();\r\n    }\r\n    freeze() {\r\n        this.frozen = true;\r\n    }\r\n    unfreeze() {\r\n        this.frozen = false;\r\n    }\r\n    lock() {\r\n        this.locked = true;\r\n    }\r\n    unlock() {\r\n        this.locked = false;\r\n    }\r\n    constructor(options) {\r\n        this.pendingCanvasMutations = new Map();\r\n        this.rafStamps = { latestId: 0, invokeId: null };\r\n        this.frozen = false;\r\n        this.locked = false;\r\n        this.processMutation = (target, mutation) => {\r\n            const newFrame = this.rafStamps.invokeId &&\r\n                this.rafStamps.latestId !== this.rafStamps.invokeId;\r\n            if (newFrame || !this.rafStamps.invokeId)\r\n                this.rafStamps.invokeId = this.rafStamps.latestId;\r\n            if (!this.pendingCanvasMutations.has(target)) {\r\n                this.pendingCanvasMutations.set(target, []);\r\n            }\r\n            this.pendingCanvasMutations.get(target).push(mutation);\r\n        };\r\n        const { sampling = 'all', win, blockClass, blockSelector, unblockSelector, recordCanvas, dataURLOptions, errorHandler, } = options;\r\n        this.mutationCb = options.mutationCb;\r\n        this.mirror = options.mirror;\r\n        this.options = options;\r\n        if (errorHandler) {\r\n            registerErrorHandler(errorHandler);\r\n        }\r\n        if (options.enableManualSnapshot) {\r\n            return;\r\n        }\r\n        callbackWrapper(() => {\r\n            if (recordCanvas && sampling === 'all')\r\n                this.initCanvasMutationObserver(win, blockClass, blockSelector, unblockSelector);\r\n            if (recordCanvas && typeof sampling === 'number')\r\n                this.initCanvasFPSObserver(sampling, win, blockClass, blockSelector, unblockSelector, {\r\n                    dataURLOptions,\r\n                });\r\n        })();\r\n    }\r\n    initCanvasFPSObserver(fps, win, blockClass, blockSelector, unblockSelector, options) {\r\n        const canvasContextReset = initCanvasContextObserver(win, blockClass, blockSelector, unblockSelector, true);\r\n        const rafId = this.takeSnapshot(false, fps, win, blockClass, blockSelector, unblockSelector, options.dataURLOptions);\r\n        this.resetObservers = () => {\r\n            canvasContextReset();\r\n            cancelAnimationFrame(rafId);\r\n        };\r\n    }\r\n    initCanvasMutationObserver(win, blockClass, blockSelector, unblockSelector) {\r\n        this.startRAFTimestamping();\r\n        this.startPendingCanvasMutationFlusher();\r\n        const canvasContextReset = initCanvasContextObserver(win, blockClass, blockSelector, unblockSelector, false);\r\n        const canvas2DReset = initCanvas2DMutationObserver(this.processMutation.bind(this), win, blockClass, blockSelector, unblockSelector);\r\n        const canvasWebGL1and2Reset = initCanvasWebGLMutationObserver(this.processMutation.bind(this), win, blockClass, blockSelector, unblockSelector, this.mirror);\r\n        this.resetObservers = () => {\r\n            canvasContextReset();\r\n            canvas2DReset();\r\n            canvasWebGL1and2Reset();\r\n        };\r\n    }\r\n    snapshot(canvasElement) {\r\n        const { options } = this;\r\n        const rafId = this.takeSnapshot(true, options.sampling === 'all' ? 2 : options.sampling || 2, options.win, options.blockClass, options.blockSelector, options.unblockSelector, options.dataURLOptions, canvasElement);\r\n        this.resetObservers = () => {\r\n            cancelAnimationFrame(rafId);\r\n        };\r\n    }\r\n    takeSnapshot(isManualSnapshot, fps, win, blockClass, blockSelector, unblockSelector, dataURLOptions, canvasElement) {\r\n        const snapshotInProgressMap = new Map();\r\n        const worker = new Worker(t());\r\n        worker.onmessage = (e) => {\r\n            const data = e.data;\r\n            const { id } = data;\r\n            snapshotInProgressMap.set(id, false);\r\n            if (!('base64' in data))\r\n                return;\r\n            const { base64, type, width, height } = data;\r\n            this.mutationCb({\r\n                id,\r\n                type: CanvasContext['2D'],\r\n                commands: [\r\n                    {\r\n                        property: 'clearRect',\r\n                        args: [0, 0, width, height],\r\n                    },\r\n                    {\r\n                        property: 'drawImage',\r\n                        args: [\r\n                            {\r\n                                rr_type: 'ImageBitmap',\r\n                                args: [\r\n                                    {\r\n                                        rr_type: 'Blob',\r\n                                        data: [{ rr_type: 'ArrayBuffer', base64 }],\r\n                                        type,\r\n                                    },\r\n                                ],\r\n                            },\r\n                            0,\r\n                            0,\r\n                        ],\r\n                    },\r\n                ],\r\n            });\r\n        };\r\n        const timeBetweenSnapshots = 1000 / fps;\r\n        let lastSnapshotTime = 0;\r\n        let rafId;\r\n        const getCanvas = (canvasElement) => {\r\n            if (canvasElement) {\r\n                return [canvasElement];\r\n            }\r\n            const matchedCanvas = [];\r\n            win.document.querySelectorAll('canvas').forEach((canvas) => {\r\n                if (!isBlocked(canvas, blockClass, blockSelector, unblockSelector, true)) {\r\n                    matchedCanvas.push(canvas);\r\n                }\r\n            });\r\n            return matchedCanvas;\r\n        };\r\n        const takeCanvasSnapshots = (timestamp) => {\r\n            if (lastSnapshotTime &&\r\n                timestamp - lastSnapshotTime < timeBetweenSnapshots) {\r\n                rafId = onRequestAnimationFrame(takeCanvasSnapshots);\r\n                return;\r\n            }\r\n            lastSnapshotTime = timestamp;\r\n            getCanvas(canvasElement).forEach((canvas) => {\r\n                const id = this.mirror.getId(canvas);\r\n                if (snapshotInProgressMap.get(id))\r\n                    return;\r\n                snapshotInProgressMap.set(id, true);\r\n                if (!isManualSnapshot &&\r\n                    ['webgl', 'webgl2'].includes(canvas.__context)) {\r\n                    const context = canvas.getContext(canvas.__context);\r\n                    if (context?.getContextAttributes()?.preserveDrawingBuffer === false) {\r\n                        context.clear(context.COLOR_BUFFER_BIT);\r\n                    }\r\n                }\r\n                createImageBitmap(canvas)\r\n                    .then((bitmap) => {\r\n                    worker.postMessage({\r\n                        id,\r\n                        bitmap,\r\n                        width: canvas.width,\r\n                        height: canvas.height,\r\n                        dataURLOptions,\r\n                    }, [bitmap]);\r\n                })\r\n                    .catch((error) => {\r\n                    callbackWrapper(() => {\r\n                        throw error;\r\n                    })();\r\n                });\r\n            });\r\n            rafId = onRequestAnimationFrame(takeCanvasSnapshots);\r\n        };\r\n        rafId = onRequestAnimationFrame(takeCanvasSnapshots);\r\n        return rafId;\r\n    }\r\n    startPendingCanvasMutationFlusher() {\r\n        onRequestAnimationFrame(() => this.flushPendingCanvasMutations());\r\n    }\r\n    startRAFTimestamping() {\r\n        const setLatestRAFTimestamp = (timestamp) => {\r\n            this.rafStamps.latestId = timestamp;\r\n            onRequestAnimationFrame(setLatestRAFTimestamp);\r\n        };\r\n        onRequestAnimationFrame(setLatestRAFTimestamp);\r\n    }\r\n    flushPendingCanvasMutations() {\r\n        this.pendingCanvasMutations.forEach((values, canvas) => {\r\n            const id = this.mirror.getId(canvas);\r\n            this.flushPendingCanvasMutationFor(canvas, id);\r\n        });\r\n        onRequestAnimationFrame(() => this.flushPendingCanvasMutations());\r\n    }\r\n    flushPendingCanvasMutationFor(canvas, id) {\r\n        if (this.frozen || this.locked) {\r\n            return;\r\n        }\r\n        const valuesWithType = this.pendingCanvasMutations.get(canvas);\r\n        if (!valuesWithType || id === -1)\r\n            return;\r\n        const values = valuesWithType.map((value) => {\r\n            const { type, ...rest } = value;\r\n            return rest;\r\n        });\r\n        const { type } = valuesWithType[0];\r\n        this.mutationCb({ id, type, commands: values });\r\n        this.pendingCanvasMutations.delete(canvas);\r\n    }\r\n}\n\nexport { CanvasManager, CanvasManagerNoop };\n", "import { stringifyRule } from '../../../rrweb-snapshot/es/rrweb-snapshot.js';\nimport { StyleSheetMirror } from '../utils.js';\n\nclass StylesheetManager {\r\n    constructor(options) {\r\n        this.trackedLinkElements = new WeakSet();\r\n        this.styleMirror = new StyleSheetMirror();\r\n        this.mutationCb = options.mutationCb;\r\n        this.adoptedStyleSheetCb = options.adoptedStyleSheetCb;\r\n    }\r\n    attachLinkElement(linkEl, childSn) {\r\n        if ('_cssText' in childSn.attributes)\r\n            this.mutationCb({\r\n                adds: [],\r\n                removes: [],\r\n                texts: [],\r\n                attributes: [\r\n                    {\r\n                        id: childSn.id,\r\n                        attributes: childSn\r\n                            .attributes,\r\n                    },\r\n                ],\r\n            });\r\n        this.trackLinkElement(linkEl);\r\n    }\r\n    trackLinkElement(linkEl) {\r\n        if (this.trackedLinkElements.has(linkEl))\r\n            return;\r\n        this.trackedLinkElements.add(linkEl);\r\n        this.trackStylesheetInLinkElement(linkEl);\r\n    }\r\n    adoptStyleSheets(sheets, hostId) {\r\n        if (sheets.length === 0)\r\n            return;\r\n        const adoptedStyleSheetData = {\r\n            id: hostId,\r\n            styleIds: [],\r\n        };\r\n        const styles = [];\r\n        for (const sheet of sheets) {\r\n            let styleId;\r\n            if (!this.styleMirror.has(sheet)) {\r\n                styleId = this.styleMirror.add(sheet);\r\n                styles.push({\r\n                    styleId,\r\n                    rules: Array.from(sheet.rules || CSSRule, (r, index) => ({\r\n                        rule: stringifyRule(r),\r\n                        index,\r\n                    })),\r\n                });\r\n            }\r\n            else\r\n                styleId = this.styleMirror.getId(sheet);\r\n            adoptedStyleSheetData.styleIds.push(styleId);\r\n        }\r\n        if (styles.length > 0)\r\n            adoptedStyleSheetData.styles = styles;\r\n        this.adoptedStyleSheetCb(adoptedStyleSheetData);\r\n    }\r\n    reset() {\r\n        this.styleMirror.reset();\r\n        this.trackedLinkElements = new WeakSet();\r\n    }\r\n    trackStylesheetInLinkElement(linkEl) {\r\n    }\r\n}\n\nexport { StylesheetManager };\n", "import { onRequestAnimationFrame } from '../utils.js';\n\nclass ProcessedNodeManager {\r\n    constructor() {\r\n        this.nodeMap = new WeakMap();\r\n        this.loop = true;\r\n        this.periodicallyClear();\r\n    }\r\n    periodicallyClear() {\r\n        onRequestAnimationFrame(() => {\r\n            this.clear();\r\n            if (this.loop)\r\n                this.periodicallyClear();\r\n        });\r\n    }\r\n    inOtherBuffer(node, thisBuffer) {\r\n        const buffers = this.nodeMap.get(node);\r\n        return (buffers && Array.from(buffers).some((buffer) => buffer !== thisBuffer));\r\n    }\r\n    add(node, buffer) {\r\n        this.nodeMap.set(node, (this.nodeMap.get(node) || new Set()).add(buffer));\r\n    }\r\n    clear() {\r\n        this.nodeMap = new WeakMap();\r\n    }\r\n    destroy() {\r\n        this.loop = false;\r\n    }\r\n}\n\nexport { ProcessedNodeManager as default };\n", "import { createMirror, snapshot } from '../../../rrweb-snapshot/es/rrweb-snapshot.js';\nimport { initObservers, mutationBuffers } from './observer.js';\nimport { polyfill, on, nowTimestamp, getWindowWidth, getWindowHeight, getWindowScroll, isSerializedIframe, isSerializedStylesheet, hasShadowRoot } from '../utils.js';\nimport { EventType, IncrementalSource } from '../../../types/dist/rrweb-types.js';\nimport { IframeManagerNoop, IframeManager } from './iframe-manager.js';\nimport { ShadowDomManagerNoop, ShadowDomManager } from './shadow-dom-manager.js';\nimport { CanvasManagerNoop } from './observers/canvas/canvas-manager.js';\nexport { CanvasManager } from './observers/canvas/canvas-manager.js';\nimport { StylesheetManager } from './stylesheet-manager.js';\nimport ProcessedNodeManager from './processed-node-manager.js';\nimport { callbackWrapper, unregisterErrorHandler, registerErrorHandler } from './error-handler.js';\n\nfunction wrapEvent(e) {\r\n    const eWithTime = e;\r\n    eWithTime.timestamp = nowTimestamp();\r\n    return eWithTime;\r\n}\r\nlet _wrappedEmit;\r\nlet _takeFullSnapshot;\r\nconst mirror = createMirror();\r\nfunction record(options = {}) {\r\n    const { emit, checkoutEveryNms, checkoutEveryNth, blockClass = 'rr-block', blockSelector = null, unblockSelector = null, ignoreClass = 'rr-ignore', ignoreSelector = null, maskAllText = false, maskTextClass = 'rr-mask', unmaskTextClass = null, maskTextSelector = null, unmaskTextSelector = null, inlineStylesheet = true, maskAllInputs, maskInputOptions: _maskInputOptions, slimDOMOptions: _slimDOMOptions, maskAttributeFn, maskInputFn, maskTextFn, packFn, sampling = {}, dataURLOptions = {}, mousemoveWait, recordCanvas = false, recordCrossOriginIframes = false, recordAfter = options.recordAfter === 'DOMContentLoaded'\r\n        ? options.recordAfter\r\n        : 'load', userTriggeredOnInput = false, collectFonts = false, inlineImages = false, plugins, keepIframeSrcFn = () => false, ignoreCSSAttributes = new Set([]), errorHandler, onMutation, getCanvasManager, } = options;\r\n    registerErrorHandler(errorHandler);\r\n    const inEmittingFrame = recordCrossOriginIframes\r\n        ? window.parent === window\r\n        : true;\r\n    let passEmitsToParent = false;\r\n    if (!inEmittingFrame) {\r\n        try {\r\n            if (window.parent.document) {\r\n                passEmitsToParent = false;\r\n            }\r\n        }\r\n        catch (e) {\r\n            passEmitsToParent = true;\r\n        }\r\n    }\r\n    if (inEmittingFrame && !emit) {\r\n        throw new Error('emit function is required');\r\n    }\r\n    if (mousemoveWait !== undefined && sampling.mousemove === undefined) {\r\n        sampling.mousemove = mousemoveWait;\r\n    }\r\n    mirror.reset();\r\n    const maskInputOptions = maskAllInputs === true\r\n        ? {\r\n            color: true,\r\n            date: true,\r\n            'datetime-local': true,\r\n            email: true,\r\n            month: true,\r\n            number: true,\r\n            range: true,\r\n            search: true,\r\n            tel: true,\r\n            text: true,\r\n            time: true,\r\n            url: true,\r\n            week: true,\r\n            textarea: true,\r\n            select: true,\r\n            radio: true,\r\n            checkbox: true,\r\n        }\r\n        : _maskInputOptions !== undefined\r\n            ? _maskInputOptions\r\n            : {};\r\n    const slimDOMOptions = _slimDOMOptions === true || _slimDOMOptions === 'all'\r\n        ? {\r\n            script: true,\r\n            comment: true,\r\n            headFavicon: true,\r\n            headWhitespace: true,\r\n            headMetaSocial: true,\r\n            headMetaRobots: true,\r\n            headMetaHttpEquiv: true,\r\n            headMetaVerification: true,\r\n            headMetaAuthorship: _slimDOMOptions === 'all',\r\n            headMetaDescKeywords: _slimDOMOptions === 'all',\r\n        }\r\n        : _slimDOMOptions\r\n            ? _slimDOMOptions\r\n            : {};\r\n    polyfill();\r\n    let lastFullSnapshotEvent;\r\n    let incrementalSnapshotCount = 0;\r\n    const eventProcessor = (e) => {\r\n        for (const plugin of plugins || []) {\r\n            if (plugin.eventProcessor) {\r\n                e = plugin.eventProcessor(e);\r\n            }\r\n        }\r\n        if (packFn &&\r\n            !passEmitsToParent) {\r\n            e = packFn(e);\r\n        }\r\n        return e;\r\n    };\r\n    const wrappedEmit = (e, isCheckout) => {\r\n        if (mutationBuffers[0]?.isFrozen() &&\r\n            e.type !== EventType.FullSnapshot &&\r\n            !(e.type === EventType.IncrementalSnapshot &&\r\n                e.data.source === IncrementalSource.Mutation)) {\r\n            mutationBuffers.forEach((buf) => buf.unfreeze());\r\n        }\r\n        if (inEmittingFrame) {\r\n            emit?.(eventProcessor(e), isCheckout);\r\n        }\r\n        else if (passEmitsToParent) {\r\n            const message = {\r\n                type: 'rrweb',\r\n                event: eventProcessor(e),\r\n                origin: window.location.origin,\r\n                isCheckout,\r\n            };\r\n            window.parent.postMessage(message, '*');\r\n        }\r\n        if (e.type === EventType.FullSnapshot) {\r\n            lastFullSnapshotEvent = e;\r\n            incrementalSnapshotCount = 0;\r\n        }\r\n        else if (e.type === EventType.IncrementalSnapshot) {\r\n            if (e.data.source === IncrementalSource.Mutation &&\r\n                e.data.isAttachIframe) {\r\n                return;\r\n            }\r\n            incrementalSnapshotCount++;\r\n            const exceedCount = checkoutEveryNth && incrementalSnapshotCount >= checkoutEveryNth;\r\n            const exceedTime = checkoutEveryNms &&\r\n                e.timestamp - lastFullSnapshotEvent.timestamp > checkoutEveryNms;\r\n            if (exceedCount || exceedTime) {\r\n                takeFullSnapshot(true);\r\n            }\r\n        }\r\n    };\r\n    _wrappedEmit = wrappedEmit;\r\n    const wrappedMutationEmit = (m) => {\r\n        wrappedEmit(wrapEvent({\r\n            type: EventType.IncrementalSnapshot,\r\n            data: {\r\n                source: IncrementalSource.Mutation,\r\n                ...m,\r\n            },\r\n        }));\r\n    };\r\n    const wrappedScrollEmit = (p) => wrappedEmit(wrapEvent({\r\n        type: EventType.IncrementalSnapshot,\r\n        data: {\r\n            source: IncrementalSource.Scroll,\r\n            ...p,\r\n        },\r\n    }));\r\n    const wrappedCanvasMutationEmit = (p) => wrappedEmit(wrapEvent({\r\n        type: EventType.IncrementalSnapshot,\r\n        data: {\r\n            source: IncrementalSource.CanvasMutation,\r\n            ...p,\r\n        },\r\n    }));\r\n    const wrappedAdoptedStyleSheetEmit = (a) => wrappedEmit(wrapEvent({\r\n        type: EventType.IncrementalSnapshot,\r\n        data: {\r\n            source: IncrementalSource.AdoptedStyleSheet,\r\n            ...a,\r\n        },\r\n    }));\r\n    const stylesheetManager = new StylesheetManager({\r\n        mutationCb: wrappedMutationEmit,\r\n        adoptedStyleSheetCb: wrappedAdoptedStyleSheetEmit,\r\n    });\r\n    const iframeManager = typeof __RRWEB_EXCLUDE_IFRAME__ === 'boolean' && __RRWEB_EXCLUDE_IFRAME__\r\n        ? new IframeManagerNoop()\r\n        : new IframeManager({\r\n            mirror,\r\n            mutationCb: wrappedMutationEmit,\r\n            stylesheetManager: stylesheetManager,\r\n            recordCrossOriginIframes,\r\n            wrappedEmit,\r\n        });\r\n    for (const plugin of plugins || []) {\r\n        if (plugin.getMirror)\r\n            plugin.getMirror({\r\n                nodeMirror: mirror,\r\n                crossOriginIframeMirror: iframeManager.crossOriginIframeMirror,\r\n                crossOriginIframeStyleMirror: iframeManager.crossOriginIframeStyleMirror,\r\n            });\r\n    }\r\n    const processedNodeManager = new ProcessedNodeManager();\r\n    const canvasManager = _getCanvasManager(getCanvasManager, {\r\n        mirror,\r\n        win: window,\r\n        mutationCb: (p) => wrappedEmit(wrapEvent({\r\n            type: EventType.IncrementalSnapshot,\r\n            data: {\r\n                source: IncrementalSource.CanvasMutation,\r\n                ...p,\r\n            },\r\n        })),\r\n        recordCanvas,\r\n        blockClass,\r\n        blockSelector,\r\n        unblockSelector,\r\n        sampling: sampling['canvas'],\r\n        dataURLOptions,\r\n        errorHandler,\r\n    });\r\n    const shadowDomManager = typeof __RRWEB_EXCLUDE_SHADOW_DOM__ === 'boolean' &&\r\n        __RRWEB_EXCLUDE_SHADOW_DOM__\r\n        ? new ShadowDomManagerNoop()\r\n        : new ShadowDomManager({\r\n            mutationCb: wrappedMutationEmit,\r\n            scrollCb: wrappedScrollEmit,\r\n            bypassOptions: {\r\n                onMutation,\r\n                blockClass,\r\n                blockSelector,\r\n                unblockSelector,\r\n                maskAllText,\r\n                maskTextClass,\r\n                unmaskTextClass,\r\n                maskTextSelector,\r\n                unmaskTextSelector,\r\n                inlineStylesheet,\r\n                maskInputOptions,\r\n                dataURLOptions,\r\n                maskAttributeFn,\r\n                maskTextFn,\r\n                maskInputFn,\r\n                recordCanvas,\r\n                inlineImages,\r\n                sampling,\r\n                slimDOMOptions,\r\n                iframeManager,\r\n                stylesheetManager,\r\n                canvasManager,\r\n                keepIframeSrcFn,\r\n                processedNodeManager,\r\n            },\r\n            mirror,\r\n        });\r\n    const takeFullSnapshot = (isCheckout = false) => {\r\n        wrappedEmit(wrapEvent({\r\n            type: EventType.Meta,\r\n            data: {\r\n                href: window.location.href,\r\n                width: getWindowWidth(),\r\n                height: getWindowHeight(),\r\n            },\r\n        }), isCheckout);\r\n        stylesheetManager.reset();\r\n        shadowDomManager.init();\r\n        mutationBuffers.forEach((buf) => buf.lock());\r\n        const node = snapshot(document, {\r\n            mirror,\r\n            blockClass,\r\n            blockSelector,\r\n            unblockSelector,\r\n            maskAllText,\r\n            maskTextClass,\r\n            unmaskTextClass,\r\n            maskTextSelector,\r\n            unmaskTextSelector,\r\n            inlineStylesheet,\r\n            maskAllInputs: maskInputOptions,\r\n            maskAttributeFn,\r\n            maskInputFn,\r\n            maskTextFn,\r\n            slimDOM: slimDOMOptions,\r\n            dataURLOptions,\r\n            recordCanvas,\r\n            inlineImages,\r\n            onSerialize: (n) => {\r\n                if (isSerializedIframe(n, mirror)) {\r\n                    iframeManager.addIframe(n);\r\n                }\r\n                if (isSerializedStylesheet(n, mirror)) {\r\n                    stylesheetManager.trackLinkElement(n);\r\n                }\r\n                if (hasShadowRoot(n)) {\r\n                    shadowDomManager.addShadowRoot(n.shadowRoot, document);\r\n                }\r\n            },\r\n            onIframeLoad: (iframe, childSn) => {\r\n                iframeManager.attachIframe(iframe, childSn);\r\n                shadowDomManager.observeAttachShadow(iframe);\r\n            },\r\n            onStylesheetLoad: (linkEl, childSn) => {\r\n                stylesheetManager.attachLinkElement(linkEl, childSn);\r\n            },\r\n            keepIframeSrcFn,\r\n        });\r\n        if (!node) {\r\n            return console.warn('Failed to snapshot the document');\r\n        }\r\n        wrappedEmit(wrapEvent({\r\n            type: EventType.FullSnapshot,\r\n            data: {\r\n                node,\r\n                initialOffset: getWindowScroll(window),\r\n            },\r\n        }));\r\n        mutationBuffers.forEach((buf) => buf.unlock());\r\n        if (document.adoptedStyleSheets && document.adoptedStyleSheets.length > 0)\r\n            stylesheetManager.adoptStyleSheets(document.adoptedStyleSheets, mirror.getId(document));\r\n    };\r\n    _takeFullSnapshot = takeFullSnapshot;\r\n    try {\r\n        const handlers = [];\r\n        const observe = (doc) => {\r\n            return callbackWrapper(initObservers)({\r\n                onMutation,\r\n                mutationCb: wrappedMutationEmit,\r\n                mousemoveCb: (positions, source) => wrappedEmit(wrapEvent({\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source,\r\n                        positions,\r\n                    },\r\n                })),\r\n                mouseInteractionCb: (d) => wrappedEmit(wrapEvent({\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source: IncrementalSource.MouseInteraction,\r\n                        ...d,\r\n                    },\r\n                })),\r\n                scrollCb: wrappedScrollEmit,\r\n                viewportResizeCb: (d) => wrappedEmit(wrapEvent({\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source: IncrementalSource.ViewportResize,\r\n                        ...d,\r\n                    },\r\n                })),\r\n                inputCb: (v) => wrappedEmit(wrapEvent({\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source: IncrementalSource.Input,\r\n                        ...v,\r\n                    },\r\n                })),\r\n                mediaInteractionCb: (p) => wrappedEmit(wrapEvent({\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source: IncrementalSource.MediaInteraction,\r\n                        ...p,\r\n                    },\r\n                })),\r\n                styleSheetRuleCb: (r) => wrappedEmit(wrapEvent({\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source: IncrementalSource.StyleSheetRule,\r\n                        ...r,\r\n                    },\r\n                })),\r\n                styleDeclarationCb: (r) => wrappedEmit(wrapEvent({\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source: IncrementalSource.StyleDeclaration,\r\n                        ...r,\r\n                    },\r\n                })),\r\n                canvasMutationCb: wrappedCanvasMutationEmit,\r\n                fontCb: (p) => wrappedEmit(wrapEvent({\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source: IncrementalSource.Font,\r\n                        ...p,\r\n                    },\r\n                })),\r\n                selectionCb: (p) => {\r\n                    wrappedEmit(wrapEvent({\r\n                        type: EventType.IncrementalSnapshot,\r\n                        data: {\r\n                            source: IncrementalSource.Selection,\r\n                            ...p,\r\n                        },\r\n                    }));\r\n                },\r\n                customElementCb: (c) => {\r\n                    wrappedEmit(wrapEvent({\r\n                        type: EventType.IncrementalSnapshot,\r\n                        data: {\r\n                            source: IncrementalSource.CustomElement,\r\n                            ...c,\r\n                        },\r\n                    }));\r\n                },\r\n                blockClass,\r\n                ignoreClass,\r\n                ignoreSelector,\r\n                maskAllText,\r\n                maskTextClass,\r\n                unmaskTextClass,\r\n                maskTextSelector,\r\n                unmaskTextSelector,\r\n                maskInputOptions,\r\n                inlineStylesheet,\r\n                sampling,\r\n                recordCanvas,\r\n                inlineImages,\r\n                userTriggeredOnInput,\r\n                collectFonts,\r\n                doc,\r\n                maskAttributeFn,\r\n                maskInputFn,\r\n                maskTextFn,\r\n                keepIframeSrcFn,\r\n                blockSelector,\r\n                unblockSelector,\r\n                slimDOMOptions,\r\n                dataURLOptions,\r\n                mirror,\r\n                iframeManager,\r\n                stylesheetManager,\r\n                shadowDomManager,\r\n                processedNodeManager,\r\n                canvasManager,\r\n                ignoreCSSAttributes,\r\n                plugins: plugins\r\n                    ?.filter((p) => p.observer)\r\n                    ?.map((p) => ({\r\n                    observer: p.observer,\r\n                    options: p.options,\r\n                    callback: (payload) => wrappedEmit(wrapEvent({\r\n                        type: EventType.Plugin,\r\n                        data: {\r\n                            plugin: p.name,\r\n                            payload,\r\n                        },\r\n                    })),\r\n                })) || [],\r\n            }, {});\r\n        };\r\n        iframeManager.addLoadListener((iframeEl) => {\r\n            try {\r\n                handlers.push(observe(iframeEl.contentDocument));\r\n            }\r\n            catch (error) {\r\n                console.warn(error);\r\n            }\r\n        });\r\n        const init = () => {\r\n            takeFullSnapshot();\r\n            handlers.push(observe(document));\r\n        };\r\n        if (document.readyState === 'interactive' ||\r\n            document.readyState === 'complete') {\r\n            init();\r\n        }\r\n        else {\r\n            handlers.push(on('DOMContentLoaded', () => {\r\n                wrappedEmit(wrapEvent({\r\n                    type: EventType.DomContentLoaded,\r\n                    data: {},\r\n                }));\r\n                if (recordAfter === 'DOMContentLoaded')\r\n                    init();\r\n            }));\r\n            handlers.push(on('load', () => {\r\n                wrappedEmit(wrapEvent({\r\n                    type: EventType.Load,\r\n                    data: {},\r\n                }));\r\n                if (recordAfter === 'load')\r\n                    init();\r\n            }, window));\r\n        }\r\n        return () => {\r\n            handlers.forEach((h) => h());\r\n            processedNodeManager.destroy();\r\n            _takeFullSnapshot = undefined;\r\n            unregisterErrorHandler();\r\n        };\r\n    }\r\n    catch (error) {\r\n        console.warn(error);\r\n    }\r\n}\r\nfunction addCustomEvent(tag, payload) {\r\n    if (!_wrappedEmit) {\r\n        throw new Error('please add custom event after start recording');\r\n    }\r\n    _wrappedEmit(wrapEvent({\r\n        type: EventType.Custom,\r\n        data: {\r\n            tag,\r\n            payload,\r\n        },\r\n    }));\r\n}\r\nfunction freezePage() {\r\n    mutationBuffers.forEach((buf) => buf.freeze());\r\n}\r\nfunction takeFullSnapshot(isCheckout) {\r\n    if (!_takeFullSnapshot) {\r\n        throw new Error('please take full snapshot after start recording');\r\n    }\r\n    _takeFullSnapshot(isCheckout);\r\n}\r\nrecord.mirror = mirror;\r\nrecord.takeFullSnapshot = takeFullSnapshot;\r\nfunction _getCanvasManager(getCanvasManagerFn, options) {\r\n    try {\r\n        return getCanvasManagerFn\r\n            ? getCanvasManagerFn(options)\r\n            : new CanvasManagerNoop();\r\n    }\r\n    catch {\r\n        console.warn('Unable to initialize CanvasManager');\r\n        return new CanvasManagerNoop();\r\n    }\r\n}\n\nexport { addCustomEvent, record as default, freezePage, mirror, takeFullSnapshot };\n", "type ClassOption = string | RegExp;\n\n/** Duplicate this from @sentry-internal/rrweb so we can export this as well. */\nexport const ReplayEventTypeDomContentLoaded = 0;\nexport const ReplayEventTypeLoad = 1;\nexport const ReplayEventTypeFullSnapshot = 2;\nexport const ReplayEventTypeIncrementalSnapshot = 3;\nexport const ReplayEventTypeMeta = 4;\nexport const ReplayEventTypeCustom = 5;\nexport const ReplayEventTypePlugin = 6;\n\nexport type ReplayEventType =\n  | typeof ReplayEventTypeDomContentLoaded\n  | typeof ReplayEventTypeLoad\n  | typeof ReplayEventTypeFullSnapshot\n  | typeof ReplayEventTypeIncrementalSnapshot\n  | typeof ReplayEventTypeMeta\n  | typeof ReplayEventTypeCustom\n  | typeof ReplayEventTypePlugin;\n\n/**\n * This is a partial copy of rrweb's eventWithTime type which only contains the properties\n * we specifcally need in the SDK.\n */\nexport type ReplayEventWithTime = {\n  type: ReplayEventType;\n  data: unknown;\n  timestamp: number;\n  delay?: number;\n};\n\n/**\n * This is a partial copy of rrweb's recording options which only contains the properties\n * we specifically us in the SDK. Users can specify additional properties, hence we add the\n * Record<string, unknown> union type.\n */\nexport type RrwebRecordOptions = {\n  maskAllText?: boolean;\n  maskAllInputs?: boolean;\n  blockClass?: ClassOption;\n  ignoreClass?: string;\n  maskTextClass?: ClassOption;\n  maskTextSelector?: string;\n  blockSelector?: string;\n  maskInputOptions?: Record<string, boolean>;\n} & Record<string, unknown>;\n\nexport interface CanvasManagerInterface {\n  reset(): void;\n  freeze(): void;\n  unfreeze(): void;\n  lock(): void;\n  unlock(): void;\n  snapshot(): void;\n}\n\nexport interface CanvasManagerOptions {\n  recordCanvas: boolean;\n  enableManualSnapshot?: boolean;\n  blockClass: string | RegExp;\n  blockSelector: string | null;\n  unblockSelector: string | null;\n  sampling?: 'all' | number;\n  dataURLOptions: Partial<{\n    type: string;\n    quality: number;\n  }>;\n  mutationCb: (p: any) => void;\n  win: typeof globalThis & Window;\n  mirror: any;\n}\n", "/**\n * Converts a timestamp to ms, if it was in s, or keeps it as ms.\n */\nexport function timestampToMs(timestamp: number): number {\n  const isMs = timestamp > 9999999999;\n  return isMs ? timestamp : timestamp * 1000;\n}\n\n/**\n * Converts a timestamp to s, if it was in ms, or keeps it as s.\n */\nexport function timestampToS(timestamp: number): number {\n  const isMs = timestamp > 9999999999;\n  return isMs ? timestamp / 1000 : timestamp;\n}\n", "import { EventType } from '@sentry-internal/rrweb';\nimport type { Breadcrumb } from '@sentry/types';\nimport { normalize } from '@sentry/utils';\n\nimport type { ReplayContainer } from '../../types';\n\n/**\n * Add a breadcrumb event to replay.\n */\nexport function addBreadcrumbEvent(replay: ReplayContainer, breadcrumb: Breadcrumb): void {\n  if (breadcrumb.category === 'sentry.transaction') {\n    return;\n  }\n\n  if (['ui.click', 'ui.input'].includes(breadcrumb.category as string)) {\n    replay.triggerUserActivity();\n  } else {\n    replay.checkAndHandleExpiredSession();\n  }\n\n  replay.addUpdate(() => {\n    // This should never reject\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    replay.throttledAddEvent({\n      type: EventType.Custom,\n      // TODO: We were converting from ms to seconds for breadcrumbs, spans,\n      // but maybe we should just keep them as milliseconds\n      timestamp: (breadcrumb.timestamp || 0) * 1000,\n      data: {\n        tag: 'breadcrumb',\n        // normalize to max. 10 depth and 1_000 properties per object\n        payload: normalize(breadcrumb, 10, 1_000),\n      },\n    });\n\n    // Do not flush after console log messages\n    return breadcrumb.category === 'console';\n  });\n}\n", "import type { INode } from '@sentry-internal/rrweb-snapshot';\n\nconst INTERACTIVE_SELECTOR = 'button,a';\n\n/** Get the closest interactive parent element, or else return the given element. */\nexport function getClosestInteractive(element: Element): Element {\n  const closestInteractive = element.closest(INTERACTIVE_SELECTOR);\n  return closestInteractive || element;\n}\n\n/**\n * For clicks, we check if the target is inside of a button or link\n * If so, we use this as the target instead\n * This is useful because if you click on the image in <button><img></button>,\n * The target will be the image, not the button, which we don't want here\n */\nexport function getClickTargetNode(event: Event | MouseEvent | Node): Node | INode | null {\n  const target = getTargetNode(event);\n\n  if (!target || !(target instanceof Element)) {\n    return target;\n  }\n\n  return getClosestInteractive(target);\n}\n\n/** Get the event target node. */\nexport function getTargetNode(event: Node | { target: EventTarget | null }): Node | INode | null {\n  if (isEventWithTarget(event)) {\n    return event.target as Node | null;\n  }\n\n  return event;\n}\n\nfunction isEventWithTarget(event: unknown): event is { target: EventTarget | null } {\n  return typeof event === 'object' && !!event && 'target' in event;\n}\n", "import { fill } from '@sentry/utils';\n\nimport { WINDOW } from '../../constants';\n\ntype WindowOpenHandler = () => void;\n\nlet handlers: undefined | WindowOpenHandler[];\n\n/**\n * Register a handler to be called when `window.open()` is called.\n * Returns a cleanup function.\n */\nexport function onWindowOpen(cb: WindowOpenHandler): () => void {\n  // Ensure to only register this once\n  if (!handlers) {\n    handlers = [];\n    monkeyPatchWindowOpen();\n  }\n\n  handlers.push(cb);\n\n  return () => {\n    const pos = handlers ? handlers.indexOf(cb) : -1;\n    if (pos > -1) {\n      (handlers as WindowOpenHandler[]).splice(pos, 1);\n    }\n  };\n}\n\nfunction monkeyPatchWindowOpen(): void {\n  fill(WINDOW, 'open', function (originalWindowOpen: () => void): () => void {\n    return function (...args: unknown[]): void {\n      if (handlers) {\n        try {\n          handlers.forEach(handler => handler());\n        } catch (e) {\n          // ignore errors in here\n        }\n      }\n\n      return originalWindowOpen.apply(WINDOW, args);\n    };\n  });\n}\n", "import { IncrementalSource, MouseInteractions, record } from '@sentry-internal/rrweb';\nimport type { Breadcrumb } from '@sentry/types';\n\nimport { WINDOW } from '../constants';\nimport type {\n  RecordingEvent,\n  ReplayClickDetector,\n  ReplayContainer,\n  ReplayMultiClickFrame,\n  ReplaySlowClickFrame,\n  SlowClickConfig,\n} from '../types';\nimport { ReplayEventTypeIncrementalSnapshot } from '../types';\nimport { timestampToS } from '../util/timestamp';\nimport { addBreadcrumbEvent } from './util/addBreadcrumbEvent';\nimport { getClosestInteractive } from './util/domUtils';\nimport { onWindowOpen } from './util/onWindowOpen';\n\ntype ClickBreadcrumb = Breadcrumb & {\n  timestamp: number;\n};\n\ninterface Click {\n  timestamp: number;\n  mutationAfter?: number;\n  scrollAfter?: number;\n  clickBreadcrumb: ClickBreadcrumb;\n  clickCount: number;\n  node: HTMLElement;\n}\n\ntype IncrementalRecordingEvent = RecordingEvent & {\n  type: typeof ReplayEventTypeIncrementalSnapshot;\n  data: { source: IncrementalSource };\n};\n\ntype IncrementalMouseInteractionRecordingEvent = IncrementalRecordingEvent & {\n  type: typeof ReplayEventTypeIncrementalSnapshot;\n  data: { type: MouseInteractions; id: number };\n};\n\n/** Handle a click. */\nexport function handleClick(clickDetector: ReplayClickDetector, clickBreadcrumb: Breadcrumb, node: HTMLElement): void {\n  clickDetector.handleClick(clickBreadcrumb, node);\n}\n\n/** A click detector class that can be used to detect slow or rage clicks on elements. */\nexport class ClickDetector implements ReplayClickDetector {\n  // protected for testing\n  protected _lastMutation: number;\n  protected _lastScroll: number;\n\n  private _clicks: Click[];\n  private _teardown: undefined | (() => void);\n\n  private _threshold: number;\n  private _scollTimeout: number;\n  private _timeout: number;\n  private _ignoreSelector: string;\n\n  private _replay: ReplayContainer;\n  private _checkClickTimeout?: ReturnType<typeof setTimeout>;\n  private _addBreadcrumbEvent: typeof addBreadcrumbEvent;\n\n  public constructor(\n    replay: ReplayContainer,\n    slowClickConfig: SlowClickConfig,\n    // Just for easier testing\n    _addBreadcrumbEvent = addBreadcrumbEvent,\n  ) {\n    this._lastMutation = 0;\n    this._lastScroll = 0;\n    this._clicks = [];\n\n    // We want everything in s, but options are in ms\n    this._timeout = slowClickConfig.timeout / 1000;\n    this._threshold = slowClickConfig.threshold / 1000;\n    this._scollTimeout = slowClickConfig.scrollTimeout / 1000;\n    this._replay = replay;\n    this._ignoreSelector = slowClickConfig.ignoreSelector;\n    this._addBreadcrumbEvent = _addBreadcrumbEvent;\n  }\n\n  /** Register click detection handlers on mutation or scroll. */\n  public addListeners(): void {\n    const cleanupWindowOpen = onWindowOpen(() => {\n      // Treat window.open as mutation\n      this._lastMutation = nowInSeconds();\n    });\n\n    this._teardown = () => {\n      cleanupWindowOpen();\n\n      this._clicks = [];\n      this._lastMutation = 0;\n      this._lastScroll = 0;\n    };\n  }\n\n  /** Clean up listeners. */\n  public removeListeners(): void {\n    if (this._teardown) {\n      this._teardown();\n    }\n\n    if (this._checkClickTimeout) {\n      clearTimeout(this._checkClickTimeout);\n    }\n  }\n\n  /** @inheritDoc */\n  public handleClick(breadcrumb: Breadcrumb, node: HTMLElement): void {\n    if (ignoreElement(node, this._ignoreSelector) || !isClickBreadcrumb(breadcrumb)) {\n      return;\n    }\n\n    const newClick: Click = {\n      timestamp: timestampToS(breadcrumb.timestamp),\n      clickBreadcrumb: breadcrumb,\n      // Set this to 0 so we know it originates from the click breadcrumb\n      clickCount: 0,\n      node,\n    };\n\n    // If there was a click in the last 1s on the same element, ignore it - only keep a single reference per second\n    if (\n      this._clicks.some(click => click.node === newClick.node && Math.abs(click.timestamp - newClick.timestamp) < 1)\n    ) {\n      return;\n    }\n\n    this._clicks.push(newClick);\n\n    // If this is the first new click, set a timeout to check for multi clicks\n    if (this._clicks.length === 1) {\n      this._scheduleCheckClicks();\n    }\n  }\n\n  /** @inheritDoc */\n  public registerMutation(timestamp = Date.now()): void {\n    this._lastMutation = timestampToS(timestamp);\n  }\n\n  /** @inheritDoc */\n  public registerScroll(timestamp = Date.now()): void {\n    this._lastScroll = timestampToS(timestamp);\n  }\n\n  /** @inheritDoc */\n  public registerClick(element: HTMLElement): void {\n    const node = getClosestInteractive(element);\n    this._handleMultiClick(node as HTMLElement);\n  }\n\n  /** Count multiple clicks on elements. */\n  private _handleMultiClick(node: HTMLElement): void {\n    this._getClicks(node).forEach(click => {\n      click.clickCount++;\n    });\n  }\n\n  /** Get all pending clicks for a given node. */\n  private _getClicks(node: HTMLElement): Click[] {\n    return this._clicks.filter(click => click.node === node);\n  }\n\n  /** Check the clicks that happened. */\n  private _checkClicks(): void {\n    const timedOutClicks: Click[] = [];\n\n    const now = nowInSeconds();\n\n    this._clicks.forEach(click => {\n      if (!click.mutationAfter && this._lastMutation) {\n        click.mutationAfter = click.timestamp <= this._lastMutation ? this._lastMutation - click.timestamp : undefined;\n      }\n      if (!click.scrollAfter && this._lastScroll) {\n        click.scrollAfter = click.timestamp <= this._lastScroll ? this._lastScroll - click.timestamp : undefined;\n      }\n\n      // All of these are in seconds!\n      if (click.timestamp + this._timeout <= now) {\n        timedOutClicks.push(click);\n      }\n    });\n\n    // Remove \"old\" clicks\n    for (const click of timedOutClicks) {\n      const pos = this._clicks.indexOf(click);\n\n      if (pos > -1) {\n        this._generateBreadcrumbs(click);\n        this._clicks.splice(pos, 1);\n      }\n    }\n\n    // Trigger new check, unless no clicks left\n    if (this._clicks.length) {\n      this._scheduleCheckClicks();\n    }\n  }\n\n  /** Generate matching breadcrumb(s) for the click. */\n  private _generateBreadcrumbs(click: Click): void {\n    const replay = this._replay;\n    const hadScroll = click.scrollAfter && click.scrollAfter <= this._scollTimeout;\n    const hadMutation = click.mutationAfter && click.mutationAfter <= this._threshold;\n\n    const isSlowClick = !hadScroll && !hadMutation;\n    const { clickCount, clickBreadcrumb } = click;\n\n    // Slow click\n    if (isSlowClick) {\n      // If `mutationAfter` is set, it means a mutation happened after the threshold, but before the timeout\n      // If not, it means we just timed out without scroll & mutation\n      const timeAfterClickMs = Math.min(click.mutationAfter || this._timeout, this._timeout) * 1000;\n      const endReason = timeAfterClickMs < this._timeout * 1000 ? 'mutation' : 'timeout';\n\n      const breadcrumb: ReplaySlowClickFrame = {\n        type: 'default',\n        message: clickBreadcrumb.message,\n        timestamp: clickBreadcrumb.timestamp,\n        category: 'ui.slowClickDetected',\n        data: {\n          ...clickBreadcrumb.data,\n          url: WINDOW.location.href,\n          route: replay.getCurrentRoute(),\n          timeAfterClickMs,\n          endReason,\n          // If clickCount === 0, it means multiClick was not correctly captured here\n          // - we still want to send 1 in this case\n          clickCount: clickCount || 1,\n        },\n      };\n\n      this._addBreadcrumbEvent(replay, breadcrumb);\n      return;\n    }\n\n    // Multi click\n    if (clickCount > 1) {\n      const breadcrumb: ReplayMultiClickFrame = {\n        type: 'default',\n        message: clickBreadcrumb.message,\n        timestamp: clickBreadcrumb.timestamp,\n        category: 'ui.multiClick',\n        data: {\n          ...clickBreadcrumb.data,\n          url: WINDOW.location.href,\n          route: replay.getCurrentRoute(),\n          clickCount,\n          metric: true,\n        },\n      };\n\n      this._addBreadcrumbEvent(replay, breadcrumb);\n    }\n  }\n\n  /** Schedule to check current clicks. */\n  private _scheduleCheckClicks(): void {\n    if (this._checkClickTimeout) {\n      clearTimeout(this._checkClickTimeout);\n    }\n\n    this._checkClickTimeout = setTimeout(() => this._checkClicks(), 1000);\n  }\n}\n\nconst SLOW_CLICK_TAGS = ['A', 'BUTTON', 'INPUT'];\n\n/** exported for tests only */\nexport function ignoreElement(node: HTMLElement, ignoreSelector: string): boolean {\n  if (!SLOW_CLICK_TAGS.includes(node.tagName)) {\n    return true;\n  }\n\n  // If <input> tag, we only want to consider input[type='submit'] & input[type='button']\n  if (node.tagName === 'INPUT' && !['submit', 'button'].includes(node.getAttribute('type') || '')) {\n    return true;\n  }\n\n  // If <a> tag, detect special variants that may not lead to an action\n  // If target !== _self, we may open the link somewhere else, which would lead to no action\n  // Also, when downloading a file, we may not leave the page, but still not trigger an action\n  if (\n    node.tagName === 'A' &&\n    (node.hasAttribute('download') || (node.hasAttribute('target') && node.getAttribute('target') !== '_self'))\n  ) {\n    return true;\n  }\n\n  if (ignoreSelector && node.matches(ignoreSelector)) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction isClickBreadcrumb(breadcrumb: Breadcrumb): breadcrumb is ClickBreadcrumb {\n  return !!(breadcrumb.data && typeof breadcrumb.data.nodeId === 'number' && breadcrumb.timestamp);\n}\n\n// This is good enough for us, and is easier to test/mock than `timestampInSeconds`\nfunction nowInSeconds(): number {\n  return Date.now() / 1000;\n}\n\n/** Update the click detector based on a recording event of rrweb. */\nexport function updateClickDetectorForRecordingEvent(clickDetector: ReplayClickDetector, event: RecordingEvent): void {\n  try {\n    // note: We only consider incremental snapshots here\n    // This means that any full snapshot is ignored for mutation detection - the reason is that we simply cannot know if a mutation happened here.\n    // E.g. think that we are buffering, an error happens and we take a full snapshot because we switched to session mode -\n    // in this scenario, we would not know if a dead click happened because of the error, which is a key dead click scenario.\n    // Instead, by ignoring full snapshots, we have the risk that we generate a false positive\n    // (if a mutation _did_ happen but was \"swallowed\" by the full snapshot)\n    // But this should be more unlikely as we'd generally capture the incremental snapshot right away\n\n    if (!isIncrementalEvent(event)) {\n      return;\n    }\n\n    const { source } = event.data;\n    if (source === IncrementalSource.Mutation) {\n      clickDetector.registerMutation(event.timestamp);\n    }\n\n    if (source === IncrementalSource.Scroll) {\n      clickDetector.registerScroll(event.timestamp);\n    }\n\n    if (isIncrementalMouseInteraction(event)) {\n      const { type, id } = event.data;\n      const node = record.mirror.getNode(id);\n\n      if (node instanceof HTMLElement && type === MouseInteractions.Click) {\n        clickDetector.registerClick(node);\n      }\n    }\n  } catch {\n    // ignore errors here, e.g. if accessing something that does not exist\n  }\n}\n\nfunction isIncrementalEvent(event: RecordingEvent): event is IncrementalRecordingEvent {\n  return event.type === ReplayEventTypeIncrementalSnapshot;\n}\n\nfunction isIncrementalMouseInteraction(\n  event: IncrementalRecordingEvent,\n): event is IncrementalMouseInteractionRecordingEvent {\n  return event.data.source === IncrementalSource.MouseInteraction;\n}\n", "import type { ReplayBreadcrumbFrame } from '../types/replayFrame';\n\n/**\n * Create a breadcrumb for a replay.\n */\nexport function createBreadcrumb(\n  breadcrumb: Omit<ReplayBreadcrumbFrame, 'timestamp' | 'type'> & Partial<Pick<ReplayBreadcrumbFrame, 'timestamp'>>,\n): ReplayBreadcrumbFrame {\n  return {\n    timestamp: Date.now() / 1000,\n    type: 'default',\n    ...breadcrumb,\n  };\n}\n", "var NodeType;\r\n(function (NodeType) {\r\n    NodeType[NodeType[\"Document\"] = 0] = \"Document\";\r\n    NodeType[NodeType[\"DocumentType\"] = 1] = \"DocumentType\";\r\n    NodeType[NodeType[\"Element\"] = 2] = \"Element\";\r\n    NodeType[NodeType[\"Text\"] = 3] = \"Text\";\r\n    NodeType[NodeType[\"CDATA\"] = 4] = \"CDATA\";\r\n    NodeType[NodeType[\"Comment\"] = 5] = \"Comment\";\r\n})(NodeType || (NodeType = {}));\n\nfunction isElement(n) {\r\n    return n.nodeType === n.ELEMENT_NODE;\r\n}\r\nfunction isShadowRoot(n) {\r\n    const host = n?.host;\r\n    return Boolean(host?.shadowRoot === n);\r\n}\r\nfunction isNativeShadowDom(shadowRoot) {\r\n    return Object.prototype.toString.call(shadowRoot) === '[object ShadowRoot]';\r\n}\r\nfunction fixBrowserCompatibilityIssuesInCSS(cssText) {\r\n    if (cssText.includes(' background-clip: text;') &&\r\n        !cssText.includes(' -webkit-background-clip: text;')) {\r\n        cssText = cssText.replace(' background-clip: text;', ' -webkit-background-clip: text; background-clip: text;');\r\n    }\r\n    return cssText;\r\n}\r\nfunction escapeImportStatement(rule) {\r\n    const { cssText } = rule;\r\n    if (cssText.split('\"').length < 3)\r\n        return cssText;\r\n    const statement = ['@import', `url(${JSON.stringify(rule.href)})`];\r\n    if (rule.layerName === '') {\r\n        statement.push(`layer`);\r\n    }\r\n    else if (rule.layerName) {\r\n        statement.push(`layer(${rule.layerName})`);\r\n    }\r\n    if (rule.supportsText) {\r\n        statement.push(`supports(${rule.supportsText})`);\r\n    }\r\n    if (rule.media.length) {\r\n        statement.push(rule.media.mediaText);\r\n    }\r\n    return statement.join(' ') + ';';\r\n}\r\nfunction stringifyStylesheet(s) {\r\n    try {\r\n        const rules = s.rules || s.cssRules;\r\n        return rules\r\n            ? fixBrowserCompatibilityIssuesInCSS(Array.from(rules, stringifyRule).join(''))\r\n            : null;\r\n    }\r\n    catch (error) {\r\n        return null;\r\n    }\r\n}\r\nfunction stringifyRule(rule) {\r\n    let importStringified;\r\n    if (isCSSImportRule(rule)) {\r\n        try {\r\n            importStringified =\r\n                stringifyStylesheet(rule.styleSheet) ||\r\n                    escapeImportStatement(rule);\r\n        }\r\n        catch (error) {\r\n        }\r\n    }\r\n    else if (isCSSStyleRule(rule) && rule.selectorText.includes(':')) {\r\n        return fixSafariColons(rule.cssText);\r\n    }\r\n    return importStringified || rule.cssText;\r\n}\r\nfunction fixSafariColons(cssStringified) {\r\n    const regex = /(\\[(?:[\\w-]+)[^\\\\])(:(?:[\\w-]+)\\])/gm;\r\n    return cssStringified.replace(regex, '$1\\\\$2');\r\n}\r\nfunction isCSSImportRule(rule) {\r\n    return 'styleSheet' in rule;\r\n}\r\nfunction isCSSStyleRule(rule) {\r\n    return 'selectorText' in rule;\r\n}\r\nclass Mirror {\r\n    constructor() {\r\n        this.idNodeMap = new Map();\r\n        this.nodeMetaMap = new WeakMap();\r\n    }\r\n    getId(n) {\r\n        if (!n)\r\n            return -1;\r\n        const id = this.getMeta(n)?.id;\r\n        return id ?? -1;\r\n    }\r\n    getNode(id) {\r\n        return this.idNodeMap.get(id) || null;\r\n    }\r\n    getIds() {\r\n        return Array.from(this.idNodeMap.keys());\r\n    }\r\n    getMeta(n) {\r\n        return this.nodeMetaMap.get(n) || null;\r\n    }\r\n    removeNodeFromMap(n) {\r\n        const id = this.getId(n);\r\n        this.idNodeMap.delete(id);\r\n        if (n.childNodes) {\r\n            n.childNodes.forEach((childNode) => this.removeNodeFromMap(childNode));\r\n        }\r\n    }\r\n    has(id) {\r\n        return this.idNodeMap.has(id);\r\n    }\r\n    hasNode(node) {\r\n        return this.nodeMetaMap.has(node);\r\n    }\r\n    add(n, meta) {\r\n        const id = meta.id;\r\n        this.idNodeMap.set(id, n);\r\n        this.nodeMetaMap.set(n, meta);\r\n    }\r\n    replace(id, n) {\r\n        const oldNode = this.getNode(id);\r\n        if (oldNode) {\r\n            const meta = this.nodeMetaMap.get(oldNode);\r\n            if (meta)\r\n                this.nodeMetaMap.set(n, meta);\r\n        }\r\n        this.idNodeMap.set(id, n);\r\n    }\r\n    reset() {\r\n        this.idNodeMap = new Map();\r\n        this.nodeMetaMap = new WeakMap();\r\n    }\r\n}\r\nfunction createMirror() {\r\n    return new Mirror();\r\n}\r\nfunction shouldMaskInput({ maskInputOptions, tagName, type, }) {\r\n    if (tagName === 'OPTION') {\r\n        tagName = 'SELECT';\r\n    }\r\n    return Boolean(maskInputOptions[tagName.toLowerCase()] ||\r\n        (type && maskInputOptions[type]) ||\r\n        type === 'password' ||\r\n        (tagName === 'INPUT' && !type && maskInputOptions['text']));\r\n}\r\nfunction maskInputValue({ isMasked, element, value, maskInputFn, }) {\r\n    let text = value || '';\r\n    if (!isMasked) {\r\n        return text;\r\n    }\r\n    if (maskInputFn) {\r\n        text = maskInputFn(text, element);\r\n    }\r\n    return '*'.repeat(text.length);\r\n}\r\nfunction toLowerCase(str) {\r\n    return str.toLowerCase();\r\n}\r\nfunction toUpperCase(str) {\r\n    return str.toUpperCase();\r\n}\r\nconst ORIGINAL_ATTRIBUTE_NAME = '__rrweb_original__';\r\nfunction is2DCanvasBlank(canvas) {\r\n    const ctx = canvas.getContext('2d');\r\n    if (!ctx)\r\n        return true;\r\n    const chunkSize = 50;\r\n    for (let x = 0; x < canvas.width; x += chunkSize) {\r\n        for (let y = 0; y < canvas.height; y += chunkSize) {\r\n            const getImageData = ctx.getImageData;\r\n            const originalGetImageData = ORIGINAL_ATTRIBUTE_NAME in getImageData\r\n                ? getImageData[ORIGINAL_ATTRIBUTE_NAME]\r\n                : getImageData;\r\n            const pixelBuffer = new Uint32Array(originalGetImageData.call(ctx, x, y, Math.min(chunkSize, canvas.width - x), Math.min(chunkSize, canvas.height - y)).data.buffer);\r\n            if (pixelBuffer.some((pixel) => pixel !== 0))\r\n                return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction isNodeMetaEqual(a, b) {\r\n    if (!a || !b || a.type !== b.type)\r\n        return false;\r\n    if (a.type === NodeType.Document)\r\n        return a.compatMode === b.compatMode;\r\n    else if (a.type === NodeType.DocumentType)\r\n        return (a.name === b.name &&\r\n            a.publicId === b.publicId &&\r\n            a.systemId === b.systemId);\r\n    else if (a.type === NodeType.Comment ||\r\n        a.type === NodeType.Text ||\r\n        a.type === NodeType.CDATA)\r\n        return a.textContent === b.textContent;\r\n    else if (a.type === NodeType.Element)\r\n        return (a.tagName === b.tagName &&\r\n            JSON.stringify(a.attributes) ===\r\n                JSON.stringify(b.attributes) &&\r\n            a.isSVG === b.isSVG &&\r\n            a.needBlock === b.needBlock);\r\n    return false;\r\n}\r\nfunction getInputType(element) {\r\n    const type = element.type;\r\n    return element.hasAttribute('data-rr-is-password')\r\n        ? 'password'\r\n        : type\r\n            ?\r\n                toLowerCase(type)\r\n            : null;\r\n}\r\nfunction getInputValue(el, tagName, type) {\r\n    if (tagName === 'INPUT' && (type === 'radio' || type === 'checkbox')) {\r\n        return el.getAttribute('value') || '';\r\n    }\r\n    return el.value;\r\n}\n\nlet _id = 1;\r\nconst tagNameRegex = new RegExp('[^a-z0-9-_:]');\r\nconst IGNORED_NODE = -2;\r\nfunction genId() {\r\n    return _id++;\r\n}\r\nfunction getValidTagName(element) {\r\n    if (element instanceof HTMLFormElement) {\r\n        return 'form';\r\n    }\r\n    const processedTagName = toLowerCase(element.tagName);\r\n    if (tagNameRegex.test(processedTagName)) {\r\n        return 'div';\r\n    }\r\n    return processedTagName;\r\n}\r\nfunction extractOrigin(url) {\r\n    let origin = '';\r\n    if (url.indexOf('//') > -1) {\r\n        origin = url.split('/').slice(0, 3).join('/');\r\n    }\r\n    else {\r\n        origin = url.split('/')[0];\r\n    }\r\n    origin = origin.split('?')[0];\r\n    return origin;\r\n}\r\nlet canvasService;\r\nlet canvasCtx;\r\nconst URL_IN_CSS_REF = /url\\((?:(')([^']*)'|(\")(.*?)\"|([^)]*))\\)/gm;\r\nconst URL_PROTOCOL_MATCH = /^(?:[a-z+]+:)?\\/\\//i;\r\nconst URL_WWW_MATCH = /^www\\..*/i;\r\nconst DATA_URI = /^(data:)([^,]*),(.*)/i;\r\nfunction absoluteToStylesheet(cssText, href) {\r\n    return (cssText || '').replace(URL_IN_CSS_REF, (origin, quote1, path1, quote2, path2, path3) => {\r\n        const filePath = path1 || path2 || path3;\r\n        const maybeQuote = quote1 || quote2 || '';\r\n        if (!filePath) {\r\n            return origin;\r\n        }\r\n        if (URL_PROTOCOL_MATCH.test(filePath) || URL_WWW_MATCH.test(filePath)) {\r\n            return `url(${maybeQuote}${filePath}${maybeQuote})`;\r\n        }\r\n        if (DATA_URI.test(filePath)) {\r\n            return `url(${maybeQuote}${filePath}${maybeQuote})`;\r\n        }\r\n        if (filePath[0] === '/') {\r\n            return `url(${maybeQuote}${extractOrigin(href) + filePath}${maybeQuote})`;\r\n        }\r\n        const stack = href.split('/');\r\n        const parts = filePath.split('/');\r\n        stack.pop();\r\n        for (const part of parts) {\r\n            if (part === '.') {\r\n                continue;\r\n            }\r\n            else if (part === '..') {\r\n                stack.pop();\r\n            }\r\n            else {\r\n                stack.push(part);\r\n            }\r\n        }\r\n        return `url(${maybeQuote}${stack.join('/')}${maybeQuote})`;\r\n    });\r\n}\r\nconst SRCSET_NOT_SPACES = /^[^ \\t\\n\\r\\u000c]+/;\r\nconst SRCSET_COMMAS_OR_SPACES = /^[, \\t\\n\\r\\u000c]+/;\r\nfunction getAbsoluteSrcsetString(doc, attributeValue) {\r\n    if (attributeValue.trim() === '') {\r\n        return attributeValue;\r\n    }\r\n    let pos = 0;\r\n    function collectCharacters(regEx) {\r\n        let chars;\r\n        const match = regEx.exec(attributeValue.substring(pos));\r\n        if (match) {\r\n            chars = match[0];\r\n            pos += chars.length;\r\n            return chars;\r\n        }\r\n        return '';\r\n    }\r\n    const output = [];\r\n    while (true) {\r\n        collectCharacters(SRCSET_COMMAS_OR_SPACES);\r\n        if (pos >= attributeValue.length) {\r\n            break;\r\n        }\r\n        let url = collectCharacters(SRCSET_NOT_SPACES);\r\n        if (url.slice(-1) === ',') {\r\n            url = absoluteToDoc(doc, url.substring(0, url.length - 1));\r\n            output.push(url);\r\n        }\r\n        else {\r\n            let descriptorsStr = '';\r\n            url = absoluteToDoc(doc, url);\r\n            let inParens = false;\r\n            while (true) {\r\n                const c = attributeValue.charAt(pos);\r\n                if (c === '') {\r\n                    output.push((url + descriptorsStr).trim());\r\n                    break;\r\n                }\r\n                else if (!inParens) {\r\n                    if (c === ',') {\r\n                        pos += 1;\r\n                        output.push((url + descriptorsStr).trim());\r\n                        break;\r\n                    }\r\n                    else if (c === '(') {\r\n                        inParens = true;\r\n                    }\r\n                }\r\n                else {\r\n                    if (c === ')') {\r\n                        inParens = false;\r\n                    }\r\n                }\r\n                descriptorsStr += c;\r\n                pos += 1;\r\n            }\r\n        }\r\n    }\r\n    return output.join(', ');\r\n}\r\nfunction absoluteToDoc(doc, attributeValue) {\r\n    if (!attributeValue || attributeValue.trim() === '') {\r\n        return attributeValue;\r\n    }\r\n    const a = doc.createElement('a');\r\n    a.href = attributeValue;\r\n    return a.href;\r\n}\r\nfunction isSVGElement(el) {\r\n    return Boolean(el.tagName === 'svg' || el.ownerSVGElement);\r\n}\r\nfunction getHref() {\r\n    const a = document.createElement('a');\r\n    a.href = '';\r\n    return a.href;\r\n}\r\nfunction transformAttribute(doc, tagName, name, value, element, maskAttributeFn) {\r\n    if (!value) {\r\n        return value;\r\n    }\r\n    if (name === 'src' ||\r\n        (name === 'href' && !(tagName === 'use' && value[0] === '#'))) {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    else if (name === 'xlink:href' && value[0] !== '#') {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    else if (name === 'background' &&\r\n        (tagName === 'table' || tagName === 'td' || tagName === 'th')) {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    else if (name === 'srcset') {\r\n        return getAbsoluteSrcsetString(doc, value);\r\n    }\r\n    else if (name === 'style') {\r\n        return absoluteToStylesheet(value, getHref());\r\n    }\r\n    else if (tagName === 'object' && name === 'data') {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    if (typeof maskAttributeFn === 'function') {\r\n        return maskAttributeFn(name, value, element);\r\n    }\r\n    return value;\r\n}\r\nfunction ignoreAttribute(tagName, name, _value) {\r\n    return (tagName === 'video' || tagName === 'audio') && name === 'autoplay';\r\n}\r\nfunction _isBlockedElement(element, blockClass, blockSelector, unblockSelector) {\r\n    try {\r\n        if (unblockSelector && element.matches(unblockSelector)) {\r\n            return false;\r\n        }\r\n        if (typeof blockClass === 'string') {\r\n            if (element.classList.contains(blockClass)) {\r\n                return true;\r\n            }\r\n        }\r\n        else {\r\n            for (let eIndex = element.classList.length; eIndex--;) {\r\n                const className = element.classList[eIndex];\r\n                if (blockClass.test(className)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        if (blockSelector) {\r\n            return element.matches(blockSelector);\r\n        }\r\n    }\r\n    catch (e) {\r\n    }\r\n    return false;\r\n}\r\nfunction elementClassMatchesRegex(el, regex) {\r\n    for (let eIndex = el.classList.length; eIndex--;) {\r\n        const className = el.classList[eIndex];\r\n        if (regex.test(className)) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction classMatchesRegex(node, regex, checkAncestors) {\r\n    if (!node)\r\n        return false;\r\n    if (checkAncestors) {\r\n        return (distanceToMatch(node, (node) => elementClassMatchesRegex(node, regex)) >= 0);\r\n    }\r\n    else if (node.nodeType === node.ELEMENT_NODE) {\r\n        return elementClassMatchesRegex(node, regex);\r\n    }\r\n    return false;\r\n}\r\nfunction distanceToMatch(node, matchPredicate, limit = Infinity, distance = 0) {\r\n    if (!node)\r\n        return -1;\r\n    if (node.nodeType !== node.ELEMENT_NODE)\r\n        return -1;\r\n    if (distance > limit)\r\n        return -1;\r\n    if (matchPredicate(node))\r\n        return distance;\r\n    return distanceToMatch(node.parentNode, matchPredicate, limit, distance + 1);\r\n}\r\nfunction createMatchPredicate(className, selector) {\r\n    return (node) => {\r\n        const el = node;\r\n        if (el === null)\r\n            return false;\r\n        try {\r\n            if (className) {\r\n                if (typeof className === 'string') {\r\n                    if (el.matches(`.${className}`))\r\n                        return true;\r\n                }\r\n                else if (elementClassMatchesRegex(el, className)) {\r\n                    return true;\r\n                }\r\n            }\r\n            if (selector && el.matches(selector))\r\n                return true;\r\n            return false;\r\n        }\r\n        catch {\r\n            return false;\r\n        }\r\n    };\r\n}\r\nfunction needMaskingText(node, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, maskAllText) {\r\n    try {\r\n        const el = node.nodeType === node.ELEMENT_NODE\r\n            ? node\r\n            : node.parentElement;\r\n        if (el === null)\r\n            return false;\r\n        if (el.tagName === 'INPUT') {\r\n            const autocomplete = el.getAttribute('autocomplete');\r\n            const disallowedAutocompleteValues = [\r\n                'current-password',\r\n                'new-password',\r\n                'cc-number',\r\n                'cc-exp',\r\n                'cc-exp-month',\r\n                'cc-exp-year',\r\n                'cc-csc',\r\n            ];\r\n            if (disallowedAutocompleteValues.includes(autocomplete)) {\r\n                return true;\r\n            }\r\n        }\r\n        let maskDistance = -1;\r\n        let unmaskDistance = -1;\r\n        if (maskAllText) {\r\n            unmaskDistance = distanceToMatch(el, createMatchPredicate(unmaskTextClass, unmaskTextSelector));\r\n            if (unmaskDistance < 0) {\r\n                return true;\r\n            }\r\n            maskDistance = distanceToMatch(el, createMatchPredicate(maskTextClass, maskTextSelector), unmaskDistance >= 0 ? unmaskDistance : Infinity);\r\n        }\r\n        else {\r\n            maskDistance = distanceToMatch(el, createMatchPredicate(maskTextClass, maskTextSelector));\r\n            if (maskDistance < 0) {\r\n                return false;\r\n            }\r\n            unmaskDistance = distanceToMatch(el, createMatchPredicate(unmaskTextClass, unmaskTextSelector), maskDistance >= 0 ? maskDistance : Infinity);\r\n        }\r\n        return maskDistance >= 0\r\n            ? unmaskDistance >= 0\r\n                ? maskDistance <= unmaskDistance\r\n                : true\r\n            : unmaskDistance >= 0\r\n                ? false\r\n                : !!maskAllText;\r\n    }\r\n    catch (e) {\r\n    }\r\n    return !!maskAllText;\r\n}\r\nfunction onceIframeLoaded(iframeEl, listener, iframeLoadTimeout) {\r\n    const win = iframeEl.contentWindow;\r\n    if (!win) {\r\n        return;\r\n    }\r\n    let fired = false;\r\n    let readyState;\r\n    try {\r\n        readyState = win.document.readyState;\r\n    }\r\n    catch (error) {\r\n        return;\r\n    }\r\n    if (readyState !== 'complete') {\r\n        const timer = setTimeout(() => {\r\n            if (!fired) {\r\n                listener();\r\n                fired = true;\r\n            }\r\n        }, iframeLoadTimeout);\r\n        iframeEl.addEventListener('load', () => {\r\n            clearTimeout(timer);\r\n            fired = true;\r\n            listener();\r\n        });\r\n        return;\r\n    }\r\n    const blankUrl = 'about:blank';\r\n    if (win.location.href !== blankUrl ||\r\n        iframeEl.src === blankUrl ||\r\n        iframeEl.src === '') {\r\n        setTimeout(listener, 0);\r\n        return iframeEl.addEventListener('load', listener);\r\n    }\r\n    iframeEl.addEventListener('load', listener);\r\n}\r\nfunction onceStylesheetLoaded(link, listener, styleSheetLoadTimeout) {\r\n    let fired = false;\r\n    let styleSheetLoaded;\r\n    try {\r\n        styleSheetLoaded = link.sheet;\r\n    }\r\n    catch (error) {\r\n        return;\r\n    }\r\n    if (styleSheetLoaded)\r\n        return;\r\n    const timer = setTimeout(() => {\r\n        if (!fired) {\r\n            listener();\r\n            fired = true;\r\n        }\r\n    }, styleSheetLoadTimeout);\r\n    link.addEventListener('load', () => {\r\n        clearTimeout(timer);\r\n        fired = true;\r\n        listener();\r\n    });\r\n}\r\nfunction serializeNode(n, options) {\r\n    const { doc, mirror, blockClass, blockSelector, unblockSelector, maskAllText, maskAttributeFn, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, inlineStylesheet, maskInputOptions = {}, maskTextFn, maskInputFn, dataURLOptions = {}, inlineImages, recordCanvas, keepIframeSrcFn, newlyAddedElement = false, } = options;\r\n    const rootId = getRootId(doc, mirror);\r\n    switch (n.nodeType) {\r\n        case n.DOCUMENT_NODE:\r\n            if (n.compatMode !== 'CSS1Compat') {\r\n                return {\r\n                    type: NodeType.Document,\r\n                    childNodes: [],\r\n                    compatMode: n.compatMode,\r\n                };\r\n            }\r\n            else {\r\n                return {\r\n                    type: NodeType.Document,\r\n                    childNodes: [],\r\n                };\r\n            }\r\n        case n.DOCUMENT_TYPE_NODE:\r\n            return {\r\n                type: NodeType.DocumentType,\r\n                name: n.name,\r\n                publicId: n.publicId,\r\n                systemId: n.systemId,\r\n                rootId,\r\n            };\r\n        case n.ELEMENT_NODE:\r\n            return serializeElementNode(n, {\r\n                doc,\r\n                blockClass,\r\n                blockSelector,\r\n                unblockSelector,\r\n                inlineStylesheet,\r\n                maskAttributeFn,\r\n                maskInputOptions,\r\n                maskInputFn,\r\n                dataURLOptions,\r\n                inlineImages,\r\n                recordCanvas,\r\n                keepIframeSrcFn,\r\n                newlyAddedElement,\r\n                rootId,\r\n                maskAllText,\r\n                maskTextClass,\r\n                unmaskTextClass,\r\n                maskTextSelector,\r\n                unmaskTextSelector,\r\n            });\r\n        case n.TEXT_NODE:\r\n            return serializeTextNode(n, {\r\n                maskAllText,\r\n                maskTextClass,\r\n                unmaskTextClass,\r\n                maskTextSelector,\r\n                unmaskTextSelector,\r\n                maskTextFn,\r\n                maskInputOptions,\r\n                maskInputFn,\r\n                rootId,\r\n            });\r\n        case n.CDATA_SECTION_NODE:\r\n            return {\r\n                type: NodeType.CDATA,\r\n                textContent: '',\r\n                rootId,\r\n            };\r\n        case n.COMMENT_NODE:\r\n            return {\r\n                type: NodeType.Comment,\r\n                textContent: n.textContent || '',\r\n                rootId,\r\n            };\r\n        default:\r\n            return false;\r\n    }\r\n}\r\nfunction getRootId(doc, mirror) {\r\n    if (!mirror.hasNode(doc))\r\n        return undefined;\r\n    const docId = mirror.getId(doc);\r\n    return docId === 1 ? undefined : docId;\r\n}\r\nfunction serializeTextNode(n, options) {\r\n    const { maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, maskTextFn, maskInputOptions, maskInputFn, rootId, } = options;\r\n    const parentTagName = n.parentNode && n.parentNode.tagName;\r\n    let textContent = n.textContent;\r\n    const isStyle = parentTagName === 'STYLE' ? true : undefined;\r\n    const isScript = parentTagName === 'SCRIPT' ? true : undefined;\r\n    const isTextarea = parentTagName === 'TEXTAREA' ? true : undefined;\r\n    if (isStyle && textContent) {\r\n        try {\r\n            if (n.nextSibling || n.previousSibling) {\r\n            }\r\n            else if (n.parentNode.sheet?.cssRules) {\r\n                textContent = stringifyStylesheet(n.parentNode.sheet);\r\n            }\r\n        }\r\n        catch (err) {\r\n            console.warn(`Cannot get CSS styles from text's parentNode. Error: ${err}`, n);\r\n        }\r\n        textContent = absoluteToStylesheet(textContent, getHref());\r\n    }\r\n    if (isScript) {\r\n        textContent = 'SCRIPT_PLACEHOLDER';\r\n    }\r\n    const forceMask = needMaskingText(n, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, maskAllText);\r\n    if (!isStyle && !isScript && !isTextarea && textContent && forceMask) {\r\n        textContent = maskTextFn\r\n            ? maskTextFn(textContent)\r\n            : textContent.replace(/[\\S]/g, '*');\r\n    }\r\n    if (isTextarea && textContent && (maskInputOptions.textarea || forceMask)) {\r\n        textContent = maskInputFn\r\n            ? maskInputFn(textContent, n.parentNode)\r\n            : textContent.replace(/[\\S]/g, '*');\r\n    }\r\n    if (parentTagName === 'OPTION' && textContent) {\r\n        const isInputMasked = shouldMaskInput({\r\n            type: null,\r\n            tagName: parentTagName,\r\n            maskInputOptions,\r\n        });\r\n        textContent = maskInputValue({\r\n            isMasked: needMaskingText(n, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, isInputMasked),\r\n            element: n,\r\n            value: textContent,\r\n            maskInputFn,\r\n        });\r\n    }\r\n    return {\r\n        type: NodeType.Text,\r\n        textContent: textContent || '',\r\n        isStyle,\r\n        rootId,\r\n    };\r\n}\r\nfunction serializeElementNode(n, options) {\r\n    const { doc, blockClass, blockSelector, unblockSelector, inlineStylesheet, maskInputOptions = {}, maskAttributeFn, maskInputFn, dataURLOptions = {}, inlineImages, recordCanvas, keepIframeSrcFn, newlyAddedElement = false, rootId, maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, } = options;\r\n    const needBlock = _isBlockedElement(n, blockClass, blockSelector, unblockSelector);\r\n    const tagName = getValidTagName(n);\r\n    let attributes = {};\r\n    const len = n.attributes.length;\r\n    for (let i = 0; i < len; i++) {\r\n        const attr = n.attributes[i];\r\n        if (attr.name && !ignoreAttribute(tagName, attr.name, attr.value)) {\r\n            attributes[attr.name] = transformAttribute(doc, tagName, toLowerCase(attr.name), attr.value, n, maskAttributeFn);\r\n        }\r\n    }\r\n    if (tagName === 'link' && inlineStylesheet) {\r\n        const stylesheet = Array.from(doc.styleSheets).find((s) => {\r\n            return s.href === n.href;\r\n        });\r\n        let cssText = null;\r\n        if (stylesheet) {\r\n            cssText = stringifyStylesheet(stylesheet);\r\n        }\r\n        if (cssText) {\r\n            delete attributes.rel;\r\n            delete attributes.href;\r\n            attributes._cssText = absoluteToStylesheet(cssText, stylesheet.href);\r\n        }\r\n    }\r\n    if (tagName === 'style' &&\r\n        n.sheet &&\r\n        !(n.innerText || n.textContent || '').trim().length) {\r\n        const cssText = stringifyStylesheet(n.sheet);\r\n        if (cssText) {\r\n            attributes._cssText = absoluteToStylesheet(cssText, getHref());\r\n        }\r\n    }\r\n    if (tagName === 'input' ||\r\n        tagName === 'textarea' ||\r\n        tagName === 'select' ||\r\n        tagName === 'option') {\r\n        const el = n;\r\n        const type = getInputType(el);\r\n        const value = getInputValue(el, toUpperCase(tagName), type);\r\n        const checked = el.checked;\r\n        if (type !== 'submit' && type !== 'button' && value) {\r\n            const forceMask = needMaskingText(el, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, shouldMaskInput({\r\n                type,\r\n                tagName: toUpperCase(tagName),\r\n                maskInputOptions,\r\n            }));\r\n            attributes.value = maskInputValue({\r\n                isMasked: forceMask,\r\n                element: el,\r\n                value,\r\n                maskInputFn,\r\n            });\r\n        }\r\n        if (checked) {\r\n            attributes.checked = checked;\r\n        }\r\n    }\r\n    if (tagName === 'option') {\r\n        if (n.selected && !maskInputOptions['select']) {\r\n            attributes.selected = true;\r\n        }\r\n        else {\r\n            delete attributes.selected;\r\n        }\r\n    }\r\n    if (tagName === 'canvas' && recordCanvas) {\r\n        if (n.__context === '2d') {\r\n            if (!is2DCanvasBlank(n)) {\r\n                attributes.rr_dataURL = n.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            }\r\n        }\r\n        else if (!('__context' in n)) {\r\n            const canvasDataURL = n.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            const blankCanvas = document.createElement('canvas');\r\n            blankCanvas.width = n.width;\r\n            blankCanvas.height = n.height;\r\n            const blankCanvasDataURL = blankCanvas.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            if (canvasDataURL !== blankCanvasDataURL) {\r\n                attributes.rr_dataURL = canvasDataURL;\r\n            }\r\n        }\r\n    }\r\n    if (tagName === 'img' && inlineImages) {\r\n        if (!canvasService) {\r\n            canvasService = doc.createElement('canvas');\r\n            canvasCtx = canvasService.getContext('2d');\r\n        }\r\n        const image = n;\r\n        const oldValue = image.crossOrigin;\r\n        image.crossOrigin = 'anonymous';\r\n        const recordInlineImage = () => {\r\n            image.removeEventListener('load', recordInlineImage);\r\n            try {\r\n                canvasService.width = image.naturalWidth;\r\n                canvasService.height = image.naturalHeight;\r\n                canvasCtx.drawImage(image, 0, 0);\r\n                attributes.rr_dataURL = canvasService.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            }\r\n            catch (err) {\r\n                console.warn(`Cannot inline img src=${image.currentSrc}! Error: ${err}`);\r\n            }\r\n            oldValue\r\n                ? (attributes.crossOrigin = oldValue)\r\n                : image.removeAttribute('crossorigin');\r\n        };\r\n        if (image.complete && image.naturalWidth !== 0)\r\n            recordInlineImage();\r\n        else\r\n            image.addEventListener('load', recordInlineImage);\r\n    }\r\n    if (tagName === 'audio' || tagName === 'video') {\r\n        attributes.rr_mediaState = n.paused\r\n            ? 'paused'\r\n            : 'played';\r\n        attributes.rr_mediaCurrentTime = n.currentTime;\r\n    }\r\n    if (!newlyAddedElement) {\r\n        if (n.scrollLeft) {\r\n            attributes.rr_scrollLeft = n.scrollLeft;\r\n        }\r\n        if (n.scrollTop) {\r\n            attributes.rr_scrollTop = n.scrollTop;\r\n        }\r\n    }\r\n    if (needBlock) {\r\n        const { width, height } = n.getBoundingClientRect();\r\n        attributes = {\r\n            class: attributes.class,\r\n            rr_width: `${width}px`,\r\n            rr_height: `${height}px`,\r\n        };\r\n    }\r\n    if (tagName === 'iframe' && !keepIframeSrcFn(attributes.src)) {\r\n        if (!n.contentDocument) {\r\n            attributes.rr_src = attributes.src;\r\n        }\r\n        delete attributes.src;\r\n    }\r\n    let isCustomElement;\r\n    try {\r\n        if (customElements.get(tagName))\r\n            isCustomElement = true;\r\n    }\r\n    catch (e) {\r\n    }\r\n    return {\r\n        type: NodeType.Element,\r\n        tagName,\r\n        attributes,\r\n        childNodes: [],\r\n        isSVG: isSVGElement(n) || undefined,\r\n        needBlock,\r\n        rootId,\r\n        isCustom: isCustomElement,\r\n    };\r\n}\r\nfunction lowerIfExists(maybeAttr) {\r\n    if (maybeAttr === undefined || maybeAttr === null) {\r\n        return '';\r\n    }\r\n    else {\r\n        return maybeAttr.toLowerCase();\r\n    }\r\n}\r\nfunction slimDOMExcluded(sn, slimDOMOptions) {\r\n    if (slimDOMOptions.comment && sn.type === NodeType.Comment) {\r\n        return true;\r\n    }\r\n    else if (sn.type === NodeType.Element) {\r\n        if (slimDOMOptions.script &&\r\n            (sn.tagName === 'script' ||\r\n                (sn.tagName === 'link' &&\r\n                    (sn.attributes.rel === 'preload' ||\r\n                        sn.attributes.rel === 'modulepreload') &&\r\n                    sn.attributes.as === 'script') ||\r\n                (sn.tagName === 'link' &&\r\n                    sn.attributes.rel === 'prefetch' &&\r\n                    typeof sn.attributes.href === 'string' &&\r\n                    sn.attributes.href.endsWith('.js')))) {\r\n            return true;\r\n        }\r\n        else if (slimDOMOptions.headFavicon &&\r\n            ((sn.tagName === 'link' && sn.attributes.rel === 'shortcut icon') ||\r\n                (sn.tagName === 'meta' &&\r\n                    (lowerIfExists(sn.attributes.name).match(/^msapplication-tile(image|color)$/) ||\r\n                        lowerIfExists(sn.attributes.name) === 'application-name' ||\r\n                        lowerIfExists(sn.attributes.rel) === 'icon' ||\r\n                        lowerIfExists(sn.attributes.rel) === 'apple-touch-icon' ||\r\n                        lowerIfExists(sn.attributes.rel) === 'shortcut icon')))) {\r\n            return true;\r\n        }\r\n        else if (sn.tagName === 'meta') {\r\n            if (slimDOMOptions.headMetaDescKeywords &&\r\n                lowerIfExists(sn.attributes.name).match(/^description|keywords$/)) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaSocial &&\r\n                (lowerIfExists(sn.attributes.property).match(/^(og|twitter|fb):/) ||\r\n                    lowerIfExists(sn.attributes.name).match(/^(og|twitter):/) ||\r\n                    lowerIfExists(sn.attributes.name) === 'pinterest')) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaRobots &&\r\n                (lowerIfExists(sn.attributes.name) === 'robots' ||\r\n                    lowerIfExists(sn.attributes.name) === 'googlebot' ||\r\n                    lowerIfExists(sn.attributes.name) === 'bingbot')) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaHttpEquiv &&\r\n                sn.attributes['http-equiv'] !== undefined) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaAuthorship &&\r\n                (lowerIfExists(sn.attributes.name) === 'author' ||\r\n                    lowerIfExists(sn.attributes.name) === 'generator' ||\r\n                    lowerIfExists(sn.attributes.name) === 'framework' ||\r\n                    lowerIfExists(sn.attributes.name) === 'publisher' ||\r\n                    lowerIfExists(sn.attributes.name) === 'progid' ||\r\n                    lowerIfExists(sn.attributes.property).match(/^article:/) ||\r\n                    lowerIfExists(sn.attributes.property).match(/^product:/))) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaVerification &&\r\n                (lowerIfExists(sn.attributes.name) === 'google-site-verification' ||\r\n                    lowerIfExists(sn.attributes.name) === 'yandex-verification' ||\r\n                    lowerIfExists(sn.attributes.name) === 'csrf-token' ||\r\n                    lowerIfExists(sn.attributes.name) === 'p:domain_verify' ||\r\n                    lowerIfExists(sn.attributes.name) === 'verify-v1' ||\r\n                    lowerIfExists(sn.attributes.name) === 'verification' ||\r\n                    lowerIfExists(sn.attributes.name) === 'shopify-checkout-api-token')) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction serializeNodeWithId(n, options) {\r\n    const { doc, mirror, blockClass, blockSelector, unblockSelector, maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, skipChild = false, inlineStylesheet = true, maskInputOptions = {}, maskAttributeFn, maskTextFn, maskInputFn, slimDOMOptions, dataURLOptions = {}, inlineImages = false, recordCanvas = false, onSerialize, onIframeLoad, iframeLoadTimeout = 5000, onStylesheetLoad, stylesheetLoadTimeout = 5000, keepIframeSrcFn = () => false, newlyAddedElement = false, } = options;\r\n    let { preserveWhiteSpace = true } = options;\r\n    const _serializedNode = serializeNode(n, {\r\n        doc,\r\n        mirror,\r\n        blockClass,\r\n        blockSelector,\r\n        maskAllText,\r\n        unblockSelector,\r\n        maskTextClass,\r\n        unmaskTextClass,\r\n        maskTextSelector,\r\n        unmaskTextSelector,\r\n        inlineStylesheet,\r\n        maskInputOptions,\r\n        maskAttributeFn,\r\n        maskTextFn,\r\n        maskInputFn,\r\n        dataURLOptions,\r\n        inlineImages,\r\n        recordCanvas,\r\n        keepIframeSrcFn,\r\n        newlyAddedElement,\r\n    });\r\n    if (!_serializedNode) {\r\n        console.warn(n, 'not serialized');\r\n        return null;\r\n    }\r\n    let id;\r\n    if (mirror.hasNode(n)) {\r\n        id = mirror.getId(n);\r\n    }\r\n    else if (slimDOMExcluded(_serializedNode, slimDOMOptions) ||\r\n        (!preserveWhiteSpace &&\r\n            _serializedNode.type === NodeType.Text &&\r\n            !_serializedNode.isStyle &&\r\n            !_serializedNode.textContent.replace(/^\\s+|\\s+$/gm, '').length)) {\r\n        id = IGNORED_NODE;\r\n    }\r\n    else {\r\n        id = genId();\r\n    }\r\n    const serializedNode = Object.assign(_serializedNode, { id });\r\n    mirror.add(n, serializedNode);\r\n    if (id === IGNORED_NODE) {\r\n        return null;\r\n    }\r\n    if (onSerialize) {\r\n        onSerialize(n);\r\n    }\r\n    let recordChild = !skipChild;\r\n    if (serializedNode.type === NodeType.Element) {\r\n        recordChild = recordChild && !serializedNode.needBlock;\r\n        delete serializedNode.needBlock;\r\n        const shadowRoot = n.shadowRoot;\r\n        if (shadowRoot && isNativeShadowDom(shadowRoot))\r\n            serializedNode.isShadowHost = true;\r\n    }\r\n    if ((serializedNode.type === NodeType.Document ||\r\n        serializedNode.type === NodeType.Element) &&\r\n        recordChild) {\r\n        if (slimDOMOptions.headWhitespace &&\r\n            serializedNode.type === NodeType.Element &&\r\n            serializedNode.tagName === 'head') {\r\n            preserveWhiteSpace = false;\r\n        }\r\n        const bypassOptions = {\r\n            doc,\r\n            mirror,\r\n            blockClass,\r\n            blockSelector,\r\n            maskAllText,\r\n            unblockSelector,\r\n            maskTextClass,\r\n            unmaskTextClass,\r\n            maskTextSelector,\r\n            unmaskTextSelector,\r\n            skipChild,\r\n            inlineStylesheet,\r\n            maskInputOptions,\r\n            maskAttributeFn,\r\n            maskTextFn,\r\n            maskInputFn,\r\n            slimDOMOptions,\r\n            dataURLOptions,\r\n            inlineImages,\r\n            recordCanvas,\r\n            preserveWhiteSpace,\r\n            onSerialize,\r\n            onIframeLoad,\r\n            iframeLoadTimeout,\r\n            onStylesheetLoad,\r\n            stylesheetLoadTimeout,\r\n            keepIframeSrcFn,\r\n        };\r\n        for (const childN of Array.from(n.childNodes)) {\r\n            const serializedChildNode = serializeNodeWithId(childN, bypassOptions);\r\n            if (serializedChildNode) {\r\n                serializedNode.childNodes.push(serializedChildNode);\r\n            }\r\n        }\r\n        if (isElement(n) && n.shadowRoot) {\r\n            for (const childN of Array.from(n.shadowRoot.childNodes)) {\r\n                const serializedChildNode = serializeNodeWithId(childN, bypassOptions);\r\n                if (serializedChildNode) {\r\n                    isNativeShadowDom(n.shadowRoot) &&\r\n                        (serializedChildNode.isShadow = true);\r\n                    serializedNode.childNodes.push(serializedChildNode);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (n.parentNode &&\r\n        isShadowRoot(n.parentNode) &&\r\n        isNativeShadowDom(n.parentNode)) {\r\n        serializedNode.isShadow = true;\r\n    }\r\n    if (serializedNode.type === NodeType.Element &&\r\n        serializedNode.tagName === 'iframe') {\r\n        onceIframeLoaded(n, () => {\r\n            const iframeDoc = n.contentDocument;\r\n            if (iframeDoc && onIframeLoad) {\r\n                const serializedIframeNode = serializeNodeWithId(iframeDoc, {\r\n                    doc: iframeDoc,\r\n                    mirror,\r\n                    blockClass,\r\n                    blockSelector,\r\n                    unblockSelector,\r\n                    maskAllText,\r\n                    maskTextClass,\r\n                    unmaskTextClass,\r\n                    maskTextSelector,\r\n                    unmaskTextSelector,\r\n                    skipChild: false,\r\n                    inlineStylesheet,\r\n                    maskInputOptions,\r\n                    maskAttributeFn,\r\n                    maskTextFn,\r\n                    maskInputFn,\r\n                    slimDOMOptions,\r\n                    dataURLOptions,\r\n                    inlineImages,\r\n                    recordCanvas,\r\n                    preserveWhiteSpace,\r\n                    onSerialize,\r\n                    onIframeLoad,\r\n                    iframeLoadTimeout,\r\n                    onStylesheetLoad,\r\n                    stylesheetLoadTimeout,\r\n                    keepIframeSrcFn,\r\n                });\r\n                if (serializedIframeNode) {\r\n                    onIframeLoad(n, serializedIframeNode);\r\n                }\r\n            }\r\n        }, iframeLoadTimeout);\r\n    }\r\n    if (serializedNode.type === NodeType.Element &&\r\n        serializedNode.tagName === 'link' &&\r\n        serializedNode.attributes.rel === 'stylesheet') {\r\n        onceStylesheetLoaded(n, () => {\r\n            if (onStylesheetLoad) {\r\n                const serializedLinkNode = serializeNodeWithId(n, {\r\n                    doc,\r\n                    mirror,\r\n                    blockClass,\r\n                    blockSelector,\r\n                    unblockSelector,\r\n                    maskAllText,\r\n                    maskTextClass,\r\n                    unmaskTextClass,\r\n                    maskTextSelector,\r\n                    unmaskTextSelector,\r\n                    skipChild: false,\r\n                    inlineStylesheet,\r\n                    maskInputOptions,\r\n                    maskAttributeFn,\r\n                    maskTextFn,\r\n                    maskInputFn,\r\n                    slimDOMOptions,\r\n                    dataURLOptions,\r\n                    inlineImages,\r\n                    recordCanvas,\r\n                    preserveWhiteSpace,\r\n                    onSerialize,\r\n                    onIframeLoad,\r\n                    iframeLoadTimeout,\r\n                    onStylesheetLoad,\r\n                    stylesheetLoadTimeout,\r\n                    keepIframeSrcFn,\r\n                });\r\n                if (serializedLinkNode) {\r\n                    onStylesheetLoad(n, serializedLinkNode);\r\n                }\r\n            }\r\n        }, stylesheetLoadTimeout);\r\n    }\r\n    return serializedNode;\r\n}\r\nfunction snapshot(n, options) {\r\n    const { mirror = new Mirror(), blockClass = 'rr-block', blockSelector = null, unblockSelector = null, maskAllText = false, maskTextClass = 'rr-mask', unmaskTextClass = null, maskTextSelector = null, unmaskTextSelector = null, inlineStylesheet = true, inlineImages = false, recordCanvas = false, maskAllInputs = false, maskAttributeFn, maskTextFn, maskInputFn, slimDOM = false, dataURLOptions, preserveWhiteSpace, onSerialize, onIframeLoad, iframeLoadTimeout, onStylesheetLoad, stylesheetLoadTimeout, keepIframeSrcFn = () => false, } = options || {};\r\n    const maskInputOptions = maskAllInputs === true\r\n        ? {\r\n            color: true,\r\n            date: true,\r\n            'datetime-local': true,\r\n            email: true,\r\n            month: true,\r\n            number: true,\r\n            range: true,\r\n            search: true,\r\n            tel: true,\r\n            text: true,\r\n            time: true,\r\n            url: true,\r\n            week: true,\r\n            textarea: true,\r\n            select: true,\r\n        }\r\n        : maskAllInputs === false\r\n            ? {}\r\n            : maskAllInputs;\r\n    const slimDOMOptions = slimDOM === true || slimDOM === 'all'\r\n        ?\r\n            {\r\n                script: true,\r\n                comment: true,\r\n                headFavicon: true,\r\n                headWhitespace: true,\r\n                headMetaDescKeywords: slimDOM === 'all',\r\n                headMetaSocial: true,\r\n                headMetaRobots: true,\r\n                headMetaHttpEquiv: true,\r\n                headMetaAuthorship: true,\r\n                headMetaVerification: true,\r\n            }\r\n        : slimDOM === false\r\n            ? {}\r\n            : slimDOM;\r\n    return serializeNodeWithId(n, {\r\n        doc: n,\r\n        mirror,\r\n        blockClass,\r\n        blockSelector,\r\n        unblockSelector,\r\n        maskAllText,\r\n        maskTextClass,\r\n        unmaskTextClass,\r\n        maskTextSelector,\r\n        unmaskTextSelector,\r\n        skipChild: false,\r\n        inlineStylesheet,\r\n        maskInputOptions,\r\n        maskAttributeFn,\r\n        maskTextFn,\r\n        maskInputFn,\r\n        slimDOMOptions,\r\n        dataURLOptions,\r\n        inlineImages,\r\n        recordCanvas,\r\n        preserveWhiteSpace,\r\n        onSerialize,\r\n        onIframeLoad,\r\n        iframeLoadTimeout,\r\n        onStylesheetLoad,\r\n        stylesheetLoadTimeout,\r\n        keepIframeSrcFn,\r\n        newlyAddedElement: false,\r\n    });\r\n}\r\nfunction visitSnapshot(node, onVisit) {\r\n    function walk(current) {\r\n        onVisit(current);\r\n        if (current.type === NodeType.Document ||\r\n            current.type === NodeType.Element) {\r\n            current.childNodes.forEach(walk);\r\n        }\r\n    }\r\n    walk(node);\r\n}\r\nfunction cleanupSnapshot() {\r\n    _id = 1;\r\n}\n\nconst commentre = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\r\nfunction parse(css, options = {}) {\r\n    let lineno = 1;\r\n    let column = 1;\r\n    function updatePosition(str) {\r\n        const lines = str.match(/\\n/g);\r\n        if (lines) {\r\n            lineno += lines.length;\r\n        }\r\n        const i = str.lastIndexOf('\\n');\r\n        column = i === -1 ? column + str.length : str.length - i;\r\n    }\r\n    function position() {\r\n        const start = { line: lineno, column };\r\n        return (node) => {\r\n            node.position = new Position(start);\r\n            whitespace();\r\n            return node;\r\n        };\r\n    }\r\n    class Position {\r\n        constructor(start) {\r\n            this.start = start;\r\n            this.end = { line: lineno, column };\r\n            this.source = options.source;\r\n        }\r\n    }\r\n    Position.prototype.content = css;\r\n    const errorsList = [];\r\n    function error(msg) {\r\n        const err = new Error(`${options.source || ''}:${lineno}:${column}: ${msg}`);\r\n        err.reason = msg;\r\n        err.filename = options.source;\r\n        err.line = lineno;\r\n        err.column = column;\r\n        err.source = css;\r\n        if (options.silent) {\r\n            errorsList.push(err);\r\n        }\r\n        else {\r\n            throw err;\r\n        }\r\n    }\r\n    function stylesheet() {\r\n        const rulesList = rules();\r\n        return {\r\n            type: 'stylesheet',\r\n            stylesheet: {\r\n                source: options.source,\r\n                rules: rulesList,\r\n                parsingErrors: errorsList,\r\n            },\r\n        };\r\n    }\r\n    function open() {\r\n        return match(/^{\\s*/);\r\n    }\r\n    function close() {\r\n        return match(/^}/);\r\n    }\r\n    function rules() {\r\n        let node;\r\n        const rules = [];\r\n        whitespace();\r\n        comments(rules);\r\n        while (css.length && css.charAt(0) !== '}' && (node = atrule() || rule())) {\r\n            if (node) {\r\n                rules.push(node);\r\n                comments(rules);\r\n            }\r\n        }\r\n        return rules;\r\n    }\r\n    function match(re) {\r\n        const m = re.exec(css);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const str = m[0];\r\n        updatePosition(str);\r\n        css = css.slice(str.length);\r\n        return m;\r\n    }\r\n    function whitespace() {\r\n        match(/^\\s*/);\r\n    }\r\n    function comments(rules = []) {\r\n        let c;\r\n        while ((c = comment())) {\r\n            if (c) {\r\n                rules.push(c);\r\n            }\r\n            c = comment();\r\n        }\r\n        return rules;\r\n    }\r\n    function comment() {\r\n        const pos = position();\r\n        if ('/' !== css.charAt(0) || '*' !== css.charAt(1)) {\r\n            return;\r\n        }\r\n        let i = 2;\r\n        while ('' !== css.charAt(i) &&\r\n            ('*' !== css.charAt(i) || '/' !== css.charAt(i + 1))) {\r\n            ++i;\r\n        }\r\n        i += 2;\r\n        if ('' === css.charAt(i - 1)) {\r\n            return error('End of comment missing');\r\n        }\r\n        const str = css.slice(2, i - 2);\r\n        column += 2;\r\n        updatePosition(str);\r\n        css = css.slice(i);\r\n        column += 2;\r\n        return pos({\r\n            type: 'comment',\r\n            comment: str,\r\n        });\r\n    }\r\n    function selector() {\r\n        const m = match(/^([^{]+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        return trim(m[0])\r\n            .replace(/\\/\\*([^*]|[\\r\\n]|(\\*+([^*/]|[\\r\\n])))*\\*\\/+/g, '')\r\n            .replace(/\"(?:\\\\\"|[^\"])*\"|'(?:\\\\'|[^'])*'/g, (m) => {\r\n            return m.replace(/,/g, '\\u200C');\r\n        })\r\n            .split(/\\s*(?![^(]*\\)),\\s*/)\r\n            .map((s) => {\r\n            return s.replace(/\\u200C/g, ',');\r\n        });\r\n    }\r\n    function declaration() {\r\n        const pos = position();\r\n        const propMatch = match(/^(\\*?[-#\\/\\*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/);\r\n        if (!propMatch) {\r\n            return;\r\n        }\r\n        const prop = trim(propMatch[0]);\r\n        if (!match(/^:\\s*/)) {\r\n            return error(`property missing ':'`);\r\n        }\r\n        const val = match(/^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^\\)]*?\\)|[^};])+)/);\r\n        const ret = pos({\r\n            type: 'declaration',\r\n            property: prop.replace(commentre, ''),\r\n            value: val ? trim(val[0]).replace(commentre, '') : '',\r\n        });\r\n        match(/^[;\\s]*/);\r\n        return ret;\r\n    }\r\n    function declarations() {\r\n        const decls = [];\r\n        if (!open()) {\r\n            return error(`missing '{'`);\r\n        }\r\n        comments(decls);\r\n        let decl;\r\n        while ((decl = declaration())) {\r\n            if (decl !== false) {\r\n                decls.push(decl);\r\n                comments(decls);\r\n            }\r\n            decl = declaration();\r\n        }\r\n        if (!close()) {\r\n            return error(`missing '}'`);\r\n        }\r\n        return decls;\r\n    }\r\n    function keyframe() {\r\n        let m;\r\n        const vals = [];\r\n        const pos = position();\r\n        while ((m = match(/^((\\d+\\.\\d+|\\.\\d+|\\d+)%?|[a-z]+)\\s*/))) {\r\n            vals.push(m[1]);\r\n            match(/^,\\s*/);\r\n        }\r\n        if (!vals.length) {\r\n            return;\r\n        }\r\n        return pos({\r\n            type: 'keyframe',\r\n            values: vals,\r\n            declarations: declarations(),\r\n        });\r\n    }\r\n    function atkeyframes() {\r\n        const pos = position();\r\n        let m = match(/^@([-\\w]+)?keyframes\\s*/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const vendor = m[1];\r\n        m = match(/^([-\\w]+)\\s*/);\r\n        if (!m) {\r\n            return error('@keyframes missing name');\r\n        }\r\n        const name = m[1];\r\n        if (!open()) {\r\n            return error(`@keyframes missing '{'`);\r\n        }\r\n        let frame;\r\n        let frames = comments();\r\n        while ((frame = keyframe())) {\r\n            frames.push(frame);\r\n            frames = frames.concat(comments());\r\n        }\r\n        if (!close()) {\r\n            return error(`@keyframes missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'keyframes',\r\n            name,\r\n            vendor,\r\n            keyframes: frames,\r\n        });\r\n    }\r\n    function atsupports() {\r\n        const pos = position();\r\n        const m = match(/^@supports *([^{]+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const supports = trim(m[1]);\r\n        if (!open()) {\r\n            return error(`@supports missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@supports missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'supports',\r\n            supports,\r\n            rules: style,\r\n        });\r\n    }\r\n    function athost() {\r\n        const pos = position();\r\n        const m = match(/^@host\\s*/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        if (!open()) {\r\n            return error(`@host missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@host missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'host',\r\n            rules: style,\r\n        });\r\n    }\r\n    function atmedia() {\r\n        const pos = position();\r\n        const m = match(/^@media *([^{]+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const media = trim(m[1]);\r\n        if (!open()) {\r\n            return error(`@media missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@media missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'media',\r\n            media,\r\n            rules: style,\r\n        });\r\n    }\r\n    function atcustommedia() {\r\n        const pos = position();\r\n        const m = match(/^@custom-media\\s+(--[^\\s]+)\\s*([^{;]+);/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        return pos({\r\n            type: 'custom-media',\r\n            name: trim(m[1]),\r\n            media: trim(m[2]),\r\n        });\r\n    }\r\n    function atpage() {\r\n        const pos = position();\r\n        const m = match(/^@page */);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const sel = selector() || [];\r\n        if (!open()) {\r\n            return error(`@page missing '{'`);\r\n        }\r\n        let decls = comments();\r\n        let decl;\r\n        while ((decl = declaration())) {\r\n            decls.push(decl);\r\n            decls = decls.concat(comments());\r\n        }\r\n        if (!close()) {\r\n            return error(`@page missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'page',\r\n            selectors: sel,\r\n            declarations: decls,\r\n        });\r\n    }\r\n    function atdocument() {\r\n        const pos = position();\r\n        const m = match(/^@([-\\w]+)?document *([^{]+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const vendor = trim(m[1]);\r\n        const doc = trim(m[2]);\r\n        if (!open()) {\r\n            return error(`@document missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@document missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'document',\r\n            document: doc,\r\n            vendor,\r\n            rules: style,\r\n        });\r\n    }\r\n    function atfontface() {\r\n        const pos = position();\r\n        const m = match(/^@font-face\\s*/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        if (!open()) {\r\n            return error(`@font-face missing '{'`);\r\n        }\r\n        let decls = comments();\r\n        let decl;\r\n        while ((decl = declaration())) {\r\n            decls.push(decl);\r\n            decls = decls.concat(comments());\r\n        }\r\n        if (!close()) {\r\n            return error(`@font-face missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'font-face',\r\n            declarations: decls,\r\n        });\r\n    }\r\n    const atimport = _compileAtrule('import');\r\n    const atcharset = _compileAtrule('charset');\r\n    const atnamespace = _compileAtrule('namespace');\r\n    function _compileAtrule(name) {\r\n        const re = new RegExp('^@' + name + '\\\\s*([^;]+);');\r\n        return () => {\r\n            const pos = position();\r\n            const m = match(re);\r\n            if (!m) {\r\n                return;\r\n            }\r\n            const ret = { type: name };\r\n            ret[name] = m[1].trim();\r\n            return pos(ret);\r\n        };\r\n    }\r\n    function atrule() {\r\n        if (css[0] !== '@') {\r\n            return;\r\n        }\r\n        return (atkeyframes() ||\r\n            atmedia() ||\r\n            atcustommedia() ||\r\n            atsupports() ||\r\n            atimport() ||\r\n            atcharset() ||\r\n            atnamespace() ||\r\n            atdocument() ||\r\n            atpage() ||\r\n            athost() ||\r\n            atfontface());\r\n    }\r\n    function rule() {\r\n        const pos = position();\r\n        const sel = selector();\r\n        if (!sel) {\r\n            return error('selector missing');\r\n        }\r\n        comments();\r\n        return pos({\r\n            type: 'rule',\r\n            selectors: sel,\r\n            declarations: declarations(),\r\n        });\r\n    }\r\n    return addParent(stylesheet());\r\n}\r\nfunction trim(str) {\r\n    return str ? str.replace(/^\\s+|\\s+$/g, '') : '';\r\n}\r\nfunction addParent(obj, parent) {\r\n    const isNode = obj && typeof obj.type === 'string';\r\n    const childParent = isNode ? obj : parent;\r\n    for (const k of Object.keys(obj)) {\r\n        const value = obj[k];\r\n        if (Array.isArray(value)) {\r\n            value.forEach((v) => {\r\n                addParent(v, childParent);\r\n            });\r\n        }\r\n        else if (value && typeof value === 'object') {\r\n            addParent(value, childParent);\r\n        }\r\n    }\r\n    if (isNode) {\r\n        Object.defineProperty(obj, 'parent', {\r\n            configurable: true,\r\n            writable: true,\r\n            enumerable: false,\r\n            value: parent || null,\r\n        });\r\n    }\r\n    return obj;\r\n}\n\nconst tagMap = {\r\n    script: 'noscript',\r\n    altglyph: 'altGlyph',\r\n    altglyphdef: 'altGlyphDef',\r\n    altglyphitem: 'altGlyphItem',\r\n    animatecolor: 'animateColor',\r\n    animatemotion: 'animateMotion',\r\n    animatetransform: 'animateTransform',\r\n    clippath: 'clipPath',\r\n    feblend: 'feBlend',\r\n    fecolormatrix: 'feColorMatrix',\r\n    fecomponenttransfer: 'feComponentTransfer',\r\n    fecomposite: 'feComposite',\r\n    feconvolvematrix: 'feConvolveMatrix',\r\n    fediffuselighting: 'feDiffuseLighting',\r\n    fedisplacementmap: 'feDisplacementMap',\r\n    fedistantlight: 'feDistantLight',\r\n    fedropshadow: 'feDropShadow',\r\n    feflood: 'feFlood',\r\n    fefunca: 'feFuncA',\r\n    fefuncb: 'feFuncB',\r\n    fefuncg: 'feFuncG',\r\n    fefuncr: 'feFuncR',\r\n    fegaussianblur: 'feGaussianBlur',\r\n    feimage: 'feImage',\r\n    femerge: 'feMerge',\r\n    femergenode: 'feMergeNode',\r\n    femorphology: 'feMorphology',\r\n    feoffset: 'feOffset',\r\n    fepointlight: 'fePointLight',\r\n    fespecularlighting: 'feSpecularLighting',\r\n    fespotlight: 'feSpotLight',\r\n    fetile: 'feTile',\r\n    feturbulence: 'feTurbulence',\r\n    foreignobject: 'foreignObject',\r\n    glyphref: 'glyphRef',\r\n    lineargradient: 'linearGradient',\r\n    radialgradient: 'radialGradient',\r\n};\r\nfunction getTagName(n) {\r\n    let tagName = tagMap[n.tagName] ? tagMap[n.tagName] : n.tagName;\r\n    if (tagName === 'link' && n.attributes._cssText) {\r\n        tagName = 'style';\r\n    }\r\n    return tagName;\r\n}\r\nfunction escapeRegExp(str) {\r\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\r\n}\r\nconst HOVER_SELECTOR = /([^\\\\]):hover/;\r\nconst HOVER_SELECTOR_GLOBAL = new RegExp(HOVER_SELECTOR.source, 'g');\r\nfunction addHoverClass(cssText, cache) {\r\n    const cachedStyle = cache?.stylesWithHoverClass.get(cssText);\r\n    if (cachedStyle)\r\n        return cachedStyle;\r\n    if (cssText.length >= 1000000) {\r\n        return cssText;\r\n    }\r\n    const ast = parse(cssText, {\r\n        silent: true,\r\n    });\r\n    if (!ast.stylesheet) {\r\n        return cssText;\r\n    }\r\n    const selectors = [];\r\n    ast.stylesheet.rules.forEach((rule) => {\r\n        if ('selectors' in rule) {\r\n            (rule.selectors || []).forEach((selector) => {\r\n                if (HOVER_SELECTOR.test(selector)) {\r\n                    selectors.push(selector);\r\n                }\r\n            });\r\n        }\r\n    });\r\n    if (selectors.length === 0) {\r\n        return cssText;\r\n    }\r\n    const selectorMatcher = new RegExp(selectors\r\n        .filter((selector, index) => selectors.indexOf(selector) === index)\r\n        .sort((a, b) => b.length - a.length)\r\n        .map((selector) => {\r\n        return escapeRegExp(selector);\r\n    })\r\n        .join('|'), 'g');\r\n    const result = cssText.replace(selectorMatcher, (selector) => {\r\n        const newSelector = selector.replace(HOVER_SELECTOR_GLOBAL, '$1.\\\\:hover');\r\n        return `${selector}, ${newSelector}`;\r\n    });\r\n    cache?.stylesWithHoverClass.set(cssText, result);\r\n    return result;\r\n}\r\nfunction createCache() {\r\n    const stylesWithHoverClass = new Map();\r\n    return {\r\n        stylesWithHoverClass,\r\n    };\r\n}\r\nfunction buildNode(n, options) {\r\n    const { doc, hackCss, cache } = options;\r\n    switch (n.type) {\r\n        case NodeType.Document:\r\n            return doc.implementation.createDocument(null, '', null);\r\n        case NodeType.DocumentType:\r\n            return doc.implementation.createDocumentType(n.name || 'html', n.publicId, n.systemId);\r\n        case NodeType.Element: {\r\n            const tagName = getTagName(n);\r\n            let node;\r\n            if (n.isSVG) {\r\n                node = doc.createElementNS('http://www.w3.org/2000/svg', tagName);\r\n            }\r\n            else {\r\n                if (n.isCustom &&\r\n                    doc.defaultView?.customElements &&\r\n                    !doc.defaultView.customElements.get(n.tagName))\r\n                    doc.defaultView.customElements.define(n.tagName, class extends doc.defaultView.HTMLElement {\r\n                    });\r\n                node = doc.createElement(tagName);\r\n            }\r\n            const specialAttributes = {};\r\n            for (const name in n.attributes) {\r\n                if (!Object.prototype.hasOwnProperty.call(n.attributes, name)) {\r\n                    continue;\r\n                }\r\n                let value = n.attributes[name];\r\n                if (tagName === 'option' &&\r\n                    name === 'selected' &&\r\n                    value === false) {\r\n                    continue;\r\n                }\r\n                if (value === null) {\r\n                    continue;\r\n                }\r\n                if (value === true)\r\n                    value = '';\r\n                if (name.startsWith('rr_')) {\r\n                    specialAttributes[name] = value;\r\n                    continue;\r\n                }\r\n                const isTextarea = tagName === 'textarea' && name === 'value';\r\n                const isRemoteOrDynamicCss = tagName === 'style' && name === '_cssText';\r\n                if (isRemoteOrDynamicCss && hackCss && typeof value === 'string') {\r\n                    value = addHoverClass(value, cache);\r\n                }\r\n                if ((isTextarea || isRemoteOrDynamicCss) && typeof value === 'string') {\r\n                    const child = doc.createTextNode(value);\r\n                    for (const c of Array.from(node.childNodes)) {\r\n                        if (c.nodeType === node.TEXT_NODE) {\r\n                            node.removeChild(c);\r\n                        }\r\n                    }\r\n                    node.appendChild(child);\r\n                    continue;\r\n                }\r\n                try {\r\n                    if (n.isSVG && name === 'xlink:href') {\r\n                        node.setAttributeNS('http://www.w3.org/1999/xlink', name, value.toString());\r\n                    }\r\n                    else if (name === 'onload' ||\r\n                        name === 'onclick' ||\r\n                        name.substring(0, 7) === 'onmouse') {\r\n                        node.setAttribute('_' + name, value.toString());\r\n                    }\r\n                    else if (tagName === 'meta' &&\r\n                        n.attributes['http-equiv'] === 'Content-Security-Policy' &&\r\n                        name === 'content') {\r\n                        node.setAttribute('csp-content', value.toString());\r\n                        continue;\r\n                    }\r\n                    else if (tagName === 'link' &&\r\n                        (n.attributes.rel === 'preload' ||\r\n                            n.attributes.rel === 'modulepreload') &&\r\n                        n.attributes.as === 'script') {\r\n                    }\r\n                    else if (tagName === 'link' &&\r\n                        n.attributes.rel === 'prefetch' &&\r\n                        typeof n.attributes.href === 'string' &&\r\n                        n.attributes.href.endsWith('.js')) {\r\n                    }\r\n                    else if (tagName === 'img' &&\r\n                        n.attributes.srcset &&\r\n                        n.attributes.rr_dataURL) {\r\n                        node.setAttribute('rrweb-original-srcset', n.attributes.srcset);\r\n                    }\r\n                    else {\r\n                        node.setAttribute(name, value.toString());\r\n                    }\r\n                }\r\n                catch (error) {\r\n                }\r\n            }\r\n            for (const name in specialAttributes) {\r\n                const value = specialAttributes[name];\r\n                if (tagName === 'canvas' && name === 'rr_dataURL') {\r\n                    const image = document.createElement('img');\r\n                    image.onload = () => {\r\n                        const ctx = node.getContext('2d');\r\n                        if (ctx) {\r\n                            ctx.drawImage(image, 0, 0, image.width, image.height);\r\n                        }\r\n                    };\r\n                    image.src = value.toString();\r\n                    if (node.RRNodeType)\r\n                        node.rr_dataURL = value.toString();\r\n                }\r\n                else if (tagName === 'img' && name === 'rr_dataURL') {\r\n                    const image = node;\r\n                    if (!image.currentSrc.startsWith('data:')) {\r\n                        image.setAttribute('rrweb-original-src', n.attributes.src);\r\n                        image.src = value.toString();\r\n                    }\r\n                }\r\n                if (name === 'rr_width') {\r\n                    node.style.setProperty('width', value.toString());\r\n                }\r\n                else if (name === 'rr_height') {\r\n                    node.style.setProperty('height', value.toString());\r\n                }\r\n                else if (name === 'rr_mediaCurrentTime' &&\r\n                    typeof value === 'number') {\r\n                    node.currentTime = value;\r\n                }\r\n                else if (name === 'rr_mediaState') {\r\n                    switch (value) {\r\n                        case 'played':\r\n                            node\r\n                                .play()\r\n                                .catch((e) => console.warn('media playback error', e));\r\n                            break;\r\n                        case 'paused':\r\n                            node.pause();\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            if (n.isShadowHost) {\r\n                if (!node.shadowRoot) {\r\n                    node.attachShadow({ mode: 'open' });\r\n                }\r\n                else {\r\n                    while (node.shadowRoot.firstChild) {\r\n                        node.shadowRoot.removeChild(node.shadowRoot.firstChild);\r\n                    }\r\n                }\r\n            }\r\n            return node;\r\n        }\r\n        case NodeType.Text:\r\n            return doc.createTextNode(n.isStyle && hackCss\r\n                ? addHoverClass(n.textContent, cache)\r\n                : n.textContent);\r\n        case NodeType.CDATA:\r\n            return doc.createCDATASection(n.textContent);\r\n        case NodeType.Comment:\r\n            return doc.createComment(n.textContent);\r\n        default:\r\n            return null;\r\n    }\r\n}\r\nfunction buildNodeWithSN(n, options) {\r\n    const { doc, mirror, skipChild = false, hackCss = true, afterAppend, cache, } = options;\r\n    if (mirror.has(n.id)) {\r\n        const nodeInMirror = mirror.getNode(n.id);\r\n        const meta = mirror.getMeta(nodeInMirror);\r\n        if (isNodeMetaEqual(meta, n))\r\n            return mirror.getNode(n.id);\r\n    }\r\n    let node = buildNode(n, { doc, hackCss, cache });\r\n    if (!node) {\r\n        return null;\r\n    }\r\n    if (n.rootId && mirror.getNode(n.rootId) !== doc) {\r\n        mirror.replace(n.rootId, doc);\r\n    }\r\n    if (n.type === NodeType.Document) {\r\n        doc.close();\r\n        doc.open();\r\n        if (n.compatMode === 'BackCompat' &&\r\n            n.childNodes &&\r\n            n.childNodes[0].type !== NodeType.DocumentType) {\r\n            if (n.childNodes[0].type === NodeType.Element &&\r\n                'xmlns' in n.childNodes[0].attributes &&\r\n                n.childNodes[0].attributes.xmlns === 'http://www.w3.org/1999/xhtml') {\r\n                doc.write('<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"\">');\r\n            }\r\n            else {\r\n                doc.write('<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"\">');\r\n            }\r\n        }\r\n        node = doc;\r\n    }\r\n    mirror.add(node, n);\r\n    if ((n.type === NodeType.Document || n.type === NodeType.Element) &&\r\n        !skipChild) {\r\n        for (const childN of n.childNodes) {\r\n            const childNode = buildNodeWithSN(childN, {\r\n                doc,\r\n                mirror,\r\n                skipChild: false,\r\n                hackCss,\r\n                afterAppend,\r\n                cache,\r\n            });\r\n            if (!childNode) {\r\n                console.warn('Failed to rebuild', childN);\r\n                continue;\r\n            }\r\n            if (childN.isShadow && isElement(node) && node.shadowRoot) {\r\n                node.shadowRoot.appendChild(childNode);\r\n            }\r\n            else if (n.type === NodeType.Document &&\r\n                childN.type == NodeType.Element) {\r\n                const htmlElement = childNode;\r\n                let body = null;\r\n                htmlElement.childNodes.forEach((child) => {\r\n                    if (child.nodeName === 'BODY')\r\n                        body = child;\r\n                });\r\n                if (body) {\r\n                    htmlElement.removeChild(body);\r\n                    node.appendChild(childNode);\r\n                    htmlElement.appendChild(body);\r\n                }\r\n                else {\r\n                    node.appendChild(childNode);\r\n                }\r\n            }\r\n            else {\r\n                node.appendChild(childNode);\r\n            }\r\n            if (afterAppend) {\r\n                afterAppend(childNode, childN.id);\r\n            }\r\n        }\r\n    }\r\n    return node;\r\n}\r\nfunction visit(mirror, onVisit) {\r\n    function walk(node) {\r\n        onVisit(node);\r\n    }\r\n    for (const id of mirror.getIds()) {\r\n        if (mirror.has(id)) {\r\n            walk(mirror.getNode(id));\r\n        }\r\n    }\r\n}\r\nfunction handleScroll(node, mirror) {\r\n    const n = mirror.getMeta(node);\r\n    if (n?.type !== NodeType.Element) {\r\n        return;\r\n    }\r\n    const el = node;\r\n    for (const name in n.attributes) {\r\n        if (!(Object.prototype.hasOwnProperty.call(n.attributes, name) &&\r\n            name.startsWith('rr_'))) {\r\n            continue;\r\n        }\r\n        const value = n.attributes[name];\r\n        if (name === 'rr_scrollLeft') {\r\n            el.scrollLeft = value;\r\n        }\r\n        if (name === 'rr_scrollTop') {\r\n            el.scrollTop = value;\r\n        }\r\n    }\r\n}\r\nfunction rebuild(n, options) {\r\n    const { doc, onVisit, hackCss = true, afterAppend, cache, mirror = new Mirror(), } = options;\r\n    const node = buildNodeWithSN(n, {\r\n        doc,\r\n        mirror,\r\n        skipChild: false,\r\n        hackCss,\r\n        afterAppend,\r\n        cache,\r\n    });\r\n    visit(mirror, (visitedNode) => {\r\n        if (onVisit) {\r\n            onVisit(visitedNode);\r\n        }\r\n        handleScroll(visitedNode, mirror);\r\n    });\r\n    return node;\r\n}\n\nexport { IGNORED_NODE, Mirror, NodeType, addHoverClass, buildNodeWithSN, classMatchesRegex, cleanupSnapshot, createCache, createMatchPredicate, createMirror, distanceToMatch, escapeImportStatement, fixSafariColons, genId, getInputType, getInputValue, ignoreAttribute, is2DCanvasBlank, isCSSImportRule, isCSSStyleRule, isElement, isNativeShadowDom, isNodeMetaEqual, isShadowRoot, maskInputValue, needMaskingText, rebuild, serializeNodeWithId, shouldMaskInput, snapshot, stringifyRule, stringifyStylesheet, toLowerCase, toUpperCase, transformAttribute, visitSnapshot };\n", "// Note that these are the serialized attributes and not attributes directly on\n// the DOM Node. Attributes we are interested in:\nconst ATTRIBUTES_TO_RECORD = new Set([\n  'id',\n  'class',\n  'aria-label',\n  'role',\n  'name',\n  'alt',\n  'title',\n  'data-test-id',\n  'data-testid',\n  'disabled',\n  'aria-disabled',\n  'data-sentry-component',\n]);\n\n/**\n * Inclusion list of attributes that we want to record from the DOM element\n */\nexport function getAttributesToRecord(attributes: Record<string, unknown>): Record<string, unknown> {\n  const obj: Record<string, unknown> = {};\n  for (const key in attributes) {\n    if (ATTRIBUTES_TO_RECORD.has(key)) {\n      let normalizedKey = key;\n\n      if (key === 'data-testid' || key === 'data-test-id') {\n        normalizedKey = 'testId';\n      }\n\n      obj[normalizedKey] = attributes[key];\n    }\n  }\n\n  return obj;\n}\n", "import { record } from '@sentry-internal/rrweb';\nimport type { serializedElementNodeWithId, serializedNodeWithId } from '@sentry-internal/rrweb-snapshot';\nimport { NodeType } from '@sentry-internal/rrweb-snapshot';\nimport type { Breadcrumb, HandlerDataDom } from '@sentry/types';\nimport { htmlTreeAsString } from '@sentry/utils';\n\nimport type { ReplayContainer } from '../types';\nimport { createBreadcrumb } from '../util/createBreadcrumb';\nimport { handleClick } from './handleClick';\nimport { addBreadcrumbEvent } from './util/addBreadcrumbEvent';\nimport { getClickTargetNode, getTargetNode } from './util/domUtils';\nimport { getAttributesToRecord } from './util/getAttributesToRecord';\n\nexport const handleDomListener: (replay: ReplayContainer) => (handlerData: HandlerDataDom) => void = (\n  replay: ReplayContainer,\n) => {\n  return (handlerData: HandlerDataDom): void => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleDom(handlerData);\n\n    if (!result) {\n      return;\n    }\n\n    const isClick = handlerData.name === 'click';\n    const event = isClick ? (handlerData.event as PointerEvent) : undefined;\n    // Ignore clicks if ctrl/alt/meta/shift keys are held down as they alter behavior of clicks (e.g. open in new tab)\n    if (\n      isClick &&\n      replay.clickDetector &&\n      event &&\n      event.target &&\n      !event.altKey &&\n      !event.metaKey &&\n      !event.ctrlKey &&\n      !event.shiftKey\n    ) {\n      handleClick(\n        replay.clickDetector,\n        result as Breadcrumb & { timestamp: number; data: { nodeId: number } },\n        getClickTargetNode(handlerData.event as Event) as HTMLElement,\n      );\n    }\n\n    addBreadcrumbEvent(replay, result);\n  };\n};\n\n/** Get the base DOM breadcrumb. */\nexport function getBaseDomBreadcrumb(target: Node | null, message: string): Breadcrumb {\n  const nodeId = record.mirror.getId(target);\n  const node = nodeId && record.mirror.getNode(nodeId);\n  const meta = node && record.mirror.getMeta(node);\n  const element = meta && isElement(meta) ? meta : null;\n\n  return {\n    message,\n    data: element\n      ? {\n          nodeId,\n          node: {\n            id: nodeId,\n            tagName: element.tagName,\n            textContent: Array.from(element.childNodes)\n              .map((node: serializedNodeWithId) => node.type === NodeType.Text && node.textContent)\n              .filter(Boolean) // filter out empty values\n              .map(text => (text as string).trim())\n              .join(''),\n            attributes: getAttributesToRecord(element.attributes),\n          },\n        }\n      : {},\n  };\n}\n\n/**\n * An event handler to react to DOM events.\n * Exported for tests.\n */\nexport function handleDom(handlerData: HandlerDataDom): Breadcrumb | null {\n  const { target, message } = getDomTarget(handlerData);\n\n  return createBreadcrumb({\n    category: `ui.${handlerData.name}`,\n    ...getBaseDomBreadcrumb(target, message),\n  });\n}\n\nfunction getDomTarget(handlerData: HandlerDataDom): { target: Node | null; message: string } {\n  const isClick = handlerData.name === 'click';\n\n  let message: string | undefined;\n  let target: Node | null = null;\n\n  // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n  try {\n    target = isClick ? getClickTargetNode(handlerData.event as Event) : getTargetNode(handlerData.event as Event);\n    message = htmlTreeAsString(target, { maxStringLength: 200 }) || '<unknown>';\n  } catch (e) {\n    message = '<unknown>';\n  }\n\n  return { target, message };\n}\n\nfunction isElement(node: serializedNodeWithId): node is serializedElementNodeWithId {\n  return node.type === NodeType.Element;\n}\n", "import type { Breadcrumb } from '@sentry/types';\nimport { htmlTreeAsString } from '@sentry/utils';\n\nimport type { ReplayContainer } from '../types';\nimport { createBreadcrumb } from '../util/createBreadcrumb';\nimport { getBaseDomBreadcrumb } from './handleDom';\nimport { addBreadcrumbEvent } from './util/addBreadcrumbEvent';\n\n/** Handle keyboard events & create breadcrumbs. */\nexport function handleKeyboardEvent(replay: ReplayContainer, event: KeyboardEvent): void {\n  if (!replay.isEnabled()) {\n    return;\n  }\n\n  // Update user activity, but do not restart recording as it can create\n  // noisy/low-value replays (e.g. user comes back from idle, hits alt-tab, new\n  // session with a single \"keydown\" breadcrumb is created)\n  replay.updateUserActivity();\n\n  const breadcrumb = getKeyboardBreadcrumb(event);\n\n  if (!breadcrumb) {\n    return;\n  }\n\n  addBreadcrumbEvent(replay, breadcrumb);\n}\n\n/** exported only for tests */\nexport function getKeyboardBreadcrumb(event: KeyboardEvent): Breadcrumb | null {\n  const { metaKey, shiftKey, ctrlKey, altKey, key, target } = event;\n\n  // never capture for input fields\n  if (!target || isInputElement(target as HTMLElement) || !key) {\n    return null;\n  }\n\n  // Note: We do not consider shift here, as that means \"uppercase\"\n  const hasModifierKey = metaKey || ctrlKey || altKey;\n  const isCharacterKey = key.length === 1; // other keys like Escape, Tab, etc have a longer length\n\n  // Do not capture breadcrumb if only a word key is pressed\n  // This could leak e.g. user input\n  if (!hasModifierKey && isCharacterKey) {\n    return null;\n  }\n\n  const message = htmlTreeAsString(target, { maxStringLength: 200 }) || '<unknown>';\n  const baseBreadcrumb = getBaseDomBreadcrumb(target as Node, message);\n\n  return createBreadcrumb({\n    category: 'ui.keyDown',\n    message,\n    data: {\n      ...baseBreadcrumb.data,\n      metaKey,\n      shiftKey,\n      ctrlKey,\n      altKey,\n      key,\n    },\n  });\n}\n\nfunction isInputElement(target: HTMLElement): boolean {\n  return target.tagName === 'INPUT' || target.tagName === 'TEXTAREA' || target.isContentEditable;\n}\n", "import { record } from '@sentry-internal/rrweb';\nimport { browserPerformanceTimeOrigin } from '@sentry/utils';\n\nimport { WINDOW } from '../constants';\nimport type {\n  AllPerformanceEntry,\n  AllPerformanceEntryData,\n  ExperimentalPerformanceResourceTiming,\n  LargestContentfulPaintData,\n  NavigationData,\n  PaintData,\n  ReplayPerformanceEntry,\n  ResourceData,\n} from '../types';\n\n// Map entryType -> function to normalize data for event\nconst ENTRY_TYPES: Record<\n  string,\n  (entry: AllPerformanceEntry) => null | ReplayPerformanceEntry<AllPerformanceEntryData>\n> = {\n  // @ts-expect-error TODO: entry type does not fit the create* functions entry type\n  resource: createResourceEntry,\n  paint: createPaintEntry,\n  // @ts-expect-error TODO: entry type does not fit the create* functions entry type\n  navigation: createNavigationEntry,\n};\n\n/**\n * Create replay performance entries from the browser performance entries.\n */\nexport function createPerformanceEntries(\n  entries: AllPerformanceEntry[],\n): ReplayPerformanceEntry<AllPerformanceEntryData>[] {\n  return entries.map(createPerformanceEntry).filter(Boolean) as ReplayPerformanceEntry<AllPerformanceEntryData>[];\n}\n\nfunction createPerformanceEntry(entry: AllPerformanceEntry): ReplayPerformanceEntry<AllPerformanceEntryData> | null {\n  if (!ENTRY_TYPES[entry.entryType]) {\n    return null;\n  }\n\n  return ENTRY_TYPES[entry.entryType](entry);\n}\n\nfunction getAbsoluteTime(time: number): number {\n  // browserPerformanceTimeOrigin can be undefined if `performance` or\n  // `performance.now` doesn't exist, but this is already checked by this integration\n  return ((browserPerformanceTimeOrigin || WINDOW.performance.timeOrigin) + time) / 1000;\n}\n\nfunction createPaintEntry(entry: PerformancePaintTiming): ReplayPerformanceEntry<PaintData> {\n  const { duration, entryType, name, startTime } = entry;\n\n  const start = getAbsoluteTime(startTime);\n  return {\n    type: entryType,\n    name,\n    start,\n    end: start + duration,\n    data: undefined,\n  };\n}\n\nfunction createNavigationEntry(entry: PerformanceNavigationTiming): ReplayPerformanceEntry<NavigationData> | null {\n  const {\n    entryType,\n    name,\n    decodedBodySize,\n    duration,\n    domComplete,\n    encodedBodySize,\n    domContentLoadedEventStart,\n    domContentLoadedEventEnd,\n    domInteractive,\n    loadEventStart,\n    loadEventEnd,\n    redirectCount,\n    startTime,\n    transferSize,\n    type,\n  } = entry;\n\n  // Ignore entries with no duration, they do not seem to be useful and cause dupes\n  if (duration === 0) {\n    return null;\n  }\n\n  return {\n    type: `${entryType}.${type}`,\n    start: getAbsoluteTime(startTime),\n    end: getAbsoluteTime(domComplete),\n    name,\n    data: {\n      size: transferSize,\n      decodedBodySize,\n      encodedBodySize,\n      duration,\n      domInteractive,\n      domContentLoadedEventStart,\n      domContentLoadedEventEnd,\n      loadEventStart,\n      loadEventEnd,\n      domComplete,\n      redirectCount,\n    },\n  };\n}\n\nfunction createResourceEntry(\n  entry: ExperimentalPerformanceResourceTiming,\n): ReplayPerformanceEntry<ResourceData> | null {\n  const {\n    entryType,\n    initiatorType,\n    name,\n    responseEnd,\n    startTime,\n    decodedBodySize,\n    encodedBodySize,\n    responseStatus,\n    transferSize,\n  } = entry;\n\n  // Core SDK handles these\n  if (['fetch', 'xmlhttprequest'].includes(initiatorType)) {\n    return null;\n  }\n\n  return {\n    type: `${entryType}.${initiatorType}`,\n    start: getAbsoluteTime(startTime),\n    end: getAbsoluteTime(responseEnd),\n    name,\n    data: {\n      size: transferSize,\n      statusCode: responseStatus,\n      decodedBodySize,\n      encodedBodySize,\n    },\n  };\n}\n\n/**\n * Add a LCP event to the replay based on an LCP metric.\n */\nexport function getLargestContentfulPaint(metric: {\n  value: number;\n  entries: PerformanceEntry[];\n}): ReplayPerformanceEntry<LargestContentfulPaintData> {\n  const entries = metric.entries;\n  const lastEntry = entries[entries.length - 1] as (PerformanceEntry & { element?: Element }) | undefined;\n  const element = lastEntry ? lastEntry.element : undefined;\n\n  const value = metric.value;\n\n  const end = getAbsoluteTime(value);\n\n  const data: ReplayPerformanceEntry<LargestContentfulPaintData> = {\n    type: 'largest-contentful-paint',\n    name: 'largest-contentful-paint',\n    start: end,\n    end,\n    data: {\n      value,\n      size: value,\n      nodeId: element ? record.mirror.getId(element) : undefined,\n    },\n  };\n\n  return data;\n}\n", "import { addLcpInstrumentationHandler, addPerformanceInstrumentationHandler } from '@sentry-internal/tracing';\n\nimport type { ReplayContainer } from '../types';\nimport { getLargestContentfulPaint } from '../util/createPerformanceEntries';\n\n/**\n * Sets up a PerformanceObserver to listen to all performance entry types.\n * Returns a callback to stop observing.\n */\nexport function setupPerformanceObserver(replay: ReplayContainer): () => void {\n  function addPerformanceEntry(entry: PerformanceEntry): void {\n    // It is possible for entries to come up multiple times\n    if (!replay.performanceEntries.includes(entry)) {\n      replay.performanceEntries.push(entry);\n    }\n  }\n\n  function onEntries({ entries }: { entries: PerformanceEntry[] }): void {\n    entries.forEach(addPerformanceEntry);\n  }\n\n  const clearCallbacks: (() => void)[] = [];\n\n  (['navigation', 'paint', 'resource'] as const).forEach(type => {\n    clearCallbacks.push(addPerformanceInstrumentationHandler(type, onEntries));\n  });\n\n  clearCallbacks.push(\n    addLcpInstrumentationHandler(({ metric }) => {\n      replay.replayPerformanceEntries.push(getLargestContentfulPaint(metric));\n    }),\n  );\n\n  // A callback to cleanup all handlers\n  return () => {\n    clearCallbacks.forEach(clearCallback => clearCallback());\n  };\n}\n", "declare const __DEBUG_BUILD__: boolean;\n\n/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nexport const DEBUG_BUILD = __DEBUG_BUILD__;\n", "export default `var t=Uint8Array,n=Uint16Array,r=Int32Array,e=new t([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),i=new t([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),a=new t([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),s=function(t,e){for(var i=new n(31),a=0;a<31;++a)i[a]=e+=1<<t[a-1];var s=new r(i[30]);for(a=1;a<30;++a)for(var o=i[a];o<i[a+1];++o)s[o]=o-i[a]<<5|a;return{b:i,r:s}},o=s(e,2),f=o.b,h=o.r;f[28]=258,h[258]=28;for(var l=s(i,0).r,u=new n(32768),c=0;c<32768;++c){var v=(43690&c)>>1|(21845&c)<<1;v=(61680&(v=(52428&v)>>2|(13107&v)<<2))>>4|(3855&v)<<4,u[c]=((65280&v)>>8|(255&v)<<8)>>1}var d=function(t,r,e){for(var i=t.length,a=0,s=new n(r);a<i;++a)t[a]&&++s[t[a]-1];var o,f=new n(r);for(a=1;a<r;++a)f[a]=f[a-1]+s[a-1]<<1;if(e){o=new n(1<<r);var h=15-r;for(a=0;a<i;++a)if(t[a])for(var l=a<<4|t[a],c=r-t[a],v=f[t[a]-1]++<<c,d=v|(1<<c)-1;v<=d;++v)o[u[v]>>h]=l}else for(o=new n(i),a=0;a<i;++a)t[a]&&(o[a]=u[f[t[a]-1]++]>>15-t[a]);return o},g=new t(288);for(c=0;c<144;++c)g[c]=8;for(c=144;c<256;++c)g[c]=9;for(c=256;c<280;++c)g[c]=7;for(c=280;c<288;++c)g[c]=8;var w=new t(32);for(c=0;c<32;++c)w[c]=5;var p=d(g,9,0),y=d(w,5,0),m=function(t){return(t+7)/8|0},b=function(n,r,e){return(null==r||r<0)&&(r=0),(null==e||e>n.length)&&(e=n.length),new t(n.subarray(r,e))},M=[\"unexpected EOF\",\"invalid block type\",\"invalid length/literal\",\"invalid distance\",\"stream finished\",\"no stream handler\",,\"no callback\",\"invalid UTF-8 data\",\"extra field too long\",\"date not in range 1980-2099\",\"filename too long\",\"stream finishing\",\"invalid zip data\"],E=function(t,n,r){var e=new Error(n||M[t]);if(e.code=t,Error.captureStackTrace&&Error.captureStackTrace(e,E),!r)throw e;return e},z=function(t,n,r){r<<=7&n;var e=n/8|0;t[e]|=r,t[e+1]|=r>>8},A=function(t,n,r){r<<=7&n;var e=n/8|0;t[e]|=r,t[e+1]|=r>>8,t[e+2]|=r>>16},_=function(r,e){for(var i=[],a=0;a<r.length;++a)r[a]&&i.push({s:a,f:r[a]});var s=i.length,o=i.slice();if(!s)return{t:F,l:0};if(1==s){var f=new t(i[0].s+1);return f[i[0].s]=1,{t:f,l:1}}i.sort((function(t,n){return t.f-n.f})),i.push({s:-1,f:25001});var h=i[0],l=i[1],u=0,c=1,v=2;for(i[0]={s:-1,f:h.f+l.f,l:h,r:l};c!=s-1;)h=i[i[u].f<i[v].f?u++:v++],l=i[u!=c&&i[u].f<i[v].f?u++:v++],i[c++]={s:-1,f:h.f+l.f,l:h,r:l};var d=o[0].s;for(a=1;a<s;++a)o[a].s>d&&(d=o[a].s);var g=new n(d+1),w=x(i[c-1],g,0);if(w>e){a=0;var p=0,y=w-e,m=1<<y;for(o.sort((function(t,n){return g[n.s]-g[t.s]||t.f-n.f}));a<s;++a){var b=o[a].s;if(!(g[b]>e))break;p+=m-(1<<w-g[b]),g[b]=e}for(p>>=y;p>0;){var M=o[a].s;g[M]<e?p-=1<<e-g[M]++-1:++a}for(;a>=0&&p;--a){var E=o[a].s;g[E]==e&&(--g[E],++p)}w=e}return{t:new t(g),l:w}},x=function(t,n,r){return-1==t.s?Math.max(x(t.l,n,r+1),x(t.r,n,r+1)):n[t.s]=r},D=function(t){for(var r=t.length;r&&!t[--r];);for(var e=new n(++r),i=0,a=t[0],s=1,o=function(t){e[i++]=t},f=1;f<=r;++f)if(t[f]==a&&f!=r)++s;else{if(!a&&s>2){for(;s>138;s-=138)o(32754);s>2&&(o(s>10?s-11<<5|28690:s-3<<5|12305),s=0)}else if(s>3){for(o(a),--s;s>6;s-=6)o(8304);s>2&&(o(s-3<<5|8208),s=0)}for(;s--;)o(a);s=1,a=t[f]}return{c:e.subarray(0,i),n:r}},T=function(t,n){for(var r=0,e=0;e<n.length;++e)r+=t[e]*n[e];return r},k=function(t,n,r){var e=r.length,i=m(n+2);t[i]=255&e,t[i+1]=e>>8,t[i+2]=255^t[i],t[i+3]=255^t[i+1];for(var a=0;a<e;++a)t[i+a+4]=r[a];return 8*(i+4+e)},C=function(t,r,s,o,f,h,l,u,c,v,m){z(r,m++,s),++f[256];for(var b=_(f,15),M=b.t,E=b.l,x=_(h,15),C=x.t,U=x.l,F=D(M),I=F.c,S=F.n,L=D(C),O=L.c,j=L.n,q=new n(19),B=0;B<I.length;++B)++q[31&I[B]];for(B=0;B<O.length;++B)++q[31&O[B]];for(var G=_(q,7),H=G.t,J=G.l,K=19;K>4&&!H[a[K-1]];--K);var N,P,Q,R,V=v+5<<3,W=T(f,g)+T(h,w)+l,X=T(f,M)+T(h,C)+l+14+3*K+T(q,H)+2*q[16]+3*q[17]+7*q[18];if(c>=0&&V<=W&&V<=X)return k(r,m,t.subarray(c,c+v));if(z(r,m,1+(X<W)),m+=2,X<W){N=d(M,E,0),P=M,Q=d(C,U,0),R=C;var Y=d(H,J,0);z(r,m,S-257),z(r,m+5,j-1),z(r,m+10,K-4),m+=14;for(B=0;B<K;++B)z(r,m+3*B,H[a[B]]);m+=3*K;for(var Z=[I,O],$=0;$<2;++$){var tt=Z[$];for(B=0;B<tt.length;++B){var nt=31&tt[B];z(r,m,Y[nt]),m+=H[nt],nt>15&&(z(r,m,tt[B]>>5&127),m+=tt[B]>>12)}}}else N=p,P=g,Q=y,R=w;for(B=0;B<u;++B){var rt=o[B];if(rt>255){A(r,m,N[(nt=rt>>18&31)+257]),m+=P[nt+257],nt>7&&(z(r,m,rt>>23&31),m+=e[nt]);var et=31&rt;A(r,m,Q[et]),m+=R[et],et>3&&(A(r,m,rt>>5&8191),m+=i[et])}else A(r,m,N[rt]),m+=P[rt]}return A(r,m,N[256]),m+P[256]},U=new r([65540,131080,131088,131104,262176,1048704,1048832,2114560,2117632]),F=new t(0),I=function(){for(var t=new Int32Array(256),n=0;n<256;++n){for(var r=n,e=9;--e;)r=(1&r&&-306674912)^r>>>1;t[n]=r}return t}(),S=function(){var t=1,n=0;return{p:function(r){for(var e=t,i=n,a=0|r.length,s=0;s!=a;){for(var o=Math.min(s+2655,a);s<o;++s)i+=e+=r[s];e=(65535&e)+15*(e>>16),i=(65535&i)+15*(i>>16)}t=e,n=i},d:function(){return(255&(t%=65521))<<24|(65280&t)<<8|(255&(n%=65521))<<8|n>>8}}},L=function(a,s,o,f,u){if(!u&&(u={l:1},s.dictionary)){var c=s.dictionary.subarray(-32768),v=new t(c.length+a.length);v.set(c),v.set(a,c.length),a=v,u.w=c.length}return function(a,s,o,f,u,c){var v=c.z||a.length,d=new t(f+v+5*(1+Math.ceil(v/7e3))+u),g=d.subarray(f,d.length-u),w=c.l,p=7&(c.r||0);if(s){p&&(g[0]=c.r>>3);for(var y=U[s-1],M=y>>13,E=8191&y,z=(1<<o)-1,A=c.p||new n(32768),_=c.h||new n(z+1),x=Math.ceil(o/3),D=2*x,T=function(t){return(a[t]^a[t+1]<<x^a[t+2]<<D)&z},F=new r(25e3),I=new n(288),S=new n(32),L=0,O=0,j=c.i||0,q=0,B=c.w||0,G=0;j+2<v;++j){var H=T(j),J=32767&j,K=_[H];if(A[J]=K,_[H]=J,B<=j){var N=v-j;if((L>7e3||q>24576)&&(N>423||!w)){p=C(a,g,0,F,I,S,O,q,G,j-G,p),q=L=O=0,G=j;for(var P=0;P<286;++P)I[P]=0;for(P=0;P<30;++P)S[P]=0}var Q=2,R=0,V=E,W=J-K&32767;if(N>2&&H==T(j-W))for(var X=Math.min(M,N)-1,Y=Math.min(32767,j),Z=Math.min(258,N);W<=Y&&--V&&J!=K;){if(a[j+Q]==a[j+Q-W]){for(var $=0;$<Z&&a[j+$]==a[j+$-W];++$);if($>Q){if(Q=$,R=W,$>X)break;var tt=Math.min(W,$-2),nt=0;for(P=0;P<tt;++P){var rt=j-W+P&32767,et=rt-A[rt]&32767;et>nt&&(nt=et,K=rt)}}}W+=(J=K)-(K=A[J])&32767}if(R){F[q++]=268435456|h[Q]<<18|l[R];var it=31&h[Q],at=31&l[R];O+=e[it]+i[at],++I[257+it],++S[at],B=j+Q,++L}else F[q++]=a[j],++I[a[j]]}}for(j=Math.max(j,B);j<v;++j)F[q++]=a[j],++I[a[j]];p=C(a,g,w,F,I,S,O,q,G,j-G,p),w||(c.r=7&p|g[p/8|0]<<3,p-=7,c.h=_,c.p=A,c.i=j,c.w=B)}else{for(j=c.w||0;j<v+w;j+=65535){var st=j+65535;st>=v&&(g[p/8|0]=w,st=v),p=k(g,p+1,a.subarray(j,st))}c.i=v}return b(d,0,f+m(p)+u)}(a,null==s.level?6:s.level,null==s.mem?Math.ceil(1.5*Math.max(8,Math.min(13,Math.log(a.length)))):12+s.mem,o,f,u)},O=function(t,n,r){for(;r;++n)t[n]=r,r>>>=8},j=function(){function n(n,r){if(\"function\"==typeof n&&(r=n,n={}),this.ondata=r,this.o=n||{},this.s={l:0,i:32768,w:32768,z:32768},this.b=new t(98304),this.o.dictionary){var e=this.o.dictionary.subarray(-32768);this.b.set(e,32768-e.length),this.s.i=32768-e.length}}return n.prototype.p=function(t,n){this.ondata(L(t,this.o,0,0,this.s),n)},n.prototype.push=function(n,r){this.ondata||E(5),this.s.l&&E(4);var e=n.length+this.s.z;if(e>this.b.length){if(e>2*this.b.length-32768){var i=new t(-32768&e);i.set(this.b.subarray(0,this.s.z)),this.b=i}var a=this.b.length-this.s.z;a&&(this.b.set(n.subarray(0,a),this.s.z),this.s.z=this.b.length,this.p(this.b,!1)),this.b.set(this.b.subarray(-32768)),this.b.set(n.subarray(a),32768),this.s.z=n.length-a+32768,this.s.i=32766,this.s.w=32768}else this.b.set(n,this.s.z),this.s.z+=n.length;this.s.l=1&r,(this.s.z>this.s.w+8191||r)&&(this.p(this.b,r||!1),this.s.w=this.s.i,this.s.i-=2)},n}();function q(t,n){n||(n={});var r=function(){var t=-1;return{p:function(n){for(var r=t,e=0;e<n.length;++e)r=I[255&r^n[e]]^r>>>8;t=r},d:function(){return~t}}}(),e=t.length;r.p(t);var i,a=L(t,n,10+((i=n).filename?i.filename.length+1:0),8),s=a.length;return function(t,n){var r=n.filename;if(t[0]=31,t[1]=139,t[2]=8,t[8]=n.level<2?4:9==n.level?2:0,t[9]=3,0!=n.mtime&&O(t,4,Math.floor(new Date(n.mtime||Date.now())/1e3)),r){t[3]=8;for(var e=0;e<=r.length;++e)t[e+10]=r.charCodeAt(e)}}(a,n),O(a,s-8,r.d()),O(a,s-4,e),a}var B=function(){function t(t,n){this.c=S(),this.v=1,j.call(this,t,n)}return t.prototype.push=function(t,n){this.c.p(t),j.prototype.push.call(this,t,n)},t.prototype.p=function(t,n){var r=L(t,this.o,this.v&&(this.o.dictionary?6:2),n&&4,this.s);this.v&&(function(t,n){var r=n.level,e=0==r?0:r<6?1:9==r?3:2;if(t[0]=120,t[1]=e<<6|(n.dictionary&&32),t[1]|=31-(t[0]<<8|t[1])%31,n.dictionary){var i=S();i.p(n.dictionary),O(t,2,i.d())}}(r,this.o),this.v=0),n&&O(r,r.length-4,this.c.d()),this.ondata(r,n)},t}(),G=\"undefined\"!=typeof TextEncoder&&new TextEncoder,H=\"undefined\"!=typeof TextDecoder&&new TextDecoder;try{H.decode(F,{stream:!0})}catch(t){}var J=function(){function t(t){this.ondata=t}return t.prototype.push=function(t,n){this.ondata||E(5),this.d&&E(4),this.ondata(K(t),this.d=n||!1)},t}();function K(n,r){if(r){for(var e=new t(n.length),i=0;i<n.length;++i)e[i]=n.charCodeAt(i);return e}if(G)return G.encode(n);var a=n.length,s=new t(n.length+(n.length>>1)),o=0,f=function(t){s[o++]=t};for(i=0;i<a;++i){if(o+5>s.length){var h=new t(o+8+(a-i<<1));h.set(s),s=h}var l=n.charCodeAt(i);l<128||r?f(l):l<2048?(f(192|l>>6),f(128|63&l)):l>55295&&l<57344?(f(240|(l=65536+(1047552&l)|1023&n.charCodeAt(++i))>>18),f(128|l>>12&63),f(128|l>>6&63),f(128|63&l)):(f(224|l>>12),f(128|l>>6&63),f(128|63&l))}return b(s,0,o)}const N=new class{constructor(){this._init()}clear(){this._init()}addEvent(t){if(!t)throw new Error(\"Adding invalid event\");const n=this._hasEvents?\",\":\"\";this.stream.push(n+t),this._hasEvents=!0}finish(){this.stream.push(\"]\",!0);const t=function(t){let n=0;for(let r=0,e=t.length;r<e;r++)n+=t[r].length;const r=new Uint8Array(n);for(let n=0,e=0,i=t.length;n<i;n++){const i=t[n];r.set(i,e),e+=i.length}return r}(this._deflatedData);return this._init(),t}_init(){this._hasEvents=!1,this._deflatedData=[],this.deflate=new B,this.deflate.ondata=(t,n)=>{this._deflatedData.push(t)},this.stream=new J(((t,n)=>{this.deflate.push(t,n)})),this.stream.push(\"[\")}},P={clear:()=>{N.clear()},addEvent:t=>N.addEvent(t),finish:()=>N.finish(),compress:t=>function(t){return q(K(t))}(t)};addEventListener(\"message\",(function(t){const n=t.data.method,r=t.data.id,e=t.data.arg;if(n in P&&\"function\"==typeof P[n])try{const t=P[n](e);postMessage({id:r,method:n,success:!0,response:t})}catch(t){postMessage({id:r,method:n,success:!1,response:t.message}),console.error(t)}})),postMessage({id:void 0,method:\"init\",success:!0,response:void 0});`;\n", "import r from\"./worker\";function e(){const e=new Blob([r]);return URL.createObjectURL(e)}export{e as getWorkerURL};\n", "import { addBreadcrumb } from '@sentry/core';\nimport { logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\n\n/**\n * Log a message in debug mode, and add a breadcrumb when _experiment.traceInternals is enabled.\n */\nexport function logInfo(message: string, shouldAddBreadcrumb?: boolean): void {\n  if (!DEBUG_BUILD) {\n    return;\n  }\n\n  logger.info(message);\n\n  if (shouldAddBreadcrumb) {\n    addLogBreadcrumb(message);\n  }\n}\n\n/**\n * Log a message, and add a breadcrumb in the next tick.\n * This is necessary when the breadcrumb may be added before the replay is initialized.\n */\nexport function logInfoNextTick(message: string, shouldAddBreadcrumb?: boolean): void {\n  if (!DEBUG_BUILD) {\n    return;\n  }\n\n  logger.info(message);\n\n  if (shouldAddBreadcrumb) {\n    // Wait a tick here to avoid race conditions for some initial logs\n    // which may be added before replay is initialized\n    setTimeout(() => {\n      addLogBreadcrumb(message);\n    }, 0);\n  }\n}\n\nfunction addLogBreadcrumb(message: string): void {\n  addBreadcrumb(\n    {\n      category: 'console',\n      data: {\n        logger: 'replay',\n      },\n      level: 'info',\n      message,\n    },\n    { level: 'info' },\n  );\n}\n", "import { REPLAY_MAX_EVENT_BUFFER_SIZE } from '../constants';\n\n/** This error indicates that the event buffer size exceeded the limit.. */\nexport class EventBufferSizeExceededError extends Error {\n  public constructor() {\n    super(`Event buffer exceeded maximum size of ${REPLAY_MAX_EVENT_BUFFER_SIZE}.`);\n  }\n}\n", "import { REPLAY_MAX_EVENT_BUFFER_SIZE } from '../constants';\nimport type { AddEventResult, EventBuffer, EventBufferType, RecordingEvent } from '../types';\nimport { timestampToMs } from '../util/timestamp';\nimport { EventBufferSizeExceededError } from './error';\n\n/**\n * A basic event buffer that does not do any compression.\n * Used as fallback if the compression worker cannot be loaded or is disabled.\n */\nexport class EventBufferArray implements EventBuffer {\n  /** All the events that are buffered to be sent. */\n  public events: RecordingEvent[];\n\n  /** @inheritdoc */\n  public hasCheckout: boolean;\n\n  private _totalSize: number;\n\n  public constructor() {\n    this.events = [];\n    this._totalSize = 0;\n    this.hasCheckout = false;\n  }\n\n  /** @inheritdoc */\n  public get hasEvents(): boolean {\n    return this.events.length > 0;\n  }\n\n  /** @inheritdoc */\n  public get type(): EventBufferType {\n    return 'sync';\n  }\n\n  /** @inheritdoc */\n  public destroy(): void {\n    this.events = [];\n  }\n\n  /** @inheritdoc */\n  public async addEvent(event: RecordingEvent): Promise<AddEventResult> {\n    const eventSize = JSON.stringify(event).length;\n    this._totalSize += eventSize;\n    if (this._totalSize > REPLAY_MAX_EVENT_BUFFER_SIZE) {\n      throw new EventBufferSizeExceededError();\n    }\n\n    this.events.push(event);\n  }\n\n  /** @inheritdoc */\n  public finish(): Promise<string> {\n    return new Promise<string>(resolve => {\n      // Make a copy of the events array reference and immediately clear the\n      // events member so that we do not lose new events while uploading\n      // attachment.\n      const eventsRet = this.events;\n      this.clear();\n      resolve(JSON.stringify(eventsRet));\n    });\n  }\n\n  /** @inheritdoc */\n  public clear(): void {\n    this.events = [];\n    this._totalSize = 0;\n    this.hasCheckout = false;\n  }\n\n  /** @inheritdoc */\n  public getEarliestTimestamp(): number | null {\n    const timestamp = this.events.map(event => event.timestamp).sort()[0];\n\n    if (!timestamp) {\n      return null;\n    }\n\n    return timestampToMs(timestamp);\n  }\n}\n", "import { logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { WorkerRequest, WorkerResponse } from '../types';\nimport { logInfo } from '../util/log';\n\n/**\n * Event buffer that uses a web worker to compress events.\n * Exported only for testing.\n */\nexport class WorkerHandler {\n  private _worker: Worker;\n  private _id: number;\n  private _ensureReadyPromise?: Promise<void>;\n\n  public constructor(worker: Worker) {\n    this._worker = worker;\n    this._id = 0;\n  }\n\n  /**\n   * Ensure the worker is ready (or not).\n   * This will either resolve when the worker is ready, or reject if an error occured.\n   */\n  public ensureReady(): Promise<void> {\n    // Ensure we only check once\n    if (this._ensureReadyPromise) {\n      return this._ensureReadyPromise;\n    }\n\n    this._ensureReadyPromise = new Promise((resolve, reject) => {\n      this._worker.addEventListener(\n        'message',\n        ({ data }: MessageEvent) => {\n          if ((data as WorkerResponse).success) {\n            resolve();\n          } else {\n            reject();\n          }\n        },\n        { once: true },\n      );\n\n      this._worker.addEventListener(\n        'error',\n        error => {\n          reject(error);\n        },\n        { once: true },\n      );\n    });\n\n    return this._ensureReadyPromise;\n  }\n\n  /**\n   * Destroy the worker.\n   */\n  public destroy(): void {\n    logInfo('[Replay] Destroying compression worker');\n    this._worker.terminate();\n  }\n\n  /**\n   * Post message to worker and wait for response before resolving promise.\n   */\n  public postMessage<T>(method: WorkerRequest['method'], arg?: WorkerRequest['arg']): Promise<T> {\n    const id = this._getAndIncrementId();\n\n    return new Promise((resolve, reject) => {\n      const listener = ({ data }: MessageEvent): void => {\n        const response = data as WorkerResponse;\n        if (response.method !== method) {\n          return;\n        }\n\n        // There can be multiple listeners for a single method, the id ensures\n        // that the response matches the caller.\n        if (response.id !== id) {\n          return;\n        }\n\n        // At this point, we'll always want to remove listener regardless of result status\n        this._worker.removeEventListener('message', listener);\n\n        if (!response.success) {\n          // TODO: Do some error handling, not sure what\n          DEBUG_BUILD && logger.error('[Replay]', response.response);\n\n          reject(new Error('Error in compression worker'));\n          return;\n        }\n\n        resolve(response.response as T);\n      };\n\n      // Note: we can't use `once` option because it's possible it needs to\n      // listen to multiple messages\n      this._worker.addEventListener('message', listener);\n      this._worker.postMessage({ id, method, arg });\n    });\n  }\n\n  /** Get the current ID and increment it for the next call. */\n  private _getAndIncrementId(): number {\n    return this._id++;\n  }\n}\n", "import type { ReplayRecordingData } from '@sentry/types';\n\nimport { logger } from '@sentry/utils';\nimport { REPLAY_MAX_EVENT_BUFFER_SIZE } from '../constants';\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { AddEventResult, EventBuffer, EventBufferType, RecordingEvent } from '../types';\nimport { timestampToMs } from '../util/timestamp';\nimport { WorkerHandler } from './WorkerHandler';\nimport { EventBufferSizeExceededError } from './error';\n\n/**\n * Event buffer that uses a web worker to compress events.\n * Exported only for testing.\n */\nexport class EventBufferCompressionWorker implements EventBuffer {\n  /** @inheritdoc */\n  public hasCheckout: boolean;\n\n  private _worker: WorkerHandler;\n  private _earliestTimestamp: number | null;\n  private _totalSize;\n\n  public constructor(worker: Worker) {\n    this._worker = new WorkerHandler(worker);\n    this._earliestTimestamp = null;\n    this._totalSize = 0;\n    this.hasCheckout = false;\n  }\n\n  /** @inheritdoc */\n  public get hasEvents(): boolean {\n    return !!this._earliestTimestamp;\n  }\n\n  /** @inheritdoc */\n  public get type(): EventBufferType {\n    return 'worker';\n  }\n\n  /**\n   * Ensure the worker is ready (or not).\n   * This will either resolve when the worker is ready, or reject if an error occured.\n   */\n  public ensureReady(): Promise<void> {\n    return this._worker.ensureReady();\n  }\n\n  /**\n   * Destroy the event buffer.\n   */\n  public destroy(): void {\n    this._worker.destroy();\n  }\n\n  /**\n   * Add an event to the event buffer.\n   *\n   * Returns true if event was successfuly received and processed by worker.\n   */\n  public addEvent(event: RecordingEvent): Promise<AddEventResult> {\n    const timestamp = timestampToMs(event.timestamp);\n    if (!this._earliestTimestamp || timestamp < this._earliestTimestamp) {\n      this._earliestTimestamp = timestamp;\n    }\n\n    const data = JSON.stringify(event);\n    this._totalSize += data.length;\n\n    if (this._totalSize > REPLAY_MAX_EVENT_BUFFER_SIZE) {\n      return Promise.reject(new EventBufferSizeExceededError());\n    }\n\n    return this._sendEventToWorker(data);\n  }\n\n  /**\n   * Finish the event buffer and return the compressed data.\n   */\n  public finish(): Promise<ReplayRecordingData> {\n    return this._finishRequest();\n  }\n\n  /** @inheritdoc */\n  public clear(): void {\n    this._earliestTimestamp = null;\n    this._totalSize = 0;\n    this.hasCheckout = false;\n\n    // We do not wait on this, as we assume the order of messages is consistent for the worker\n    this._worker.postMessage('clear').then(null, e => {\n      DEBUG_BUILD && logger.warn('[Replay] Sending \"clear\" message to worker failed', e);\n    });\n  }\n\n  /** @inheritdoc */\n  public getEarliestTimestamp(): number | null {\n    return this._earliestTimestamp;\n  }\n\n  /**\n   * Send the event to the worker.\n   */\n  private _sendEventToWorker(data: string): Promise<AddEventResult> {\n    return this._worker.postMessage<void>('addEvent', data);\n  }\n\n  /**\n   * Finish the request and return the compressed data from the worker.\n   */\n  private async _finishRequest(): Promise<Uint8Array> {\n    const response = await this._worker.postMessage<Uint8Array>('finish');\n\n    this._earliestTimestamp = null;\n    this._totalSize = 0;\n\n    return response;\n  }\n}\n", "import type { ReplayRecordingData } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { AddEventResult, EventBuffer, EventBufferType, RecordingEvent } from '../types';\nimport { logInfo } from '../util/log';\nimport { EventBufferArray } from './EventBufferArray';\nimport { EventBufferCompressionWorker } from './EventBufferCompressionWorker';\n\n/**\n * This proxy will try to use the compression worker, and fall back to use the simple buffer if an error occurs there.\n * This can happen e.g. if the worker cannot be loaded.\n * Exported only for testing.\n */\nexport class EventBufferProxy implements EventBuffer {\n  private _fallback: EventBufferArray;\n  private _compression: EventBufferCompressionWorker;\n  private _used: EventBuffer;\n  private _ensureWorkerIsLoadedPromise: Promise<void>;\n\n  public constructor(worker: Worker) {\n    this._fallback = new EventBufferArray();\n    this._compression = new EventBufferCompressionWorker(worker);\n    this._used = this._fallback;\n\n    this._ensureWorkerIsLoadedPromise = this._ensureWorkerIsLoaded();\n  }\n\n  /** @inheritdoc */\n  public get type(): EventBufferType {\n    return this._used.type;\n  }\n\n  /** @inheritDoc */\n  public get hasEvents(): boolean {\n    return this._used.hasEvents;\n  }\n\n  /** @inheritdoc */\n  public get hasCheckout(): boolean {\n    return this._used.hasCheckout;\n  }\n  /** @inheritdoc */\n  public set hasCheckout(value: boolean) {\n    this._used.hasCheckout = value;\n  }\n\n  /** @inheritDoc */\n  public destroy(): void {\n    this._fallback.destroy();\n    this._compression.destroy();\n  }\n\n  /** @inheritdoc */\n  public clear(): void {\n    return this._used.clear();\n  }\n\n  /** @inheritdoc */\n  public getEarliestTimestamp(): number | null {\n    return this._used.getEarliestTimestamp();\n  }\n\n  /**\n   * Add an event to the event buffer.\n   *\n   * Returns true if event was successfully added.\n   */\n  public addEvent(event: RecordingEvent): Promise<AddEventResult> {\n    return this._used.addEvent(event);\n  }\n\n  /** @inheritDoc */\n  public async finish(): Promise<ReplayRecordingData> {\n    // Ensure the worker is loaded, so the sent event is compressed\n    await this.ensureWorkerIsLoaded();\n\n    return this._used.finish();\n  }\n\n  /** Ensure the worker has loaded. */\n  public ensureWorkerIsLoaded(): Promise<void> {\n    return this._ensureWorkerIsLoadedPromise;\n  }\n\n  /** Actually check if the worker has been loaded. */\n  private async _ensureWorkerIsLoaded(): Promise<void> {\n    try {\n      await this._compression.ensureReady();\n    } catch (error) {\n      // If the worker fails to load, we fall back to the simple buffer.\n      // Nothing more to do from our side here\n      logInfo('[Replay] Failed to load the compression worker, falling back to simple buffer');\n      return;\n    }\n\n    // Now we need to switch over the array buffer to the compression worker\n    await this._switchToCompressionWorker();\n  }\n\n  /** Switch the used buffer to the compression worker. */\n  private async _switchToCompressionWorker(): Promise<void> {\n    const { events, hasCheckout } = this._fallback;\n\n    const addEventPromises: Promise<void>[] = [];\n    for (const event of events) {\n      addEventPromises.push(this._compression.addEvent(event));\n    }\n\n    this._compression.hasCheckout = hasCheckout;\n\n    // We switch over to the new buffer immediately - any further events will be added\n    // after the previously buffered ones\n    this._used = this._compression;\n\n    // Wait for original events to be re-added before resolving\n    try {\n      await Promise.all(addEventPromises);\n    } catch (error) {\n      DEBUG_BUILD && logger.warn('[Replay] Failed to add events when switching buffers.', error);\n    }\n  }\n}\n", "import { getWorkerURL } from '@sentry-internal/replay-worker';\n\nimport type { EventBuffer } from '../types';\nimport { logInfo } from '../util/log';\nimport { EventBufferArray } from './EventBufferArray';\nimport { EventBufferProxy } from './EventBufferProxy';\n\ninterface CreateEventBufferParams {\n  useCompression: boolean;\n  workerUrl?: string;\n}\n\n// Treeshakable guard to remove the code of the included compression worker\ndeclare const __SENTRY_EXCLUDE_REPLAY_WORKER__: boolean;\n\n/**\n * Create an event buffer for replays.\n */\nexport function createEventBuffer({\n  useCompression,\n  workerUrl: customWorkerUrl,\n}: CreateEventBufferParams): EventBuffer {\n  if (\n    useCompression &&\n    // eslint-disable-next-line no-restricted-globals\n    window.Worker\n  ) {\n    const worker = _loadWorker(customWorkerUrl);\n\n    if (worker) {\n      return worker;\n    }\n  }\n\n  logInfo('[Replay] Using simple buffer');\n  return new EventBufferArray();\n}\n\nfunction _loadWorker(customWorkerUrl?: string): EventBufferProxy | void {\n  try {\n    const workerUrl = customWorkerUrl || _getWorkerUrl();\n\n    if (!workerUrl) {\n      return;\n    }\n\n    logInfo(`[Replay] Using compression worker${customWorkerUrl ? ` from ${customWorkerUrl}` : ''}`);\n    const worker = new Worker(workerUrl);\n    return new EventBufferProxy(worker);\n  } catch (error) {\n    logInfo('[Replay] Failed to create compression worker');\n    // Fall back to use simple event buffer array\n  }\n}\n\nfunction _getWorkerUrl(): string {\n  if (typeof __SENTRY_EXCLUDE_REPLAY_WORKER__ === 'undefined' || !__SENTRY_EXCLUDE_REPLAY_WORKER__) {\n    return getWorkerURL();\n  }\n\n  return '';\n}\n", "import { WINDOW } from '../constants';\n\n/** If sessionStorage is available. */\nexport function hasSessionStorage(): boolean {\n  try {\n    // This can throw, e.g. when being accessed in a sandboxed iframe\n    return 'sessionStorage' in WINDOW && !!WINDOW.sessionStorage;\n  } catch {\n    return false;\n  }\n}\n", "import { REPLAY_SESSION_KEY, WINDOW } from '../../src/constants';\nimport type { ReplayContainer } from '../../src/types';\nimport { hasSessionStorage } from '../util/hasSessionStorage';\n\n/**\n * Removes the session from Session Storage and unsets session in replay instance\n */\nexport function clearSession(replay: ReplayContainer): void {\n  deleteSession();\n  replay.session = undefined;\n}\n\n/**\n * Deletes a session from storage\n */\nfunction deleteSession(): void {\n  if (!hasSessionStorage()) {\n    return;\n  }\n\n  try {\n    WINDOW.sessionStorage.removeItem(REPLAY_SESSION_KEY);\n  } catch {\n    // Ignore potential SecurityError exceptions\n  }\n}\n", "/**\n * Given a sample rate, returns true if replay should be sampled.\n *\n * 1.0 = 100% sampling\n * 0.0 = 0% sampling\n */\nexport function isSampled(sampleRate?: number): boolean {\n  if (sampleRate === undefined) {\n    return false;\n  }\n\n  // Math.random() returns a number in range of 0 to 1 (inclusive of 0, but not 1)\n  return Math.random() < sampleRate;\n}\n", "import { uuid4 } from '@sentry/utils';\n\nimport type { Sampled, Session } from '../types';\n\n/**\n * Get a session with defaults & applied sampling.\n */\nexport function makeSession(session: Partial<Session> & { sampled: Sampled }): Session {\n  const now = Date.now();\n  const id = session.id || uuid4();\n  // Note that this means we cannot set a started/lastActivity of `0`, but this should not be relevant outside of tests.\n  const started = session.started || now;\n  const lastActivity = session.lastActivity || now;\n  const segmentId = session.segmentId || 0;\n  const sampled = session.sampled;\n  const previousSessionId = session.previousSessionId;\n\n  return {\n    id,\n    started,\n    lastActivity,\n    segmentId,\n    sampled,\n    previousSessionId,\n  };\n}\n", "import { REPLAY_SESSION_KEY, WINDOW } from '../constants';\nimport type { Session } from '../types';\nimport { hasSessionStorage } from '../util/hasSessionStorage';\n\n/**\n * Save a session to session storage.\n */\nexport function saveSession(session: Session): void {\n  if (!hasSessionStorage()) {\n    return;\n  }\n\n  try {\n    WINDOW.sessionStorage.setItem(REPLAY_SESSION_KEY, JSON.stringify(session));\n  } catch {\n    // Ignore potential SecurityError exceptions\n  }\n}\n", "import type { Sampled, Session, SessionOptions } from '../types';\nimport { isSampled } from '../util/isSampled';\nimport { makeSession } from './Session';\nimport { saveSession } from './saveSession';\n\n/**\n * Get the sampled status for a session based on sample rates & current sampled status.\n */\nexport function getSessionSampleType(sessionSampleRate: number, allowBuffering: boolean): Sampled {\n  return isSampled(sessionSampleRate) ? 'session' : allowBuffering ? 'buffer' : false;\n}\n\n/**\n * Create a new session, which in its current implementation is a Sentry event\n * that all replays will be saved to as attachments. Currently, we only expect\n * one of these Sentry events per \"replay session\".\n */\nexport function createSession(\n  { sessionSampleRate, allowBuffering, stickySession = false }: SessionOptions,\n  { previousSessionId }: { previousSessionId?: string } = {},\n): Session {\n  const sampled = getSessionSampleType(sessionSampleRate, allowBuffering);\n  const session = makeSession({\n    sampled,\n    previousSessionId,\n  });\n\n  if (stickySession) {\n    saveSession(session);\n  }\n\n  return session;\n}\n", "import { REPLAY_SESSION_KEY, WINDOW } from '../constants';\nimport type { Session } from '../types';\nimport { hasSessionStorage } from '../util/hasSessionStorage';\nimport { logInfoNextTick } from '../util/log';\nimport { makeSession } from './Session';\n\n/**\n * Fetches a session from storage\n */\nexport function fetchSession(traceInternals?: boolean): Session | null {\n  if (!hasSessionStorage()) {\n    return null;\n  }\n\n  try {\n    // This can throw if cookies are disabled\n    const sessionStringFromStorage = WINDOW.sessionStorage.getItem(REPLAY_SESSION_KEY);\n\n    if (!sessionStringFromStorage) {\n      return null;\n    }\n\n    const sessionObj = JSON.parse(sessionStringFromStorage) as Session;\n\n    logInfoNextTick('[Replay] Loading existing session', traceInternals);\n\n    return makeSession(sessionObj);\n  } catch {\n    return null;\n  }\n}\n", "/**\n * Given an initial timestamp and an expiry duration, checks to see if current\n * time should be considered as expired.\n */\nexport function isExpired(\n  initialTime: null | number,\n  expiry: undefined | number,\n  targetTime: number = +new Date(),\n): boolean {\n  // Always expired if < 0\n  if (initialTime === null || expiry === undefined || expiry < 0) {\n    return true;\n  }\n\n  // Never expires if == 0\n  if (expiry === 0) {\n    return false;\n  }\n\n  return initialTime + expiry <= targetTime;\n}\n", "import type { Session } from '../types';\nimport { isExpired } from './isExpired';\n\n/**\n * Checks to see if session is expired\n */\nexport function isSessionExpired(\n  session: Session,\n  {\n    maxReplayDuration,\n    sessionIdleExpire,\n    targetTime = Date.now(),\n  }: { maxReplayDuration: number; sessionIdleExpire: number; targetTime?: number },\n): boolean {\n  return (\n    // First, check that maximum session length has not been exceeded\n    isExpired(session.started, maxReplayDuration, targetTime) ||\n    // check that the idle timeout has not been exceeded (i.e. user has\n    // performed an action within the last `sessionIdleExpire` ms)\n    isExpired(session.lastActivity, sessionIdleExpire, targetTime)\n  );\n}\n", "import type { Session } from '../types';\nimport { isSessionExpired } from '../util/isSessionExpired';\n\n/** If the session should be refreshed or not. */\nexport function shouldRefreshSession(\n  session: Session,\n  { sessionIdleExpire, maxReplayDuration }: { sessionIdleExpire: number; maxReplayDuration: number },\n): boolean {\n  // If not expired, all good, just keep the session\n  if (!isSessionExpired(session, { sessionIdleExpire, maxReplayDuration })) {\n    return false;\n  }\n\n  // If we are buffering & haven't ever flushed yet, always continue\n  if (session.sampled === 'buffer' && session.segmentId === 0) {\n    return false;\n  }\n\n  return true;\n}\n", "import type { Session, SessionOptions } from '../types';\nimport { logInfoNextTick } from '../util/log';\nimport { createSession } from './createSession';\nimport { fetchSession } from './fetchSession';\nimport { shouldRefreshSession } from './shouldRefreshSession';\n\n/**\n * Get or create a session, when initializing the replay.\n * Returns a session that may be unsampled.\n */\nexport function loadOrCreateSession(\n  {\n    traceInternals,\n    sessionIdleExpire,\n    maxReplayDuration,\n    previousSessionId,\n  }: {\n    sessionIdleExpire: number;\n    maxReplayDuration: number;\n    traceInternals?: boolean;\n    previousSessionId?: string;\n  },\n  sessionOptions: SessionOptions,\n): Session {\n  const existingSession = sessionOptions.stickySession && fetchSession(traceInternals);\n\n  // No session exists yet, just create a new one\n  if (!existingSession) {\n    logInfoNextTick('[Replay] Creating new session', traceInternals);\n    return createSession(sessionOptions, { previousSessionId });\n  }\n\n  if (!shouldRefreshSession(existingSession, { sessionIdleExpire, maxReplayDuration })) {\n    return existingSession;\n  }\n\n  logInfoNextTick('[Replay] Session in sessionStorage is expired, creating new one...');\n  return createSession(sessionOptions, { previousSessionId: existingSession.id });\n}\n", "import { EventType } from '@sentry-internal/rrweb';\nimport { getClient } from '@sentry/core';\nimport { logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport { EventBufferSizeExceededError } from '../eventBuffer/error';\nimport type { AddEventResult, RecordingEvent, ReplayContainer, ReplayFrameEvent, ReplayPluginOptions } from '../types';\nimport { logInfo } from './log';\nimport { timestampToMs } from './timestamp';\n\nfunction isCustomEvent(event: RecordingEvent): event is ReplayFrameEvent {\n  return event.type === EventType.Custom;\n}\n\n/**\n * Add an event to the event buffer.\n * In contrast to `addEvent`, this does not return a promise & does not wait for the adding of the event to succeed/fail.\n * Instead this returns `true` if we tried to add the event, else false.\n * It returns `false` e.g. if we are paused, disabled, or out of the max replay duration.\n *\n * `isCheckout` is true if this is either the very first event, or an event triggered by `checkoutEveryNms`.\n */\nexport function addEventSync(replay: ReplayContainer, event: RecordingEvent, isCheckout?: boolean): boolean {\n  if (!shouldAddEvent(replay, event)) {\n    return false;\n  }\n\n  // This should never reject\n  // eslint-disable-next-line @typescript-eslint/no-floating-promises\n  _addEvent(replay, event, isCheckout);\n\n  return true;\n}\n\n/**\n * Add an event to the event buffer.\n * Resolves to `null` if no event was added, else to `void`.\n *\n * `isCheckout` is true if this is either the very first event, or an event triggered by `checkoutEveryNms`.\n */\nexport function addEvent(\n  replay: ReplayContainer,\n  event: RecordingEvent,\n  isCheckout?: boolean,\n): Promise<AddEventResult | null> {\n  if (!shouldAddEvent(replay, event)) {\n    return Promise.resolve(null);\n  }\n\n  return _addEvent(replay, event, isCheckout);\n}\n\nasync function _addEvent(\n  replay: ReplayContainer,\n  event: RecordingEvent,\n  isCheckout?: boolean,\n): Promise<AddEventResult | null> {\n  if (!replay.eventBuffer) {\n    return null;\n  }\n\n  try {\n    if (isCheckout && replay.recordingMode === 'buffer') {\n      replay.eventBuffer.clear();\n    }\n\n    if (isCheckout) {\n      replay.eventBuffer.hasCheckout = true;\n    }\n\n    const replayOptions = replay.getOptions();\n\n    const eventAfterPossibleCallback = maybeApplyCallback(event, replayOptions.beforeAddRecordingEvent);\n\n    if (!eventAfterPossibleCallback) {\n      return;\n    }\n\n    return await replay.eventBuffer.addEvent(eventAfterPossibleCallback);\n  } catch (error) {\n    const reason = error && error instanceof EventBufferSizeExceededError ? 'addEventSizeExceeded' : 'addEvent';\n\n    DEBUG_BUILD && logger.error(error);\n    await replay.stop({ reason });\n\n    const client = getClient();\n\n    if (client) {\n      client.recordDroppedEvent('internal_sdk_error', 'replay');\n    }\n  }\n}\n\n/** Exported only for tests. */\nexport function shouldAddEvent(replay: ReplayContainer, event: RecordingEvent): boolean {\n  if (!replay.eventBuffer || replay.isPaused() || !replay.isEnabled()) {\n    return false;\n  }\n\n  const timestampInMs = timestampToMs(event.timestamp);\n\n  // Throw out events that happen more than 5 minutes ago. This can happen if\n  // page has been left open and idle for a long period of time and user\n  // comes back to trigger a new session. The performance entries rely on\n  // `performance.timeOrigin`, which is when the page first opened.\n  if (timestampInMs + replay.timeouts.sessionIdlePause < Date.now()) {\n    return false;\n  }\n\n  // Throw out events that are +60min from the initial timestamp\n  if (timestampInMs > replay.getContext().initialTimestamp + replay.getOptions().maxReplayDuration) {\n    logInfo(\n      `[Replay] Skipping event with timestamp ${timestampInMs} because it is after maxReplayDuration`,\n      replay.getOptions()._experiments.traceInternals,\n    );\n    return false;\n  }\n\n  return true;\n}\n\nfunction maybeApplyCallback(\n  event: RecordingEvent,\n  callback: ReplayPluginOptions['beforeAddRecordingEvent'],\n): RecordingEvent | null | undefined {\n  try {\n    if (typeof callback === 'function' && isCustomEvent(event)) {\n      return callback(event);\n    }\n  } catch (error) {\n    DEBUG_BUILD &&\n      logger.error('[Replay] An error occured in the `beforeAddRecordingEvent` callback, skipping the event...', error);\n    return null;\n  }\n\n  return event;\n}\n", "import type { ErrorEvent, Event, FeedbackEvent, ReplayEvent, TransactionEvent } from '@sentry/types';\n\n/** If the event is an error event */\nexport function isErrorEvent(event: Event): event is ErrorEvent {\n  return !event.type;\n}\n\n/** If the event is a transaction event */\nexport function isTransactionEvent(event: Event): event is TransactionEvent {\n  return event.type === 'transaction';\n}\n\n/** If the event is an replay event */\nexport function isReplayEvent(event: Event): event is ReplayEvent {\n  return event.type === 'replay_event';\n}\n\n/** If the event is a feedback event */\nexport function isFeedbackEvent(event: Event): event is FeedbackEvent {\n  return event.type === 'feedback';\n}\n", "import { getClient } from '@sentry/core';\nimport type { ErrorEvent, Event, TransactionEvent, Transport, TransportMakeRequestResponse } from '@sentry/types';\n\nimport type { ReplayContainer } from '../types';\nimport { isErrorEvent, isTransactionEvent } from '../util/eventUtils';\n\ntype AfterSendEventCallback = (event: Event, sendResponse: TransportMakeRequestResponse | void) => void;\n\n/**\n * Returns a listener to be added to `client.on('afterSendErrorEvent, listener)`.\n */\nexport function handleAfterSendEvent(replay: ReplayContainer): AfterSendEventCallback {\n  // Custom transports may still be returning `Promise<void>`, which means we cannot expect the status code to be available there\n  // TODO (v8): remove this check as it will no longer be necessary\n  const enforceStatusCode = isBaseTransportSend();\n\n  return (event: Event, sendResponse: TransportMakeRequestResponse | void) => {\n    if (!replay.isEnabled() || (!isErrorEvent(event) && !isTransactionEvent(event))) {\n      return;\n    }\n\n    const statusCode = sendResponse && sendResponse.statusCode;\n\n    // We only want to do stuff on successful error sending, otherwise you get error replays without errors attached\n    // If not using the base transport, we allow `undefined` response (as a custom transport may not implement this correctly yet)\n    // If we do use the base transport, we skip if we encountered an non-OK status code\n    if (enforceStatusCode && (!statusCode || statusCode < 200 || statusCode >= 300)) {\n      return;\n    }\n\n    if (isTransactionEvent(event)) {\n      handleTransactionEvent(replay, event);\n      return;\n    }\n\n    handleErrorEvent(replay, event);\n  };\n}\n\nfunction handleTransactionEvent(replay: ReplayContainer, event: TransactionEvent): void {\n  const replayContext = replay.getContext();\n\n  // Collect traceIds in _context regardless of `recordingMode`\n  // In error mode, _context gets cleared on every checkout\n  // We limit to max. 100 transactions linked\n  if (event.contexts && event.contexts.trace && event.contexts.trace.trace_id && replayContext.traceIds.size < 100) {\n    replayContext.traceIds.add(event.contexts.trace.trace_id as string);\n  }\n}\n\nfunction handleErrorEvent(replay: ReplayContainer, event: ErrorEvent): void {\n  const replayContext = replay.getContext();\n\n  // Add error to list of errorIds of replay. This is ok to do even if not\n  // sampled because context will get reset at next checkout.\n  // XXX: There is also a race condition where it's possible to capture an\n  // error to Sentry before Replay SDK has loaded, but response returns after\n  // it was loaded, and this gets called.\n  // We limit to max. 100 errors linked\n  if (event.event_id && replayContext.errorIds.size < 100) {\n    replayContext.errorIds.add(event.event_id);\n  }\n\n  // If error event is tagged with replay id it means it was sampled (when in buffer mode)\n  // Need to be very careful that this does not cause an infinite loop\n  if (replay.recordingMode !== 'buffer' || !event.tags || !event.tags.replayId) {\n    return;\n  }\n\n  const { beforeErrorSampling } = replay.getOptions();\n  if (typeof beforeErrorSampling === 'function' && !beforeErrorSampling(event)) {\n    return;\n  }\n\n  setTimeout(() => {\n    // Capture current event buffer as new replay\n    // This should never reject\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    replay.sendBufferedReplayOrFlush();\n  });\n}\n\nfunction isBaseTransportSend(): boolean {\n  const client = getClient();\n  if (!client) {\n    return false;\n  }\n\n  const transport = client.getTransport();\n  if (!transport) {\n    return false;\n  }\n\n  return (\n    (transport.send as Transport['send'] & { __sentry__baseTransport__?: true }).__sentry__baseTransport__ || false\n  );\n}\n", "import type { ErrorEvent, Event } from '@sentry/types';\n\nimport type { ReplayContainer } from '../types';\nimport { createBreadcrumb } from '../util/createBreadcrumb';\nimport { isErrorEvent } from '../util/eventUtils';\nimport { addBreadcrumbEvent } from './util/addBreadcrumbEvent';\n\ntype BeforeSendEventCallback = (event: Event) => void;\n\n/**\n * Returns a listener to be added to `client.on('afterSendErrorEvent, listener)`.\n */\nexport function handleBeforeSendEvent(replay: ReplayContainer): BeforeSendEventCallback {\n  return (event: Event) => {\n    if (!replay.isEnabled() || !isErrorEvent(event)) {\n      return;\n    }\n\n    handleHydrationError(replay, event);\n  };\n}\n\nfunction handleHydrationError(replay: ReplayContainer, event: ErrorEvent): void {\n  const exceptionValue = event.exception && event.exception.values && event.exception.values[0].value;\n  if (typeof exceptionValue !== 'string') {\n    return;\n  }\n\n  if (\n    // Only matches errors in production builds of react-dom\n    // Example https://reactjs.org/docs/error-decoder.html?invariant=423\n    exceptionValue.match(/reactjs\\.org\\/docs\\/error-decoder\\.html\\?invariant=(418|419|422|423|425)/) ||\n    // Development builds of react-dom\n    // Error 1: Hydration failed because the initial UI does not match what was rendered on the server.\n    // Error 2: Text content does not match server-rendered HTML. Warning: Text content did not match.\n    exceptionValue.match(/(does not match server-rendered HTML|Hydration failed because)/i)\n  ) {\n    const breadcrumb = createBreadcrumb({\n      category: 'replay.hydrate-error',\n    });\n    addBreadcrumbEvent(replay, breadcrumb);\n  }\n}\n", "import type { Event, EventHint } from '@sentry/types';\n\n/**\n * Returns true if we think the given event is an error originating inside of rrweb.\n */\nexport function isRrwebError(event: Event, hint: EventHint): boolean {\n  if (event.type || !event.exception || !event.exception.values || !event.exception.values.length) {\n    return false;\n  }\n\n  // @ts-expect-error this may be set by rrweb when it finds errors\n  if (hint.originalException && hint.originalException.__rrweb__) {\n    return true;\n  }\n\n  return false;\n}\n", "import { EventType } from '@sentry-internal/rrweb';\nimport type { FeedbackEvent } from '@sentry/types';\n\nimport type { ReplayBreadcrumbFrameEvent, ReplayContainer } from '../../types';\n\n/**\n * Add a feedback breadcrumb event to replay.\n */\nexport function addFeedbackBreadcrumb(replay: ReplayContainer, event: FeedbackEvent): void {\n  replay.triggerUserActivity();\n  replay.addUpdate(() => {\n    if (!event.timestamp) {\n      // Ignore events that don't have timestamps (this shouldn't happen, more of a typing issue)\n      // Return true here so that we don't flush\n      return true;\n    }\n\n    // This should never reject\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    replay.throttledAddEvent({\n      type: EventType.Custom,\n      timestamp: event.timestamp * 1000,\n      data: {\n        tag: 'breadcrumb',\n        payload: {\n          timestamp: event.timestamp,\n          type: 'default',\n          category: 'sentry.feedback',\n          data: {\n            feedbackId: event.event_id,\n          },\n        },\n      },\n    } as ReplayBreadcrumbFrameEvent);\n\n    return false;\n  });\n}\n", "import type { Event } from '@sentry/types';\n\nimport { UNABLE_TO_SEND_REPLAY } from '../../constants';\nimport type { ReplayContainer } from '../../types';\nimport { isSampled } from '../../util/isSampled';\n\n/**\n * Determine if event should be sampled (only applies in buffer mode).\n * When an event is captured by `hanldleGlobalEvent`, when in buffer mode\n * we determine if we want to sample the error or not.\n */\nexport function shouldSampleForBufferEvent(replay: ReplayContainer, event: Event): boolean {\n  if (replay.recordingMode !== 'buffer') {\n    return false;\n  }\n\n  // ignore this error because otherwise we could loop indefinitely with\n  // trying to capture replay and failing\n  if (event.message === UNABLE_TO_SEND_REPLAY) {\n    return false;\n  }\n\n  // Require the event to be an error event & to have an exception\n  if (!event.exception || event.type) {\n    return false;\n  }\n\n  return isSampled(replay.getOptions().errorSampleRate);\n}\n", "import type { Event, EventHint } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { ReplayContainer } from '../types';\nimport { isErrorEvent, isFeedbackEvent, isReplayEvent, isTransactionEvent } from '../util/eventUtils';\nimport { isRrwebError } from '../util/isRrwebError';\nimport { handleAfterSendEvent } from './handleAfterSendEvent';\nimport { addFeedbackBreadcrumb } from './util/addFeedbackBreadcrumb';\nimport { shouldSampleForBufferEvent } from './util/shouldSampleForBufferEvent';\n\n/**\n * Returns a listener to be added to `addEventProcessor(listener)`.\n */\nexport function handleGlobalEventListener(\n  replay: ReplayContainer,\n  includeAfterSendEventHandling = false,\n): (event: Event, hint: EventHint) => Event | null {\n  const afterSendHandler = includeAfterSendEventHandling ? handleAfterSendEvent(replay) : undefined;\n\n  return Object.assign(\n    (event: Event, hint: EventHint) => {\n      // Do nothing if replay has been disabled\n      if (!replay.isEnabled()) {\n        return event;\n      }\n\n      if (isReplayEvent(event)) {\n        // Replays have separate set of breadcrumbs, do not include breadcrumbs\n        // from core SDK\n        delete event.breadcrumbs;\n        return event;\n      }\n\n      // We only want to handle errors, transactions, and feedbacks, nothing else\n      if (!isErrorEvent(event) && !isTransactionEvent(event) && !isFeedbackEvent(event)) {\n        return event;\n      }\n\n      // Ensure we do not add replay_id if the session is expired\n      const isSessionActive = replay.checkAndHandleExpiredSession();\n      if (!isSessionActive) {\n        return event;\n      }\n\n      if (isFeedbackEvent(event)) {\n        // This should never reject\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        replay.flush();\n        event.contexts.feedback.replay_id = replay.getSessionId();\n        // Add a replay breadcrumb for this piece of feedback\n        addFeedbackBreadcrumb(replay, event);\n        return event;\n      }\n\n      // Unless `captureExceptions` is enabled, we want to ignore errors coming from rrweb\n      // As there can be a bunch of stuff going wrong in internals there, that we don't want to bubble up to users\n      if (isRrwebError(event, hint) && !replay.getOptions()._experiments.captureExceptions) {\n        DEBUG_BUILD && logger.log('[Replay] Ignoring error from rrweb internals', event);\n        return null;\n      }\n\n      // When in buffer mode, we decide to sample here.\n      // Later, in `handleAfterSendEvent`, if the replayId is set, we know that we sampled\n      // And convert the buffer session to a full session\n      const isErrorEventSampled = shouldSampleForBufferEvent(replay, event);\n\n      // Tag errors if it has been sampled in buffer mode, or if it is session mode\n      // Only tag transactions if in session mode\n      const shouldTagReplayId = isErrorEventSampled || replay.recordingMode === 'session';\n\n      if (shouldTagReplayId) {\n        event.tags = { ...event.tags, replayId: replay.getSessionId() };\n      }\n\n      // In cases where a custom client is used that does not support the new hooks (yet),\n      // we manually call this hook method here\n      if (afterSendHandler) {\n        // Pretend the error had a 200 response so we always capture it\n        afterSendHandler(event, { statusCode: 200 });\n      }\n\n      return event;\n    },\n    { id: 'Replay' },\n  );\n}\n", "import { EventType } from '@sentry-internal/rrweb';\n\nimport type { AddEventResult, AllEntryData, ReplayContainer, ReplayPerformanceEntry } from '../types';\n\n/**\n * Create a \"span\" for each performance entry.\n */\nexport function createPerformanceSpans(\n  replay: ReplayContainer,\n  entries: ReplayPerformanceEntry<AllEntryData>[],\n): Promise<AddEventResult | null>[] {\n  return entries.map(({ type, start, end, name, data }) => {\n    const response = replay.throttledAddEvent({\n      type: EventType.Custom,\n      timestamp: start,\n      data: {\n        tag: 'performanceSpan',\n        payload: {\n          op: type,\n          description: name,\n          startTimestamp: start,\n          endTimestamp: end,\n          data,\n        },\n      },\n    });\n\n    // If response is a string, it means its either THROTTLED or SKIPPED\n    return typeof response === 'string' ? Promise.resolve(null) : response;\n  });\n}\n", "import type { HandlerDataHistory } from '@sentry/types';\n\nimport type { HistoryData, ReplayContainer, ReplayPerformanceEntry } from '../types';\nimport { createPerformanceSpans } from '../util/createPerformanceSpans';\n\nfunction handleHistory(handlerData: HandlerDataHistory): ReplayPerformanceEntry<HistoryData> {\n  const { from, to } = handlerData;\n\n  const now = Date.now() / 1000;\n\n  return {\n    type: 'navigation.push',\n    start: now,\n    end: now,\n    name: to,\n    data: {\n      previous: from,\n    },\n  };\n}\n\n/**\n * Returns a listener to be added to `addHistoryInstrumentationHandler(listener)`.\n */\nexport function handleHistorySpanListener(replay: ReplayContainer): (handlerData: HandlerDataHistory) => void {\n  return (handlerData: HandlerDataHistory) => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleHistory(handlerData);\n\n    if (result === null) {\n      return;\n    }\n\n    // Need to collect visited URLs\n    replay.getContext().urls.push(result.name);\n    replay.triggerUserActivity();\n\n    replay.addUpdate(() => {\n      createPerformanceSpans(replay, [result]);\n      // Returning false to flush\n      return false;\n    });\n  };\n}\n", "import { getClient, isSentryRequestUrl } from '@sentry/core';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { ReplayContainer } from '../types';\n\n/**\n * Check whether a given request URL should be filtered out. This is so we\n * don't log Sentry ingest requests.\n */\nexport function shouldFilterRequest(replay: ReplayContainer, url: string): boolean {\n  // If we enabled the `traceInternals` experiment, we want to trace everything\n  if (DEBUG_BUILD && replay.getOptions()._experiments.traceInternals) {\n    return false;\n  }\n\n  return isSentryRequestUrl(url, getClient());\n}\n", "import type { NetworkRequestData, ReplayContainer, ReplayPerformanceEntry } from '../../types';\nimport { createPerformanceSpans } from '../../util/createPerformanceSpans';\nimport { shouldFilterRequest } from '../../util/shouldFilterRequest';\n\n/** Add a performance entry breadcrumb */\nexport function addNetworkBreadcrumb(\n  replay: ReplayContainer,\n  result: ReplayPerformanceEntry<NetworkRequestData> | null,\n): void {\n  if (!replay.isEnabled()) {\n    return;\n  }\n\n  if (result === null) {\n    return;\n  }\n\n  if (shouldFilterRequest(replay, result.name)) {\n    return;\n  }\n\n  replay.addUpdate(() => {\n    createPerformanceSpans(replay, [result]);\n    // Returning true will cause `addUpdate` to not flush\n    // We do not want network requests to cause a flush. This will prevent\n    // recurring/polling requests from keeping the replay session alive.\n    return true;\n  });\n}\n", "import type { HandlerDataFetch } from '@sentry/types';\n\nimport type { NetworkRequestData, ReplayContainer, ReplayPerformanceEntry } from '../types';\nimport { addNetworkBreadcrumb } from './util/addNetworkBreadcrumb';\n\n/** only exported for tests */\nexport function handleFetch(handlerData: HandlerDataFetch): null | ReplayPerformanceEntry<NetworkRequestData> {\n  const { startTimestamp, endTimestamp, fetchData, response } = handlerData;\n\n  if (!endTimestamp) {\n    return null;\n  }\n\n  // This is only used as a fallback, so we know the body sizes are never set here\n  const { method, url } = fetchData;\n\n  return {\n    type: 'resource.fetch',\n    start: startTimestamp / 1000,\n    end: endTimestamp / 1000,\n    name: url,\n    data: {\n      method,\n      statusCode: response ? (response as Response).status : undefined,\n    },\n  };\n}\n\n/**\n * Returns a listener to be added to `addFetchInstrumentationHandler(listener)`.\n */\nexport function handleFetchSpanListener(replay: ReplayContainer): (handlerData: HandlerDataFetch) => void {\n  return (handlerData: HandlerDataFetch) => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleFetch(handlerData);\n\n    addNetworkBreadcrumb(replay, result);\n  };\n}\n", "import type { HandlerDataXhr } from '@sentry/types';\nimport { SENTRY_XHR_DATA_KEY } from '@sentry/utils';\n\nimport type { NetworkRequestData, ReplayContainer, ReplayPerformanceEntry } from '../types';\nimport { addNetworkBreadcrumb } from './util/addNetworkBreadcrumb';\n\n/** only exported for tests */\nexport function handleXhr(handlerData: HandlerDataXhr): ReplayPerformanceEntry<NetworkRequestData> | null {\n  const { startTimestamp, endTimestamp, xhr } = handlerData;\n\n  const sentryXhrData = xhr[SENTRY_XHR_DATA_KEY];\n\n  if (!startTimestamp || !endTimestamp || !sentryXhrData) {\n    return null;\n  }\n\n  // This is only used as a fallback, so we know the body sizes are never set here\n  const { method, url, status_code: statusCode } = sentryXhrData;\n\n  if (url === undefined) {\n    return null;\n  }\n\n  return {\n    type: 'resource.xhr',\n    name: url,\n    start: startTimestamp / 1000,\n    end: endTimestamp / 1000,\n    data: {\n      method,\n      statusCode,\n    },\n  };\n}\n\n/**\n * Returns a listener to be added to `addXhrInstrumentationHandler(listener)`.\n */\nexport function handleXhrSpanListener(replay: ReplayContainer): (handlerData: HandlerDataXhr) => void {\n  return (handlerData: HandlerDataXhr) => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleXhr(handlerData);\n\n    addNetworkBreadcrumb(replay, result);\n  };\n}\n", "import type { TextEncoderInternal } from '@sentry/types';\nimport { dropUndefinedKeys, logger, stringMatchesSomePattern } from '@sentry/utils';\n\nimport { NETWORK_BODY_MAX_SIZE, WINDOW } from '../../constants';\nimport { DEBUG_BUILD } from '../../debug-build';\nimport type {\n  NetworkBody,\n  NetworkMetaWarning,\n  NetworkRequestData,\n  ReplayNetworkRequestData,\n  ReplayNetworkRequestOrResponse,\n  ReplayPerformanceEntry,\n} from '../../types';\n\n/** Get the size of a body. */\nexport function getBodySize(\n  body: RequestInit['body'],\n  textEncoder: TextEncoder | TextEncoderInternal,\n): number | undefined {\n  if (!body) {\n    return undefined;\n  }\n\n  try {\n    if (typeof body === 'string') {\n      return textEncoder.encode(body).length;\n    }\n\n    if (body instanceof URLSearchParams) {\n      return textEncoder.encode(body.toString()).length;\n    }\n\n    if (body instanceof FormData) {\n      const formDataStr = _serializeFormData(body);\n      return textEncoder.encode(formDataStr).length;\n    }\n\n    if (body instanceof Blob) {\n      return body.size;\n    }\n\n    if (body instanceof ArrayBuffer) {\n      return body.byteLength;\n    }\n\n    // Currently unhandled types: ArrayBufferView, ReadableStream\n  } catch {\n    // just return undefined\n  }\n\n  return undefined;\n}\n\n/** Convert a Content-Length header to number/undefined.  */\nexport function parseContentLengthHeader(header: string | null | undefined): number | undefined {\n  if (!header) {\n    return undefined;\n  }\n\n  const size = parseInt(header, 10);\n  return isNaN(size) ? undefined : size;\n}\n\n/** Get the string representation of a body. */\nexport function getBodyString(body: unknown): [string | undefined, NetworkMetaWarning?] {\n  try {\n    if (typeof body === 'string') {\n      return [body];\n    }\n\n    if (body instanceof URLSearchParams) {\n      return [body.toString()];\n    }\n\n    if (body instanceof FormData) {\n      return [_serializeFormData(body)];\n    }\n\n    if (!body) {\n      return [undefined];\n    }\n  } catch {\n    DEBUG_BUILD && logger.warn('[Replay] Failed to serialize body', body);\n    return [undefined, 'BODY_PARSE_ERROR'];\n  }\n\n  DEBUG_BUILD && logger.info('[Replay] Skipping network body because of body type', body);\n\n  return [undefined, 'UNPARSEABLE_BODY_TYPE'];\n}\n\n/** Merge a warning into an existing network request/response. */\nexport function mergeWarning(\n  info: ReplayNetworkRequestOrResponse | undefined,\n  warning: NetworkMetaWarning,\n): ReplayNetworkRequestOrResponse {\n  if (!info) {\n    return {\n      headers: {},\n      size: undefined,\n      _meta: {\n        warnings: [warning],\n      },\n    };\n  }\n\n  const newMeta = { ...info._meta };\n  const existingWarnings = newMeta.warnings || [];\n  newMeta.warnings = [...existingWarnings, warning];\n\n  info._meta = newMeta;\n  return info;\n}\n\n/** Convert ReplayNetworkRequestData to a PerformanceEntry. */\nexport function makeNetworkReplayBreadcrumb(\n  type: string,\n  data: ReplayNetworkRequestData | null,\n): ReplayPerformanceEntry<NetworkRequestData> | null {\n  if (!data) {\n    return null;\n  }\n\n  const { startTimestamp, endTimestamp, url, method, statusCode, request, response } = data;\n\n  const result: ReplayPerformanceEntry<NetworkRequestData> = {\n    type,\n    start: startTimestamp / 1000,\n    end: endTimestamp / 1000,\n    name: url,\n    data: dropUndefinedKeys({\n      method,\n      statusCode,\n      request,\n      response,\n    }),\n  };\n\n  return result;\n}\n\n/** Build the request or response part of a replay network breadcrumb that was skipped. */\nexport function buildSkippedNetworkRequestOrResponse(bodySize: number | undefined): ReplayNetworkRequestOrResponse {\n  return {\n    headers: {},\n    size: bodySize,\n    _meta: {\n      warnings: ['URL_SKIPPED'],\n    },\n  };\n}\n\n/** Build the request or response part of a replay network breadcrumb. */\nexport function buildNetworkRequestOrResponse(\n  headers: Record<string, string>,\n  bodySize: number | undefined,\n  body: string | undefined,\n): ReplayNetworkRequestOrResponse | undefined {\n  if (!bodySize && Object.keys(headers).length === 0) {\n    return undefined;\n  }\n\n  if (!bodySize) {\n    return {\n      headers,\n    };\n  }\n\n  if (!body) {\n    return {\n      headers,\n      size: bodySize,\n    };\n  }\n\n  const info: ReplayNetworkRequestOrResponse = {\n    headers,\n    size: bodySize,\n  };\n\n  const { body: normalizedBody, warnings } = normalizeNetworkBody(body);\n  info.body = normalizedBody;\n  if (warnings && warnings.length > 0) {\n    info._meta = {\n      warnings,\n    };\n  }\n\n  return info;\n}\n\n/** Filter a set of headers */\nexport function getAllowedHeaders(headers: Record<string, string>, allowedHeaders: string[]): Record<string, string> {\n  return Object.keys(headers).reduce((filteredHeaders: Record<string, string>, key: string) => {\n    const normalizedKey = key.toLowerCase();\n    // Avoid putting empty strings into the headers\n    if (allowedHeaders.includes(normalizedKey) && headers[key]) {\n      filteredHeaders[normalizedKey] = headers[key];\n    }\n    return filteredHeaders;\n  }, {});\n}\n\nfunction _serializeFormData(formData: FormData): string {\n  // This is a bit simplified, but gives us a decent estimate\n  // This converts e.g. { name: 'Anne Smith', age: 13 } to 'name=Anne+Smith&age=13'\n  // @ts-expect-error passing FormData to URLSearchParams actually works\n  return new URLSearchParams(formData).toString();\n}\n\nfunction normalizeNetworkBody(body: string | undefined): {\n  body: NetworkBody | undefined;\n  warnings?: NetworkMetaWarning[];\n} {\n  if (!body || typeof body !== 'string') {\n    return {\n      body,\n    };\n  }\n\n  const exceedsSizeLimit = body.length > NETWORK_BODY_MAX_SIZE;\n  const isProbablyJson = _strIsProbablyJson(body);\n\n  if (exceedsSizeLimit) {\n    const truncatedBody = body.slice(0, NETWORK_BODY_MAX_SIZE);\n\n    if (isProbablyJson) {\n      return {\n        body: truncatedBody,\n        warnings: ['MAYBE_JSON_TRUNCATED'],\n      };\n    }\n\n    return {\n      body: `${truncatedBody}…`,\n      warnings: ['TEXT_TRUNCATED'],\n    };\n  }\n\n  if (isProbablyJson) {\n    try {\n      const jsonBody = JSON.parse(body);\n      return {\n        body: jsonBody,\n      };\n    } catch {\n      // fall back to just send the body as string\n    }\n  }\n\n  return {\n    body,\n  };\n}\n\nfunction _strIsProbablyJson(str: string): boolean {\n  const first = str[0];\n  const last = str[str.length - 1];\n\n  // Simple check: If this does not start & end with {} or [], it's not JSON\n  return (first === '[' && last === ']') || (first === '{' && last === '}');\n}\n\n/** Match an URL against a list of strings/Regex. */\nexport function urlMatches(url: string, urls: (string | RegExp)[]): boolean {\n  const fullUrl = getFullUrl(url);\n\n  return stringMatchesSomePattern(fullUrl, urls);\n}\n\n/** exported for tests */\nexport function getFullUrl(url: string, baseURI = WINDOW.document.baseURI): string {\n  // Short circuit for common cases:\n  if (url.startsWith('http://') || url.startsWith('https://') || url.startsWith(WINDOW.location.origin)) {\n    return url;\n  }\n  const fixedUrl = new URL(url, baseURI);\n\n  // If these do not match, we are not dealing with a relative URL, so just return it\n  if (fixedUrl.origin !== new URL(baseURI).origin) {\n    return url;\n  }\n\n  const fullUrl = fixedUrl.href;\n\n  // Remove trailing slashes, if they don't match the original URL\n  if (!url.endsWith('/') && fullUrl.endsWith('/')) {\n    return fullUrl.slice(0, -1);\n  }\n\n  return fullUrl;\n}\n", "import type { Breadcrumb, FetchBreadcrumbData, TextEncoderInternal } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../../debug-build';\nimport type {\n  FetchHint,\n  NetworkMetaWarning,\n  ReplayContainer,\n  ReplayNetworkOptions,\n  ReplayNetworkRequestData,\n  ReplayNetworkRequestOrResponse,\n} from '../../types';\nimport { addNetworkBreadcrumb } from './addNetworkBreadcrumb';\nimport {\n  buildNetworkRequestOrResponse,\n  buildSkippedNetworkRequestOrResponse,\n  getAllowedHeaders,\n  getBodySize,\n  getBodyString,\n  makeNetworkReplayBreadcrumb,\n  mergeWarning,\n  parseContentLengthHeader,\n  urlMatches,\n} from './networkUtils';\n\n/**\n * Capture a fetch breadcrumb to a replay.\n * This adds additional data (where approriate).\n */\nexport async function captureFetchBreadcrumbToReplay(\n  breadcrumb: Breadcrumb & { data: FetchBreadcrumbData },\n  hint: Partial<FetchHint>,\n  options: ReplayNetworkOptions & {\n    textEncoder: TextEncoderInternal;\n    replay: ReplayContainer;\n  },\n): Promise<void> {\n  try {\n    const data = await _prepareFetchData(breadcrumb, hint, options);\n\n    // Create a replay performance entry from this breadcrumb\n    const result = makeNetworkReplayBreadcrumb('resource.fetch', data);\n    addNetworkBreadcrumb(options.replay, result);\n  } catch (error) {\n    DEBUG_BUILD && logger.error('[Replay] Failed to capture fetch breadcrumb', error);\n  }\n}\n\n/**\n * Enrich a breadcrumb with additional data.\n * This has to be sync & mutate the given breadcrumb,\n * as the breadcrumb is afterwards consumed by other handlers.\n */\nexport function enrichFetchBreadcrumb(\n  breadcrumb: Breadcrumb & { data: FetchBreadcrumbData },\n  hint: Partial<FetchHint>,\n  options: { textEncoder: TextEncoderInternal },\n): void {\n  const { input, response } = hint;\n\n  const body = input ? _getFetchRequestArgBody(input) : undefined;\n  const reqSize = getBodySize(body, options.textEncoder);\n\n  const resSize = response ? parseContentLengthHeader(response.headers.get('content-length')) : undefined;\n\n  if (reqSize !== undefined) {\n    breadcrumb.data.request_body_size = reqSize;\n  }\n  if (resSize !== undefined) {\n    breadcrumb.data.response_body_size = resSize;\n  }\n}\n\nasync function _prepareFetchData(\n  breadcrumb: Breadcrumb & { data: FetchBreadcrumbData },\n  hint: Partial<FetchHint>,\n  options: ReplayNetworkOptions & {\n    textEncoder: TextEncoderInternal;\n  },\n): Promise<ReplayNetworkRequestData> {\n  const now = Date.now();\n  const { startTimestamp = now, endTimestamp = now } = hint;\n\n  const {\n    url,\n    method,\n    status_code: statusCode = 0,\n    request_body_size: requestBodySize,\n    response_body_size: responseBodySize,\n  } = breadcrumb.data;\n\n  const captureDetails =\n    urlMatches(url, options.networkDetailAllowUrls) && !urlMatches(url, options.networkDetailDenyUrls);\n\n  const request = captureDetails\n    ? _getRequestInfo(options, hint.input, requestBodySize)\n    : buildSkippedNetworkRequestOrResponse(requestBodySize);\n  const response = await _getResponseInfo(captureDetails, options, hint.response, responseBodySize);\n\n  return {\n    startTimestamp,\n    endTimestamp,\n    url,\n    method,\n    statusCode,\n    request,\n    response,\n  };\n}\n\nfunction _getRequestInfo(\n  { networkCaptureBodies, networkRequestHeaders }: ReplayNetworkOptions,\n  input: FetchHint['input'] | undefined,\n  requestBodySize?: number,\n): ReplayNetworkRequestOrResponse | undefined {\n  const headers = input ? getRequestHeaders(input, networkRequestHeaders) : {};\n\n  if (!networkCaptureBodies) {\n    return buildNetworkRequestOrResponse(headers, requestBodySize, undefined);\n  }\n\n  // We only want to transmit string or string-like bodies\n  const requestBody = _getFetchRequestArgBody(input);\n  const [bodyStr, warning] = getBodyString(requestBody);\n  const data = buildNetworkRequestOrResponse(headers, requestBodySize, bodyStr);\n\n  if (warning) {\n    return mergeWarning(data, warning);\n  }\n\n  return data;\n}\n\n/** Exported only for tests. */\nexport async function _getResponseInfo(\n  captureDetails: boolean,\n  {\n    networkCaptureBodies,\n    textEncoder,\n    networkResponseHeaders,\n  }: Pick<ReplayNetworkOptions, 'networkCaptureBodies' | 'networkResponseHeaders'> & {\n    textEncoder: TextEncoderInternal;\n  },\n  response: Response | undefined,\n  responseBodySize?: number,\n): Promise<ReplayNetworkRequestOrResponse | undefined> {\n  if (!captureDetails && responseBodySize !== undefined) {\n    return buildSkippedNetworkRequestOrResponse(responseBodySize);\n  }\n\n  const headers = response ? getAllHeaders(response.headers, networkResponseHeaders) : {};\n\n  if (!response || (!networkCaptureBodies && responseBodySize !== undefined)) {\n    return buildNetworkRequestOrResponse(headers, responseBodySize, undefined);\n  }\n\n  const [bodyText, warning] = await _parseFetchResponseBody(response);\n  const result = getResponseData(bodyText, {\n    networkCaptureBodies,\n    textEncoder,\n    responseBodySize,\n    captureDetails,\n    headers,\n  });\n\n  if (warning) {\n    return mergeWarning(result, warning);\n  }\n\n  return result;\n}\n\nfunction getResponseData(\n  bodyText: string | undefined,\n  {\n    networkCaptureBodies,\n    textEncoder,\n    responseBodySize,\n    captureDetails,\n    headers,\n  }: {\n    captureDetails: boolean;\n    networkCaptureBodies: boolean;\n    responseBodySize: number | undefined;\n    headers: Record<string, string>;\n    textEncoder: TextEncoderInternal;\n  },\n): ReplayNetworkRequestOrResponse | undefined {\n  try {\n    const size =\n      bodyText && bodyText.length && responseBodySize === undefined\n        ? getBodySize(bodyText, textEncoder)\n        : responseBodySize;\n\n    if (!captureDetails) {\n      return buildSkippedNetworkRequestOrResponse(size);\n    }\n\n    if (networkCaptureBodies) {\n      return buildNetworkRequestOrResponse(headers, size, bodyText);\n    }\n\n    return buildNetworkRequestOrResponse(headers, size, undefined);\n  } catch (error) {\n    DEBUG_BUILD && logger.warn('[Replay] Failed to serialize response body', error);\n    // fallback\n    return buildNetworkRequestOrResponse(headers, responseBodySize, undefined);\n  }\n}\n\nasync function _parseFetchResponseBody(response: Response): Promise<[string | undefined, NetworkMetaWarning?]> {\n  const res = _tryCloneResponse(response);\n\n  if (!res) {\n    return [undefined, 'BODY_PARSE_ERROR'];\n  }\n\n  try {\n    const text = await _tryGetResponseText(res);\n    return [text];\n  } catch (error) {\n    DEBUG_BUILD && logger.warn('[Replay] Failed to get text body from response', error);\n    return [undefined, 'BODY_PARSE_ERROR'];\n  }\n}\n\nfunction _getFetchRequestArgBody(fetchArgs: unknown[] = []): RequestInit['body'] | undefined {\n  // We only support getting the body from the fetch options\n  if (fetchArgs.length !== 2 || typeof fetchArgs[1] !== 'object') {\n    return undefined;\n  }\n\n  return (fetchArgs[1] as RequestInit).body;\n}\n\nfunction getAllHeaders(headers: Headers, allowedHeaders: string[]): Record<string, string> {\n  const allHeaders: Record<string, string> = {};\n\n  allowedHeaders.forEach(header => {\n    if (headers.get(header)) {\n      allHeaders[header] = headers.get(header) as string;\n    }\n  });\n\n  return allHeaders;\n}\n\nfunction getRequestHeaders(fetchArgs: unknown[], allowedHeaders: string[]): Record<string, string> {\n  if (fetchArgs.length === 1 && typeof fetchArgs[0] !== 'string') {\n    return getHeadersFromOptions(fetchArgs[0] as Request | RequestInit, allowedHeaders);\n  }\n\n  if (fetchArgs.length === 2) {\n    return getHeadersFromOptions(fetchArgs[1] as Request | RequestInit, allowedHeaders);\n  }\n\n  return {};\n}\n\nfunction getHeadersFromOptions(\n  input: Request | RequestInit | undefined,\n  allowedHeaders: string[],\n): Record<string, string> {\n  if (!input) {\n    return {};\n  }\n\n  const headers = input.headers;\n\n  if (!headers) {\n    return {};\n  }\n\n  if (headers instanceof Headers) {\n    return getAllHeaders(headers, allowedHeaders);\n  }\n\n  // We do not support this, as it is not really documented (anymore?)\n  if (Array.isArray(headers)) {\n    return {};\n  }\n\n  return getAllowedHeaders(headers, allowedHeaders);\n}\n\nfunction _tryCloneResponse(response: Response): Response | void {\n  try {\n    // We have to clone this, as the body can only be read once\n    return response.clone();\n  } catch (error) {\n    // this can throw if the response was already consumed before\n    DEBUG_BUILD && logger.warn('[Replay] Failed to clone response body', error);\n  }\n}\n\n/**\n * Get the response body of a fetch request, or timeout after 500ms.\n * Fetch can return a streaming body, that may not resolve (or not for a long time).\n * If that happens, we rather abort after a short time than keep waiting for this.\n */\nfunction _tryGetResponseText(response: Response): Promise<string | undefined> {\n  return new Promise((resolve, reject) => {\n    const timeout = setTimeout(() => reject(new Error('Timeout while trying to read response body')), 500);\n\n    _getResponseText(response)\n      .then(\n        txt => resolve(txt),\n        reason => reject(reason),\n      )\n      .finally(() => clearTimeout(timeout));\n  });\n\n  return _getResponseText(response);\n}\n\nasync function _getResponseText(response: Response): Promise<string> {\n  // Force this to be a promise, just to be safe\n  // eslint-disable-next-line no-return-await\n  return await response.text();\n}\n", "import type { Breadcrumb, TextEncoderInternal, XhrBreadcrumbData } from '@sentry/types';\nimport { SENTRY_XHR_DATA_KEY, logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../../debug-build';\nimport type {\n  NetworkMetaWarning,\n  ReplayContainer,\n  ReplayNetworkOptions,\n  ReplayNetworkRequestData,\n  XhrHint,\n} from '../../types';\nimport { addNetworkBreadcrumb } from './addNetworkBreadcrumb';\nimport {\n  buildNetworkRequestOrResponse,\n  buildSkippedNetworkRequestOrResponse,\n  getAllowedHeaders,\n  getBodySize,\n  getBodyString,\n  makeNetworkReplayBreadcrumb,\n  mergeWarning,\n  parseContentLengthHeader,\n  urlMatches,\n} from './networkUtils';\n\n/**\n * Capture an XHR breadcrumb to a replay.\n * This adds additional data (where approriate).\n */\nexport async function captureXhrBreadcrumbToReplay(\n  breadcrumb: Breadcrumb & { data: XhrBreadcrumbData },\n  hint: Partial<XhrHint>,\n  options: ReplayNetworkOptions & { replay: ReplayContainer },\n): Promise<void> {\n  try {\n    const data = _prepareXhrData(breadcrumb, hint, options);\n\n    // Create a replay performance entry from this breadcrumb\n    const result = makeNetworkReplayBreadcrumb('resource.xhr', data);\n    addNetworkBreadcrumb(options.replay, result);\n  } catch (error) {\n    DEBUG_BUILD && logger.error('[Replay] Failed to capture xhr breadcrumb', error);\n  }\n}\n\n/**\n * Enrich a breadcrumb with additional data.\n * This has to be sync & mutate the given breadcrumb,\n * as the breadcrumb is afterwards consumed by other handlers.\n */\nexport function enrichXhrBreadcrumb(\n  breadcrumb: Breadcrumb & { data: XhrBreadcrumbData },\n  hint: Partial<XhrHint>,\n  options: { textEncoder: TextEncoderInternal },\n): void {\n  const { xhr, input } = hint;\n\n  if (!xhr) {\n    return;\n  }\n\n  const reqSize = getBodySize(input, options.textEncoder);\n  const resSize = xhr.getResponseHeader('content-length')\n    ? parseContentLengthHeader(xhr.getResponseHeader('content-length'))\n    : _getBodySize(xhr.response, xhr.responseType, options.textEncoder);\n\n  if (reqSize !== undefined) {\n    breadcrumb.data.request_body_size = reqSize;\n  }\n  if (resSize !== undefined) {\n    breadcrumb.data.response_body_size = resSize;\n  }\n}\n\nfunction _prepareXhrData(\n  breadcrumb: Breadcrumb & { data: XhrBreadcrumbData },\n  hint: Partial<XhrHint>,\n  options: ReplayNetworkOptions,\n): ReplayNetworkRequestData | null {\n  const now = Date.now();\n  const { startTimestamp = now, endTimestamp = now, input, xhr } = hint;\n\n  const {\n    url,\n    method,\n    status_code: statusCode = 0,\n    request_body_size: requestBodySize,\n    response_body_size: responseBodySize,\n  } = breadcrumb.data;\n\n  if (!url) {\n    return null;\n  }\n\n  if (!xhr || !urlMatches(url, options.networkDetailAllowUrls) || urlMatches(url, options.networkDetailDenyUrls)) {\n    const request = buildSkippedNetworkRequestOrResponse(requestBodySize);\n    const response = buildSkippedNetworkRequestOrResponse(responseBodySize);\n    return {\n      startTimestamp,\n      endTimestamp,\n      url,\n      method,\n      statusCode,\n      request,\n      response,\n    };\n  }\n\n  const xhrInfo = xhr[SENTRY_XHR_DATA_KEY];\n  const networkRequestHeaders = xhrInfo\n    ? getAllowedHeaders(xhrInfo.request_headers, options.networkRequestHeaders)\n    : {};\n  const networkResponseHeaders = getAllowedHeaders(getResponseHeaders(xhr), options.networkResponseHeaders);\n\n  const [requestBody, requestWarning] = options.networkCaptureBodies ? getBodyString(input) : [undefined];\n  const [responseBody, responseWarning] = options.networkCaptureBodies ? _getXhrResponseBody(xhr) : [undefined];\n\n  const request = buildNetworkRequestOrResponse(networkRequestHeaders, requestBodySize, requestBody);\n  const response = buildNetworkRequestOrResponse(networkResponseHeaders, responseBodySize, responseBody);\n\n  return {\n    startTimestamp,\n    endTimestamp,\n    url,\n    method,\n    statusCode,\n    request: requestWarning ? mergeWarning(request, requestWarning) : request,\n    response: responseWarning ? mergeWarning(response, responseWarning) : response,\n  };\n}\n\nfunction getResponseHeaders(xhr: XMLHttpRequest): Record<string, string> {\n  const headers = xhr.getAllResponseHeaders();\n\n  if (!headers) {\n    return {};\n  }\n\n  return headers.split('\\r\\n').reduce((acc: Record<string, string>, line: string) => {\n    const [key, value] = line.split(': ');\n    acc[key.toLowerCase()] = value;\n    return acc;\n  }, {});\n}\n\nfunction _getXhrResponseBody(xhr: XMLHttpRequest): [string | undefined, NetworkMetaWarning?] {\n  // We collect errors that happen, but only log them if we can't get any response body\n  const errors: unknown[] = [];\n\n  try {\n    return [xhr.responseText];\n  } catch (e) {\n    errors.push(e);\n  }\n\n  // Try to manually parse the response body, if responseText fails\n  try {\n    return _parseXhrResponse(xhr.response, xhr.responseType);\n  } catch (e) {\n    errors.push(e);\n  }\n\n  DEBUG_BUILD && logger.warn('[Replay] Failed to get xhr response body', ...errors);\n\n  return [undefined];\n}\n\n/**\n * Get the string representation of the XHR response.\n * Based on MDN, these are the possible types of the response:\n * string\n * ArrayBuffer\n * Blob\n * Document\n * POJO\n *\n * Exported only for tests.\n */\nexport function _parseXhrResponse(\n  body: XMLHttpRequest['response'],\n  responseType: XMLHttpRequest['responseType'],\n): [string | undefined, NetworkMetaWarning?] {\n  try {\n    if (typeof body === 'string') {\n      return [body];\n    }\n\n    if (body instanceof Document) {\n      return [body.body.outerHTML];\n    }\n\n    if (responseType === 'json' && body && typeof body === 'object') {\n      return [JSON.stringify(body)];\n    }\n\n    if (!body) {\n      return [undefined];\n    }\n  } catch {\n    DEBUG_BUILD && logger.warn('[Replay] Failed to serialize body', body);\n    return [undefined, 'BODY_PARSE_ERROR'];\n  }\n\n  DEBUG_BUILD && logger.info('[Replay] Skipping network body because of body type', body);\n\n  return [undefined, 'UNPARSEABLE_BODY_TYPE'];\n}\n\nfunction _getBodySize(\n  body: XMLHttpRequest['response'],\n  responseType: XMLHttpRequest['responseType'],\n  textEncoder: TextEncoder | TextEncoderInternal,\n): number | undefined {\n  try {\n    const bodyStr = responseType === 'json' && body && typeof body === 'object' ? JSON.stringify(body) : body;\n    return getBodySize(bodyStr, textEncoder);\n  } catch {\n    return undefined;\n  }\n}\n", "import { getClient } from '@sentry/core';\nimport type {\n  Breadcrumb,\n  BreadcrumbHint,\n  FetchBreadcrumbData,\n  TextEncoderInternal,\n  XhrBreadcrumbData,\n} from '@sentry/types';\nimport { addFetchInstrumentationHandler, addXhrInstrumentationHandler, logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { FetchHint, ReplayContainer, ReplayNetworkOptions, XhrHint } from '../types';\nimport { handleFetchSpanListener } from './handleFetch';\nimport { handleXhrSpanListener } from './handleXhr';\nimport { captureFetchBreadcrumbToReplay, enrichFetchBreadcrumb } from './util/fetchUtils';\nimport { captureXhrBreadcrumbToReplay, enrichXhrBreadcrumb } from './util/xhrUtils';\n\ninterface ExtendedNetworkBreadcrumbsOptions extends ReplayNetworkOptions {\n  replay: ReplayContainer;\n  textEncoder: TextEncoderInternal;\n}\n\n/**\n * This method does two things:\n * - It enriches the regular XHR/fetch breadcrumbs with request/response size data\n * - It captures the XHR/fetch breadcrumbs to the replay\n *   (enriching it with further data that is _not_ added to the regular breadcrumbs)\n */\nexport function handleNetworkBreadcrumbs(replay: ReplayContainer): void {\n  const client = getClient();\n\n  try {\n    const textEncoder = new TextEncoder();\n\n    const {\n      networkDetailAllowUrls,\n      networkDetailDenyUrls,\n      networkCaptureBodies,\n      networkRequestHeaders,\n      networkResponseHeaders,\n    } = replay.getOptions();\n\n    const options: ExtendedNetworkBreadcrumbsOptions = {\n      replay,\n      textEncoder,\n      networkDetailAllowUrls,\n      networkDetailDenyUrls,\n      networkCaptureBodies,\n      networkRequestHeaders,\n      networkResponseHeaders,\n    };\n\n    if (client && client.on) {\n      client.on('beforeAddBreadcrumb', (breadcrumb, hint) => beforeAddNetworkBreadcrumb(options, breadcrumb, hint));\n    } else {\n      // Fallback behavior\n      addFetchInstrumentationHandler(handleFetchSpanListener(replay));\n      addXhrInstrumentationHandler(handleXhrSpanListener(replay));\n    }\n  } catch {\n    // Do nothing\n  }\n}\n\n/** just exported for tests */\nexport function beforeAddNetworkBreadcrumb(\n  options: ExtendedNetworkBreadcrumbsOptions,\n  breadcrumb: Breadcrumb,\n  hint?: BreadcrumbHint,\n): void {\n  if (!breadcrumb.data) {\n    return;\n  }\n\n  try {\n    if (_isXhrBreadcrumb(breadcrumb) && _isXhrHint(hint)) {\n      // This has to be sync, as we need to ensure the breadcrumb is enriched in the same tick\n      // Because the hook runs synchronously, and the breadcrumb is afterwards passed on\n      // So any async mutations to it will not be reflected in the final breadcrumb\n      enrichXhrBreadcrumb(breadcrumb, hint, options);\n\n      // This call should not reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      captureXhrBreadcrumbToReplay(breadcrumb, hint, options);\n    }\n\n    if (_isFetchBreadcrumb(breadcrumb) && _isFetchHint(hint)) {\n      // This has to be sync, as we need to ensure the breadcrumb is enriched in the same tick\n      // Because the hook runs synchronously, and the breadcrumb is afterwards passed on\n      // So any async mutations to it will not be reflected in the final breadcrumb\n      enrichFetchBreadcrumb(breadcrumb, hint, options);\n\n      // This call should not reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      captureFetchBreadcrumbToReplay(breadcrumb, hint, options);\n    }\n  } catch (e) {\n    DEBUG_BUILD && logger.warn('Error when enriching network breadcrumb');\n  }\n}\n\nfunction _isXhrBreadcrumb(breadcrumb: Breadcrumb): breadcrumb is Breadcrumb & { data: XhrBreadcrumbData } {\n  return breadcrumb.category === 'xhr';\n}\n\nfunction _isFetchBreadcrumb(breadcrumb: Breadcrumb): breadcrumb is Breadcrumb & { data: FetchBreadcrumbData } {\n  return breadcrumb.category === 'fetch';\n}\n\nfunction _isXhrHint(hint?: BreadcrumbHint): hint is XhrHint {\n  return hint && hint.xhr;\n}\n\nfunction _isFetchHint(hint?: BreadcrumbHint): hint is FetchHint {\n  return hint && hint.response;\n}\n", "import type { Breadcrumb, Scope } from '@sentry/types';\nimport { normalize } from '@sentry/utils';\n\nimport { CONSOLE_ARG_MAX_SIZE } from '../constants';\nimport type { ReplayContainer } from '../types';\nimport type { ReplayFrame } from '../types/replayFrame';\nimport { createBreadcrumb } from '../util/createBreadcrumb';\nimport { addBreadcrumbEvent } from './util/addBreadcrumbEvent';\n\nlet _LAST_BREADCRUMB: null | Breadcrumb = null;\n\ntype BreadcrumbWithCategory = Required<Pick<Breadcrumb, 'category'>>;\n\nfunction isBreadcrumbWithCategory(breadcrumb: Breadcrumb): breadcrumb is BreadcrumbWithCategory {\n  return !!breadcrumb.category;\n}\n\nexport const handleScopeListener: (replay: ReplayContainer) => (scope: Scope) => void =\n  (replay: ReplayContainer) =>\n  (scope: Scope): void => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleScope(scope);\n\n    if (!result) {\n      return;\n    }\n\n    addBreadcrumbEvent(replay, result);\n  };\n\n/**\n * An event handler to handle scope changes.\n */\nexport function handleScope(scope: Scope): Breadcrumb | null {\n  // TODO (v8): Remove this guard. This was put in place because we introduced\n  // Scope.getLastBreadcrumb mid-v7 which caused incompatibilities with older SDKs.\n  // For now, we'll just return null if the method doesn't exist but we should eventually\n  // get rid of this guard.\n  const newBreadcrumb = scope.getLastBreadcrumb && scope.getLastBreadcrumb();\n\n  // Listener can be called when breadcrumbs have not changed, so we store the\n  // reference to the last crumb and only return a crumb if it has changed\n  if (_LAST_BREADCRUMB === newBreadcrumb || !newBreadcrumb) {\n    return null;\n  }\n\n  _LAST_BREADCRUMB = newBreadcrumb;\n\n  if (\n    !isBreadcrumbWithCategory(newBreadcrumb) ||\n    ['fetch', 'xhr', 'sentry.event', 'sentry.transaction'].includes(newBreadcrumb.category) ||\n    newBreadcrumb.category.startsWith('ui.')\n  ) {\n    return null;\n  }\n\n  if (newBreadcrumb.category === 'console') {\n    return normalizeConsoleBreadcrumb(newBreadcrumb);\n  }\n\n  return createBreadcrumb(newBreadcrumb);\n}\n\n/** exported for tests only */\nexport function normalizeConsoleBreadcrumb(\n  breadcrumb: Omit<Breadcrumb, 'category'> & BreadcrumbWithCategory,\n): ReplayFrame {\n  const args = breadcrumb.data && breadcrumb.data.arguments;\n\n  if (!Array.isArray(args) || args.length === 0) {\n    return createBreadcrumb(breadcrumb);\n  }\n\n  let isTruncated = false;\n\n  // Avoid giant args captures\n  const normalizedArgs = args.map(arg => {\n    if (!arg) {\n      return arg;\n    }\n    if (typeof arg === 'string') {\n      if (arg.length > CONSOLE_ARG_MAX_SIZE) {\n        isTruncated = true;\n        return `${arg.slice(0, CONSOLE_ARG_MAX_SIZE)}…`;\n      }\n\n      return arg;\n    }\n    if (typeof arg === 'object') {\n      try {\n        const normalizedArg = normalize(arg, 7);\n        const stringified = JSON.stringify(normalizedArg);\n        if (stringified.length > CONSOLE_ARG_MAX_SIZE) {\n          isTruncated = true;\n          // We use the pretty printed JSON string here as a base\n          return `${JSON.stringify(normalizedArg, null, 2).slice(0, CONSOLE_ARG_MAX_SIZE)}…`;\n        }\n        return normalizedArg;\n      } catch {\n        // fall back to default\n      }\n    }\n\n    return arg;\n  });\n\n  return createBreadcrumb({\n    ...breadcrumb,\n    data: {\n      ...breadcrumb.data,\n      arguments: normalizedArgs,\n      ...(isTruncated ? { _meta: { warnings: ['CONSOLE_ARG_TRUNCATED'] } } : {}),\n    },\n  });\n}\n", "import type { BaseClient } from '@sentry/core';\nimport { getCurrentScope } from '@sentry/core';\nimport { addEventProcessor, getClient } from '@sentry/core';\nimport type { Client, DynamicSamplingContext } from '@sentry/types';\nimport { addClickKeypressInstrumentationHandler, addHistoryInstrumentationHandler } from '@sentry/utils';\n\nimport { handleAfterSendEvent } from '../coreHandlers/handleAfterSendEvent';\nimport { handleBeforeSendEvent } from '../coreHandlers/handleBeforeSendEvent';\nimport { handleDomListener } from '../coreHandlers/handleDom';\nimport { handleGlobalEventListener } from '../coreHandlers/handleGlobalEvent';\nimport { handleHistorySpanListener } from '../coreHandlers/handleHistory';\nimport { handleNetworkBreadcrumbs } from '../coreHandlers/handleNetworkBreadcrumbs';\nimport { handleScopeListener } from '../coreHandlers/handleScope';\nimport type { ReplayContainer } from '../types';\n\n/**\n * Add global listeners that cannot be removed.\n */\nexport function addGlobalListeners(replay: ReplayContainer): void {\n  // Listeners from core SDK //\n  const scope = getCurrentScope();\n  const client = getClient();\n\n  scope.addScopeListener(handleScopeListener(replay));\n  addClickKeypressInstrumentationHandler(handleDomListener(replay));\n  addHistoryInstrumentationHandler(handleHistorySpanListener(replay));\n  handleNetworkBreadcrumbs(replay);\n\n  // Tag all (non replay) events that get sent to Sentry with the current\n  // replay ID so that we can reference them later in the UI\n  const eventProcessor = handleGlobalEventListener(replay, !hasHooks(client));\n  if (client && client.addEventProcessor) {\n    client.addEventProcessor(eventProcessor);\n  } else {\n    addEventProcessor(eventProcessor);\n  }\n\n  // If a custom client has no hooks yet, we continue to use the \"old\" implementation\n  if (hasHooks(client)) {\n    client.on('beforeSendEvent', handleBeforeSendEvent(replay));\n    client.on('afterSendEvent', handleAfterSendEvent(replay));\n    client.on('createDsc', (dsc: DynamicSamplingContext) => {\n      const replayId = replay.getSessionId();\n      // We do not want to set the DSC when in buffer mode, as that means the replay has not been sent (yet)\n      if (replayId && replay.isEnabled() && replay.recordingMode === 'session') {\n        // Ensure to check that the session is still active - it could have expired in the meanwhile\n        const isSessionActive = replay.checkAndHandleExpiredSession();\n        if (isSessionActive) {\n          dsc.replay_id = replayId;\n        }\n      }\n    });\n\n    client.on('startTransaction', transaction => {\n      replay.lastTransaction = transaction;\n    });\n\n    // We may be missing the initial startTransaction due to timing issues,\n    // so we capture it on finish again.\n    client.on('finishTransaction', transaction => {\n      replay.lastTransaction = transaction;\n    });\n\n    // We want to flush replay\n    client.on('beforeSendFeedback', (feedbackEvent, options) => {\n      const replayId = replay.getSessionId();\n      if (options && options.includeReplay && replay.isEnabled() && replayId) {\n        // This should never reject\n        if (feedbackEvent.contexts && feedbackEvent.contexts.feedback) {\n          feedbackEvent.contexts.feedback.replay_id = replayId;\n        }\n      }\n    });\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction hasHooks(client: Client | undefined): client is BaseClient<any> {\n  return !!(client && client.on);\n}\n", "import { WINDOW } from '../constants';\nimport type { AddEventResult, MemoryData, ReplayContainer, ReplayPerformanceEntry } from '../types';\nimport { createPerformanceSpans } from './createPerformanceSpans';\n\ntype ReplayMemoryEntry = ReplayPerformanceEntry<MemoryData> & { data: { memory: MemoryInfo } };\n\ninterface MemoryInfo {\n  jsHeapSizeLimit: number;\n  totalJSHeapSize: number;\n  usedJSHeapSize: number;\n}\n\n/**\n * Create a \"span\" for the total amount of memory being used by JS objects\n * (including v8 internal objects).\n */\nexport async function addMemoryEntry(replay: ReplayContainer): Promise<Array<AddEventResult | null>> {\n  // window.performance.memory is a non-standard API and doesn't work on all browsers, so we try-catch this\n  try {\n    return Promise.all(\n      createPerformanceSpans(replay, [\n        // @ts-expect-error memory doesn't exist on type Performance as the API is non-standard (we check that it exists above)\n        createMemoryEntry(WINDOW.performance.memory),\n      ]),\n    );\n  } catch (error) {\n    // Do nothing\n    return [];\n  }\n}\n\nfunction createMemoryEntry(memoryEntry: MemoryInfo): ReplayMemoryEntry {\n  const { jsHeapSizeLimit, totalJSHeapSize, usedJSHeapSize } = memoryEntry;\n  // we don't want to use `getAbsoluteTime` because it adds the event time to the\n  // time origin, so we get the current timestamp instead\n  const time = Date.now() / 1000;\n  return {\n    type: 'memory',\n    name: 'memory',\n    start: time,\n    end: time,\n    data: {\n      memory: {\n        jsHeapSizeLimit,\n        totalJSHeapSize,\n        usedJSHeapSize,\n      },\n    },\n  };\n}\n", "type DebouncedCallback = {\n  (): void | unknown;\n  flush: () => void | unknown;\n  cancel: () => void;\n};\ntype CallbackFunction = () => unknown;\ntype DebounceOptions = { maxWait?: number };\n\n/**\n * Heavily simplified debounce function based on lodash.debounce.\n *\n * This function takes a callback function (@param fun) and delays its invocation\n * by @param wait milliseconds. Optionally, a maxWait can be specified in @param options,\n * which ensures that the callback is invoked at least once after the specified max. wait time.\n *\n * @param func the function whose invocation is to be debounced\n * @param wait the minimum time until the function is invoked after it was called once\n * @param options the options object, which can contain the `maxWait` property\n *\n * @returns the debounced version of the function, which needs to be called at least once to start the\n *          debouncing process. Subsequent calls will reset the debouncing timer and, in case @paramfunc\n *          was already invoked in the meantime, return @param func's return value.\n *          The debounced function has two additional properties:\n *          - `flush`: Invokes the debounced function immediately and returns its return value\n *          - `cancel`: Cancels the debouncing process and resets the debouncing timer\n */\nexport function debounce(func: CallbackFunction, wait: number, options?: DebounceOptions): DebouncedCallback {\n  let callbackReturnValue: unknown;\n\n  let timerId: ReturnType<typeof setTimeout> | undefined;\n  let maxTimerId: ReturnType<typeof setTimeout> | undefined;\n\n  const maxWait = options && options.maxWait ? Math.max(options.maxWait, wait) : 0;\n\n  function invokeFunc(): unknown {\n    cancelTimers();\n    callbackReturnValue = func();\n    return callbackReturnValue;\n  }\n\n  function cancelTimers(): void {\n    timerId !== undefined && clearTimeout(timerId);\n    maxTimerId !== undefined && clearTimeout(maxTimerId);\n    timerId = maxTimerId = undefined;\n  }\n\n  function flush(): unknown {\n    if (timerId !== undefined || maxTimerId !== undefined) {\n      return invokeFunc();\n    }\n    return callbackReturnValue;\n  }\n\n  function debounced(): unknown {\n    if (timerId) {\n      clearTimeout(timerId);\n    }\n    timerId = setTimeout(invokeFunc, wait);\n\n    if (maxWait && maxTimerId === undefined) {\n      maxTimerId = setTimeout(invokeFunc, maxWait);\n    }\n\n    return callbackReturnValue;\n  }\n\n  debounced.cancel = cancelTimers;\n  debounced.flush = flush;\n  return debounced;\n}\n", "import { EventType } from '@sentry-internal/rrweb';\nimport { logger } from '@sentry/utils';\n\nimport { updateClickDetectorForRecordingEvent } from '../coreHandlers/handleClick';\nimport { DEBUG_BUILD } from '../debug-build';\nimport { saveSession } from '../session/saveSession';\nimport type { RecordingEvent, ReplayContainer, ReplayOptionFrameEvent } from '../types';\nimport { addEventSync } from './addEvent';\nimport { logInfo } from './log';\n\ntype RecordingEmitCallback = (event: RecordingEvent, isCheckout?: boolean) => void;\n\n/**\n * Handler for recording events.\n *\n * Adds to event buffer, and has varying flushing behaviors if the event was a checkout.\n */\nexport function getHandleRecordingEmit(replay: ReplayContainer): RecordingEmitCallback {\n  let hadFirstEvent = false;\n\n  return (event: RecordingEvent, _isCheckout?: boolean) => {\n    // If this is false, it means session is expired, create and a new session and wait for checkout\n    if (!replay.checkAndHandleExpiredSession()) {\n      DEBUG_BUILD && logger.warn('[Replay] Received replay event after session expired.');\n\n      return;\n    }\n\n    // `_isCheckout` is only set when the checkout is due to `checkoutEveryNms`\n    // We also want to treat the first event as a checkout, so we handle this specifically here\n    const isCheckout = _isCheckout || !hadFirstEvent;\n    hadFirstEvent = true;\n\n    if (replay.clickDetector) {\n      updateClickDetectorForRecordingEvent(replay.clickDetector, event);\n    }\n\n    // The handler returns `true` if we do not want to trigger debounced flush, `false` if we want to debounce flush.\n    replay.addUpdate(() => {\n      // The session is always started immediately on pageload/init, but for\n      // error-only replays, it should reflect the most recent checkout\n      // when an error occurs. Clear any state that happens before this current\n      // checkout. This needs to happen before `addEvent()` which updates state\n      // dependent on this reset.\n      if (replay.recordingMode === 'buffer' && isCheckout) {\n        replay.setInitialState();\n      }\n\n      // If the event is not added (e.g. due to being paused, disabled, or out of the max replay duration),\n      // Skip all further steps\n      if (!addEventSync(replay, event, isCheckout)) {\n        // Return true to skip scheduling a debounced flush\n        return true;\n      }\n\n      // Different behavior for full snapshots (type=2), ignore other event types\n      // See https://github.com/rrweb-io/rrweb/blob/d8f9290ca496712aa1e7d472549480c4e7876594/packages/rrweb/src/types.ts#L16\n      if (!isCheckout) {\n        return false;\n      }\n\n      // Additionally, create a meta event that will capture certain SDK settings.\n      // In order to handle buffer mode, this needs to either be done when we\n      // receive checkout events or at flush time.\n      //\n      // `isCheckout` is always true, but want to be explicit that it should\n      // only be added for checkouts\n      addSettingsEvent(replay, isCheckout);\n\n      // If there is a previousSessionId after a full snapshot occurs, then\n      // the replay session was started due to session expiration. The new session\n      // is started before triggering a new checkout and contains the id\n      // of the previous session. Do not immediately flush in this case\n      // to avoid capturing only the checkout and instead the replay will\n      // be captured if they perform any follow-up actions.\n      if (replay.session && replay.session.previousSessionId) {\n        return true;\n      }\n\n      // When in buffer mode, make sure we adjust the session started date to the current earliest event of the buffer\n      // this should usually be the timestamp of the checkout event, but to be safe...\n      if (replay.recordingMode === 'buffer' && replay.session && replay.eventBuffer) {\n        const earliestEvent = replay.eventBuffer.getEarliestTimestamp();\n        if (earliestEvent) {\n          logInfo(\n            `[Replay] Updating session start time to earliest event in buffer to ${new Date(earliestEvent)}`,\n            replay.getOptions()._experiments.traceInternals,\n          );\n\n          replay.session.started = earliestEvent;\n\n          if (replay.getOptions().stickySession) {\n            saveSession(replay.session);\n          }\n        }\n      }\n\n      if (replay.recordingMode === 'session') {\n        // If the full snapshot is due to an initial load, we will not have\n        // a previous session ID. In this case, we want to buffer events\n        // for a set amount of time before flushing. This can help avoid\n        // capturing replays of users that immediately close the window.\n\n        // This should never reject\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        void replay.flush();\n      }\n\n      return true;\n    });\n  };\n}\n\n/**\n * Exported for tests\n */\nexport function createOptionsEvent(replay: ReplayContainer): ReplayOptionFrameEvent {\n  const options = replay.getOptions();\n  return {\n    type: EventType.Custom,\n    timestamp: Date.now(),\n    data: {\n      tag: 'options',\n      payload: {\n        shouldRecordCanvas: replay.isRecordingCanvas(),\n        sessionSampleRate: options.sessionSampleRate,\n        errorSampleRate: options.errorSampleRate,\n        useCompressionOption: options.useCompression,\n        blockAllMedia: options.blockAllMedia,\n        maskAllText: options.maskAllText,\n        maskAllInputs: options.maskAllInputs,\n        useCompression: replay.eventBuffer ? replay.eventBuffer.type === 'worker' : false,\n        networkDetailHasUrls: options.networkDetailAllowUrls.length > 0,\n        networkCaptureBodies: options.networkCaptureBodies,\n        networkRequestHasHeaders: options.networkRequestHeaders.length > 0,\n        networkResponseHasHeaders: options.networkResponseHeaders.length > 0,\n      },\n    },\n  };\n}\n\n/**\n * Add a \"meta\" event that contains a simplified view on current configuration\n * options. This should only be included on the first segment of a recording.\n */\nfunction addSettingsEvent(replay: ReplayContainer, isCheckout?: boolean): void {\n  // Only need to add this event when sending the first segment\n  if (!isCheckout || !replay.session || replay.session.segmentId !== 0) {\n    return;\n  }\n\n  addEventSync(replay, createOptionsEvent(replay), false);\n}\n", "import type { DsnComponents, ReplayEnvelope, ReplayEvent, ReplayRecordingData } from '@sentry/types';\nimport { createEnvelope, createEventEnvelopeHeaders, getSdkMetadataForEnvelopeHeader } from '@sentry/utils';\n\n/**\n * Create a replay envelope ready to be sent.\n * This includes both the replay event, as well as the recording data.\n */\nexport function createReplayEnvelope(\n  replayEvent: ReplayEvent,\n  recordingData: ReplayRecordingData,\n  dsn: DsnComponents,\n  tunnel?: string,\n): ReplayEnvelope {\n  return createEnvelope<ReplayEnvelope>(\n    createEventEnvelopeHeaders(replayEvent, getSdkMetadataForEnvelopeHeader(replayEvent), tunnel, dsn),\n    [\n      [{ type: 'replay_event' }, replayEvent],\n      [\n        {\n          type: 'replay_recording',\n          // If string then we need to encode to UTF8, otherwise will have\n          // wrong size. TextEncoder has similar browser support to\n          // MutationObserver, although it does not accept IE11.\n          length:\n            typeof recordingData === 'string' ? new TextEncoder().encode(recordingData).length : recordingData.length,\n        },\n        recordingData,\n      ],\n    ],\n  );\n}\n", "import type { ReplayRecordingData } from '@sentry/types';\n\n/**\n * Prepare the recording data ready to be sent.\n */\nexport function prepareRecordingData({\n  recordingData,\n  headers,\n}: {\n  recordingData: ReplayRecordingData;\n  headers: Record<string, unknown>;\n}): ReplayRecordingData {\n  let payloadWithSequence;\n\n  // XXX: newline is needed to separate sequence id from events\n  const replayHeaders = `${JSON.stringify(headers)}\n`;\n\n  if (typeof recordingData === 'string') {\n    payloadWithSequence = `${replayHeaders}${recordingData}`;\n  } else {\n    const enc = new TextEncoder();\n    // XXX: newline is needed to separate sequence id from events\n    const sequence = enc.encode(replayHeaders);\n    // Merge the two Uint8Arrays\n    payloadWithSequence = new Uint8Array(sequence.length + recordingData.length);\n    payloadWithSequence.set(sequence);\n    payloadWithSequence.set(recordingData, sequence.length);\n  }\n\n  return payloadWithSequence;\n}\n", "import type { IntegrationIndex, Scope } from '@sentry/core';\nimport { getIsolationScope } from '@sentry/core';\nimport { prepareEvent } from '@sentry/core';\nimport type { Client, EventHint, ReplayEvent } from '@sentry/types';\n\n/**\n * Prepare a replay event & enrich it with the SDK metadata.\n */\nexport async function prepareReplayEvent({\n  client,\n  scope,\n  replayId: event_id,\n  event,\n}: {\n  client: Client & { _integrations?: IntegrationIndex };\n  scope: Scope;\n  replayId: string;\n  event: ReplayEvent;\n}): Promise<ReplayEvent | null> {\n  const integrations =\n    typeof client._integrations === 'object' && client._integrations !== null && !Array.isArray(client._integrations)\n      ? Object.keys(client._integrations)\n      : undefined;\n\n  const eventHint: EventHint = { event_id, integrations };\n\n  if (client.emit) {\n    client.emit('preprocessEvent', event, eventHint);\n  }\n\n  const preparedEvent = (await prepareEvent(\n    client.getOptions(),\n    event,\n    eventHint,\n    scope,\n    client,\n    getIsolationScope(),\n  )) as ReplayEvent | null;\n\n  // If e.g. a global event processor returned null\n  if (!preparedEvent) {\n    return null;\n  }\n\n  // This normally happens in browser client \"_prepareEvent\"\n  // but since we do not use this private method from the client, but rather the plain import\n  // we need to do this manually.\n  preparedEvent.platform = preparedEvent.platform || 'javascript';\n\n  // extract the SDK name because `client._prepareEvent` doesn't add it to the event\n  const metadata = client.getSdkMetadata && client.getSdkMetadata();\n  const { name, version } = (metadata && metadata.sdk) || {};\n\n  preparedEvent.sdk = {\n    ...preparedEvent.sdk,\n    name: name || 'sentry.javascript.unknown',\n    version: version || '0.0.0',\n  };\n\n  return preparedEvent;\n}\n", "import { getClient, getCurrentScope } from '@sentry/core';\nimport type { ReplayEvent, TransportMakeRequestResponse } from '@sentry/types';\nimport type { RateLimits } from '@sentry/utils';\nimport { isRateLimited, updateRateLimits } from '@sentry/utils';\n\nimport { REPLAY_EVENT_NAME, UNABLE_TO_SEND_REPLAY } from '../constants';\nimport type { SendReplayData } from '../types';\nimport { createReplayEnvelope } from './createReplayEnvelope';\nimport { logInfo } from './log';\nimport { prepareRecordingData } from './prepareRecordingData';\nimport { prepareReplayEvent } from './prepareReplayEvent';\n\n/**\n * Send replay attachment using `fetch()`\n */\nexport async function sendReplayRequest({\n  recordingData,\n  replayId,\n  segmentId: segment_id,\n  eventContext,\n  timestamp,\n  session,\n}: SendReplayData): Promise<void | TransportMakeRequestResponse> {\n  const preparedRecordingData = prepareRecordingData({\n    recordingData,\n    headers: {\n      segment_id,\n    },\n  });\n\n  const { urls, errorIds, traceIds, initialTimestamp } = eventContext;\n\n  const client = getClient();\n  const scope = getCurrentScope();\n  const transport = client && client.getTransport();\n  const dsn = client && client.getDsn();\n\n  if (!client || !transport || !dsn || !session.sampled) {\n    return;\n  }\n\n  const baseEvent: ReplayEvent = {\n    type: REPLAY_EVENT_NAME,\n    replay_start_timestamp: initialTimestamp / 1000,\n    timestamp: timestamp / 1000,\n    error_ids: errorIds,\n    trace_ids: traceIds,\n    urls,\n    replay_id: replayId,\n    segment_id,\n    replay_type: session.sampled,\n  };\n\n  const replayEvent = await prepareReplayEvent({ scope, client, replayId, event: baseEvent });\n\n  if (!replayEvent) {\n    // Taken from baseclient's `_processEvent` method, where this is handled for errors/transactions\n    client.recordDroppedEvent('event_processor', 'replay', baseEvent);\n    logInfo('An event processor returned `null`, will not send event.');\n    return;\n  }\n\n  /*\n  For reference, the fully built event looks something like this:\n  {\n      \"type\": \"replay_event\",\n      \"timestamp\": 1670837008.634,\n      \"error_ids\": [\n          \"errorId\"\n      ],\n      \"trace_ids\": [\n          \"traceId\"\n      ],\n      \"urls\": [\n          \"https://example.com\"\n      ],\n      \"replay_id\": \"eventId\",\n      \"segment_id\": 3,\n      \"replay_type\": \"error\",\n      \"platform\": \"javascript\",\n      \"event_id\": \"eventId\",\n      \"environment\": \"production\",\n      \"sdk\": {\n          \"integrations\": [\n              \"BrowserTracing\",\n              \"Replay\"\n          ],\n          \"name\": \"sentry.javascript.browser\",\n          \"version\": \"7.25.0\"\n      },\n      \"sdkProcessingMetadata\": {},\n      \"contexts\": {\n      },\n  }\n  */\n\n  // Prevent this data (which, if it exists, was used in earlier steps in the processing pipeline) from being sent to\n  // sentry. (Note: Our use of this property comes and goes with whatever we might be debugging, whatever hacks we may\n  // have temporarily added, etc. Even if we don't happen to be using it at some point in the future, let's not get rid\n  // of this `delete`, lest we miss putting it back in the next time the property is in use.)\n  delete replayEvent.sdkProcessingMetadata;\n\n  const envelope = createReplayEnvelope(replayEvent, preparedRecordingData, dsn, client.getOptions().tunnel);\n\n  let response: void | TransportMakeRequestResponse;\n\n  try {\n    response = await transport.send(envelope);\n  } catch (err) {\n    const error = new Error(UNABLE_TO_SEND_REPLAY);\n\n    try {\n      // In case browsers don't allow this property to be writable\n      // @ts-expect-error This needs lib es2022 and newer\n      error.cause = err;\n    } catch {\n      // nothing to do\n    }\n    throw error;\n  }\n\n  // TODO (v8): we can remove this guard once transport.send's type signature doesn't include void anymore\n  if (!response) {\n    return response;\n  }\n\n  // If the status code is invalid, we want to immediately stop & not retry\n  if (typeof response.statusCode === 'number' && (response.statusCode < 200 || response.statusCode >= 300)) {\n    throw new TransportStatusCodeError(response.statusCode);\n  }\n\n  const rateLimits = updateRateLimits({}, response);\n  if (isRateLimited(rateLimits, 'replay')) {\n    throw new RateLimitError(rateLimits);\n  }\n\n  return response;\n}\n\n/**\n * This error indicates that the transport returned an invalid status code.\n */\nexport class TransportStatusCodeError extends Error {\n  public constructor(statusCode: number) {\n    super(`Transport returned status code ${statusCode}`);\n  }\n}\n\n/**\n * This error indicates that we hit a rate limit API error.\n */\nexport class RateLimitError extends Error {\n  public rateLimits: RateLimits;\n\n  public constructor(rateLimits: RateLimits) {\n    super('Rate limit hit');\n    this.rateLimits = rateLimits;\n  }\n}\n", "import { captureException, setContext } from '@sentry/core';\n\nimport { RETRY_BASE_INTERVAL, RETRY_MAX_COUNT, UNABLE_TO_SEND_REPLAY } from '../constants';\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { SendReplayData } from '../types';\nimport { RateLimitError, TransportStatusCodeError, sendReplayRequest } from './sendReplayRequest';\n\n/**\n * Finalize and send the current replay event to Sentry\n */\nexport async function sendReplay(\n  replayData: SendReplayData,\n  retryConfig = {\n    count: 0,\n    interval: RETRY_BASE_INTERVAL,\n  },\n): Promise<unknown> {\n  const { recordingData, options } = replayData;\n\n  // short circuit if there's no events to upload (this shouldn't happen as _runFlush makes this check)\n  if (!recordingData.length) {\n    return;\n  }\n\n  try {\n    await sendReplayRequest(replayData);\n    return true;\n  } catch (err) {\n    if (err instanceof TransportStatusCodeError || err instanceof RateLimitError) {\n      throw err;\n    }\n\n    // Capture error for every failed replay\n    setContext('Replays', {\n      _retryCount: retryConfig.count,\n    });\n\n    if (DEBUG_BUILD && options._experiments && options._experiments.captureExceptions) {\n      captureException(err);\n    }\n\n    // If an error happened here, it's likely that uploading the attachment\n    // failed, we'll can retry with the same events payload\n    if (retryConfig.count >= RETRY_MAX_COUNT) {\n      const error = new Error(`${UNABLE_TO_SEND_REPLAY} - max retries exceeded`);\n\n      try {\n        // In case browsers don't allow this property to be writable\n        // @ts-expect-error This needs lib es2022 and newer\n        error.cause = err;\n      } catch {\n        // nothing to do\n      }\n\n      throw error;\n    }\n\n    // will retry in intervals of 5, 10, 30\n    retryConfig.interval *= ++retryConfig.count;\n\n    return new Promise((resolve, reject) => {\n      setTimeout(async () => {\n        try {\n          await sendReplay(replayData, retryConfig);\n          resolve(true);\n        } catch (err) {\n          reject(err);\n        }\n      }, retryConfig.interval);\n    });\n  }\n}\n", "export const THROTTLED = '__THROTTLED';\nexport const SKIPPED = '__SKIPPED';\n\n/**\n * Create a throttled function off a given function.\n * When calling the throttled function, it will call the original function only\n * if it hasn't been called more than `maxCount` times in the last `durationSeconds`.\n *\n * Returns `THROTTLED` if throttled for the first time, after that `SKIPPED`,\n * or else the return value of the original function.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function throttle<T extends (...rest: any[]) => any>(\n  fn: T,\n  maxCount: number,\n  durationSeconds: number,\n): (...rest: Parameters<T>) => ReturnType<T> | typeof THROTTLED | typeof SKIPPED {\n  const counter = new Map<number, number>();\n\n  const _cleanup = (now: number): void => {\n    const threshold = now - durationSeconds;\n    counter.forEach((_value, key) => {\n      if (key < threshold) {\n        counter.delete(key);\n      }\n    });\n  };\n\n  const _getTotalCount = (): number => {\n    return [...counter.values()].reduce((a, b) => a + b, 0);\n  };\n\n  let isThrottled = false;\n\n  return (...rest: Parameters<T>): ReturnType<T> | typeof THROTTLED | typeof SKIPPED => {\n    // Date in second-precision, which we use as basis for the throttling\n    const now = Math.floor(Date.now() / 1000);\n\n    // First, make sure to delete any old entries\n    _cleanup(now);\n\n    // If already over limit, do nothing\n    if (_getTotalCount() >= maxCount) {\n      const wasThrottled = isThrottled;\n      isThrottled = true;\n      return wasThrottled ? SKIPPED : THROTTLED;\n    }\n\n    isThrottled = false;\n    const count = counter.get(now) || 0;\n    counter.set(now, count + 1);\n\n    return fn(...rest);\n  };\n}\n", "/* eslint-disable max-lines */ // TODO: We might want to split this file up\nimport { EventType, record } from '@sentry-internal/rrweb';\nimport {\n  SEMANTIC_ATTRIBUTE_SENTRY_SOURCE,\n  captureException,\n  getClient,\n  getCurrentScope,\n  spanToJSON,\n} from '@sentry/core';\nimport type { ReplayRecordingMode, Transaction } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\nimport {\n  BUFFER_CHECKOUT_TIME,\n  SESSION_IDLE_EXPIRE_DURATION,\n  SESSION_IDLE_PAUSE_DURATION,\n  SLOW_CLICK_SCROLL_TIMEOUT,\n  SLOW_CLICK_THRESHOLD,\n  WINDOW,\n} from './constants';\nimport { ClickDetector } from './coreHandlers/handleClick';\nimport { handleKeyboardEvent } from './coreHandlers/handleKeyboardEvent';\nimport { setupPerformanceObserver } from './coreHandlers/performanceObserver';\nimport { DEBUG_BUILD } from './debug-build';\nimport { createEventBuffer } from './eventBuffer';\nimport { clearSession } from './session/clearSession';\nimport { loadOrCreateSession } from './session/loadOrCreateSession';\nimport { saveSession } from './session/saveSession';\nimport { shouldRefreshSession } from './session/shouldRefreshSession';\nimport type {\n  AddEventResult,\n  AddUpdateCallback,\n  AllPerformanceEntry,\n  AllPerformanceEntryData,\n  EventBuffer,\n  InternalEventContext,\n  PopEventContext,\n  RecordingEvent,\n  RecordingOptions,\n  ReplayBreadcrumbFrame,\n  ReplayCanvasIntegrationOptions,\n  ReplayContainer as ReplayContainerInterface,\n  ReplayPerformanceEntry,\n  ReplayPluginOptions,\n  SendBufferedReplayOptions,\n  Session,\n  SlowClickConfig,\n  Timeouts,\n} from './types';\nimport { ReplayEventTypeCustom } from './types';\nimport { addEvent, addEventSync } from './util/addEvent';\nimport { addGlobalListeners } from './util/addGlobalListeners';\nimport { addMemoryEntry } from './util/addMemoryEntry';\nimport { createBreadcrumb } from './util/createBreadcrumb';\nimport { createPerformanceEntries } from './util/createPerformanceEntries';\nimport { createPerformanceSpans } from './util/createPerformanceSpans';\nimport { debounce } from './util/debounce';\nimport { getHandleRecordingEmit } from './util/handleRecordingEmit';\nimport { isExpired } from './util/isExpired';\nimport { isSessionExpired } from './util/isSessionExpired';\nimport { logInfo, logInfoNextTick } from './util/log';\nimport { sendReplay } from './util/sendReplay';\nimport type { SKIPPED } from './util/throttle';\nimport { THROTTLED, throttle } from './util/throttle';\n\n/**\n * The main replay container class, which holds all the state and methods for recording and sending replays.\n */\nexport class ReplayContainer implements ReplayContainerInterface {\n  public eventBuffer: EventBuffer | null;\n\n  public performanceEntries: AllPerformanceEntry[];\n\n  public replayPerformanceEntries: ReplayPerformanceEntry<AllPerformanceEntryData>[];\n\n  public session: Session | undefined;\n\n  public clickDetector: ClickDetector | undefined;\n\n  /**\n   * Recording can happen in one of three modes:\n   *   - session: Record the whole session, sending it continuously\n   *   - buffer: Always keep the last 60s of recording, requires:\n   *     - having replaysOnErrorSampleRate > 0 to capture replay when an error occurs\n   *     - or calling `flush()` to send the replay\n   */\n  public recordingMode: ReplayRecordingMode;\n\n  /**\n   * The current or last active transcation.\n   * This is only available when performance is enabled.\n   */\n  public lastTransaction?: Transaction;\n\n  /**\n   * These are here so we can overwrite them in tests etc.\n   * @hidden\n   */\n  public readonly timeouts: Timeouts;\n\n  private _throttledAddEvent: (\n    event: RecordingEvent,\n    isCheckout?: boolean,\n  ) => typeof THROTTLED | typeof SKIPPED | Promise<AddEventResult | null>;\n\n  /**\n   * Options to pass to `rrweb.record()`\n   */\n  private readonly _recordingOptions: RecordingOptions;\n\n  private readonly _options: ReplayPluginOptions;\n\n  private _performanceCleanupCallback?: () => void;\n\n  private _debouncedFlush: ReturnType<typeof debounce>;\n  private _flushLock: Promise<unknown> | undefined;\n\n  /**\n   * Timestamp of the last user activity. This lives across sessions.\n   */\n  private _lastActivity: number;\n\n  /**\n   * Is the integration currently active?\n   */\n  private _isEnabled: boolean;\n\n  /**\n   * Paused is a state where:\n   * - DOM Recording is not listening at all\n   * - Nothing will be added to event buffer (e.g. core SDK events)\n   */\n  private _isPaused: boolean;\n\n  /**\n   * Have we attached listeners to the core SDK?\n   * Note we have to track this as there is no way to remove instrumentation handlers.\n   */\n  private _hasInitializedCoreListeners: boolean;\n\n  /**\n   * Function to stop recording\n   */\n  private _stopRecording: ReturnType<typeof record> | undefined;\n\n  private _context: InternalEventContext;\n\n  /**\n   * Internal use for canvas recording options\n   */\n  private _canvas: ReplayCanvasIntegrationOptions | undefined;\n\n  public constructor({\n    options,\n    recordingOptions,\n  }: {\n    options: ReplayPluginOptions;\n    recordingOptions: RecordingOptions;\n  }) {\n    this.eventBuffer = null;\n    this.performanceEntries = [];\n    this.replayPerformanceEntries = [];\n    this.recordingMode = 'session';\n    this.timeouts = {\n      sessionIdlePause: SESSION_IDLE_PAUSE_DURATION,\n      sessionIdleExpire: SESSION_IDLE_EXPIRE_DURATION,\n    } as const;\n    this._lastActivity = Date.now();\n    this._isEnabled = false;\n    this._isPaused = false;\n    this._hasInitializedCoreListeners = false;\n    this._context = {\n      errorIds: new Set(),\n      traceIds: new Set(),\n      urls: [],\n      initialTimestamp: Date.now(),\n      initialUrl: '',\n    };\n\n    this._recordingOptions = recordingOptions;\n    this._options = options;\n\n    this._debouncedFlush = debounce(() => this._flush(), this._options.flushMinDelay, {\n      maxWait: this._options.flushMaxDelay,\n    });\n\n    this._throttledAddEvent = throttle(\n      (event: RecordingEvent, isCheckout?: boolean) => addEvent(this, event, isCheckout),\n      // Max 300 events...\n      300,\n      // ... per 5s\n      5,\n    );\n\n    const { slowClickTimeout, slowClickIgnoreSelectors } = this.getOptions();\n\n    const slowClickConfig: SlowClickConfig | undefined = slowClickTimeout\n      ? {\n          threshold: Math.min(SLOW_CLICK_THRESHOLD, slowClickTimeout),\n          timeout: slowClickTimeout,\n          scrollTimeout: SLOW_CLICK_SCROLL_TIMEOUT,\n          ignoreSelector: slowClickIgnoreSelectors ? slowClickIgnoreSelectors.join(',') : '',\n        }\n      : undefined;\n\n    if (slowClickConfig) {\n      this.clickDetector = new ClickDetector(this, slowClickConfig);\n    }\n  }\n\n  /** Get the event context. */\n  public getContext(): InternalEventContext {\n    return this._context;\n  }\n\n  /** If recording is currently enabled. */\n  public isEnabled(): boolean {\n    return this._isEnabled;\n  }\n\n  /** If recording is currently paused. */\n  public isPaused(): boolean {\n    return this._isPaused;\n  }\n\n  /**\n   * Determine if canvas recording is enabled\n   */\n  public isRecordingCanvas(): boolean {\n    return Boolean(this._canvas);\n  }\n\n  /** Get the replay integration options. */\n  public getOptions(): ReplayPluginOptions {\n    return this._options;\n  }\n\n  /**\n   * Initializes the plugin based on sampling configuration. Should not be\n   * called outside of constructor.\n   */\n  public initializeSampling(previousSessionId?: string): void {\n    const { errorSampleRate, sessionSampleRate } = this._options;\n\n    // If neither sample rate is > 0, then do nothing - user will need to call one of\n    // `start()` or `startBuffering` themselves.\n    if (errorSampleRate <= 0 && sessionSampleRate <= 0) {\n      return;\n    }\n\n    // Otherwise if there is _any_ sample rate set, try to load an existing\n    // session, or create a new one.\n    this._initializeSessionForSampling(previousSessionId);\n\n    if (!this.session) {\n      // This should not happen, something wrong has occurred\n      this._handleException(new Error('Unable to initialize and create session'));\n      return;\n    }\n\n    if (this.session.sampled === false) {\n      // This should only occur if `errorSampleRate` is 0 and was unsampled for\n      // session-based replay. In this case there is nothing to do.\n      return;\n    }\n\n    // If segmentId > 0, it means we've previously already captured this session\n    // In this case, we still want to continue in `session` recording mode\n    this.recordingMode = this.session.sampled === 'buffer' && this.session.segmentId === 0 ? 'buffer' : 'session';\n\n    logInfoNextTick(\n      `[Replay] Starting replay in ${this.recordingMode} mode`,\n      this._options._experiments.traceInternals,\n    );\n\n    this._initializeRecording();\n  }\n\n  /**\n   * Start a replay regardless of sampling rate. Calling this will always\n   * create a new session. Will throw an error if replay is already in progress.\n   *\n   * Creates or loads a session, attaches listeners to varying events (DOM,\n   * _performanceObserver, Recording, Sentry SDK, etc)\n   */\n  public start(): void {\n    if (this._isEnabled && this.recordingMode === 'session') {\n      throw new Error('Replay recording is already in progress');\n    }\n\n    if (this._isEnabled && this.recordingMode === 'buffer') {\n      throw new Error('Replay buffering is in progress, call `flush()` to save the replay');\n    }\n\n    logInfoNextTick('[Replay] Starting replay in session mode', this._options._experiments.traceInternals);\n\n    const session = loadOrCreateSession(\n      {\n        maxReplayDuration: this._options.maxReplayDuration,\n        sessionIdleExpire: this.timeouts.sessionIdleExpire,\n        traceInternals: this._options._experiments.traceInternals,\n      },\n      {\n        stickySession: this._options.stickySession,\n        // This is intentional: create a new session-based replay when calling `start()`\n        sessionSampleRate: 1,\n        allowBuffering: false,\n      },\n    );\n\n    this.session = session;\n\n    this._initializeRecording();\n  }\n\n  /**\n   * Start replay buffering. Buffers until `flush()` is called or, if\n   * `replaysOnErrorSampleRate` > 0, an error occurs.\n   */\n  public startBuffering(): void {\n    if (this._isEnabled) {\n      throw new Error('Replay recording is already in progress');\n    }\n\n    logInfoNextTick('[Replay] Starting replay in buffer mode', this._options._experiments.traceInternals);\n\n    const session = loadOrCreateSession(\n      {\n        sessionIdleExpire: this.timeouts.sessionIdleExpire,\n        maxReplayDuration: this._options.maxReplayDuration,\n        traceInternals: this._options._experiments.traceInternals,\n      },\n      {\n        stickySession: this._options.stickySession,\n        sessionSampleRate: 0,\n        allowBuffering: true,\n      },\n    );\n\n    this.session = session;\n\n    this.recordingMode = 'buffer';\n    this._initializeRecording();\n  }\n\n  /**\n   * Start recording.\n   *\n   * Note that this will cause a new DOM checkout\n   */\n  public startRecording(): void {\n    try {\n      const canvasOptions = this._canvas;\n\n      this._stopRecording = record({\n        ...this._recordingOptions,\n        // When running in error sampling mode, we need to overwrite `checkoutEveryNms`\n        // Without this, it would record forever, until an error happens, which we don't want\n        // instead, we'll always keep the last 60 seconds of replay before an error happened\n        ...(this.recordingMode === 'buffer' && { checkoutEveryNms: BUFFER_CHECKOUT_TIME }),\n        emit: getHandleRecordingEmit(this),\n        onMutation: this._onMutationHandler,\n        ...(canvasOptions\n          ? {\n              recordCanvas: canvasOptions.recordCanvas,\n              getCanvasManager: canvasOptions.getCanvasManager,\n              sampling: canvasOptions.sampling,\n              dataURLOptions: canvasOptions.dataURLOptions,\n            }\n          : {}),\n      });\n    } catch (err) {\n      this._handleException(err);\n    }\n  }\n\n  /**\n   * Stops the recording, if it was running.\n   *\n   * Returns true if it was previously stopped, or is now stopped,\n   * otherwise false.\n   */\n  public stopRecording(): boolean {\n    try {\n      if (this._stopRecording) {\n        this._stopRecording();\n        this._stopRecording = undefined;\n      }\n\n      return true;\n    } catch (err) {\n      this._handleException(err);\n      return false;\n    }\n  }\n\n  /**\n   * Currently, this needs to be manually called (e.g. for tests). Sentry SDK\n   * does not support a teardown\n   */\n  public async stop({ forceFlush = false, reason }: { forceFlush?: boolean; reason?: string } = {}): Promise<void> {\n    if (!this._isEnabled) {\n      return;\n    }\n\n    // We can't move `_isEnabled` after awaiting a flush, otherwise we can\n    // enter into an infinite loop when `stop()` is called while flushing.\n    this._isEnabled = false;\n\n    try {\n      logInfo(\n        `[Replay] Stopping Replay${reason ? ` triggered by ${reason}` : ''}`,\n        this._options._experiments.traceInternals,\n      );\n\n      this._removeListeners();\n      this.stopRecording();\n\n      this._debouncedFlush.cancel();\n      // See comment above re: `_isEnabled`, we \"force\" a flush, ignoring the\n      // `_isEnabled` state of the plugin since it was disabled above.\n      if (forceFlush) {\n        await this._flush({ force: true });\n      }\n\n      // After flush, destroy event buffer\n      this.eventBuffer && this.eventBuffer.destroy();\n      this.eventBuffer = null;\n\n      // Clear session from session storage, note this means if a new session\n      // is started after, it will not have `previousSessionId`\n      clearSession(this);\n    } catch (err) {\n      this._handleException(err);\n    }\n  }\n\n  /**\n   * Pause some replay functionality. See comments for `_isPaused`.\n   * This differs from stop as this only stops DOM recording, it is\n   * not as thorough of a shutdown as `stop()`.\n   */\n  public pause(): void {\n    if (this._isPaused) {\n      return;\n    }\n\n    this._isPaused = true;\n    this.stopRecording();\n\n    logInfo('[Replay] Pausing replay', this._options._experiments.traceInternals);\n  }\n\n  /**\n   * Resumes recording, see notes for `pause().\n   *\n   * Note that calling `startRecording()` here will cause a\n   * new DOM checkout.`\n   */\n  public resume(): void {\n    if (!this._isPaused || !this._checkSession()) {\n      return;\n    }\n\n    this._isPaused = false;\n    this.startRecording();\n\n    logInfo('[Replay] Resuming replay', this._options._experiments.traceInternals);\n  }\n\n  /**\n   * If not in \"session\" recording mode, flush event buffer which will create a new replay.\n   * Unless `continueRecording` is false, the replay will continue to record and\n   * behave as a \"session\"-based replay.\n   *\n   * Otherwise, queue up a flush.\n   */\n  public async sendBufferedReplayOrFlush({ continueRecording = true }: SendBufferedReplayOptions = {}): Promise<void> {\n    if (this.recordingMode === 'session') {\n      return this.flushImmediate();\n    }\n\n    const activityTime = Date.now();\n\n    logInfo('[Replay] Converting buffer to session', this._options._experiments.traceInternals);\n\n    // Allow flush to complete before resuming as a session recording, otherwise\n    // the checkout from `startRecording` may be included in the payload.\n    // Prefer to keep the error replay as a separate (and smaller) segment\n    // than the session replay.\n    await this.flushImmediate();\n\n    const hasStoppedRecording = this.stopRecording();\n\n    if (!continueRecording || !hasStoppedRecording) {\n      return;\n    }\n\n    // To avoid race conditions where this is called multiple times, we check here again that we are still buffering\n    if ((this.recordingMode as ReplayRecordingMode) === 'session') {\n      return;\n    }\n\n    // Re-start recording in session-mode\n    this.recordingMode = 'session';\n\n    // Once this session ends, we do not want to refresh it\n    if (this.session) {\n      this._updateUserActivity(activityTime);\n      this._updateSessionActivity(activityTime);\n      this._maybeSaveSession();\n    }\n\n    this.startRecording();\n  }\n\n  /**\n   * We want to batch uploads of replay events. Save events only if\n   * `<flushMinDelay>` milliseconds have elapsed since the last event\n   * *OR* if `<flushMaxDelay>` milliseconds have elapsed.\n   *\n   * Accepts a callback to perform side-effects and returns true to stop batch\n   * processing and hand back control to caller.\n   */\n  public addUpdate(cb: AddUpdateCallback): void {\n    // We need to always run `cb` (e.g. in the case of `this.recordingMode == 'buffer'`)\n    const cbResult = cb();\n\n    // If this option is turned on then we will only want to call `flush`\n    // explicitly\n    if (this.recordingMode === 'buffer') {\n      return;\n    }\n\n    // If callback is true, we do not want to continue with flushing -- the\n    // caller will need to handle it.\n    if (cbResult === true) {\n      return;\n    }\n\n    // addUpdate is called quite frequently - use _debouncedFlush so that it\n    // respects the flush delays and does not flush immediately\n    this._debouncedFlush();\n  }\n\n  /**\n   * Updates the user activity timestamp and resumes recording. This should be\n   * called in an event handler for a user action that we consider as the user\n   * being \"active\" (e.g. a mouse click).\n   */\n  public triggerUserActivity(): void {\n    this._updateUserActivity();\n\n    // This case means that recording was once stopped due to inactivity.\n    // Ensure that recording is resumed.\n    if (!this._stopRecording) {\n      // Create a new session, otherwise when the user action is flushed, it\n      // will get rejected due to an expired session.\n      if (!this._checkSession()) {\n        return;\n      }\n\n      // Note: This will cause a new DOM checkout\n      this.resume();\n      return;\n    }\n\n    // Otherwise... recording was never suspended, continue as normalish\n    this.checkAndHandleExpiredSession();\n\n    this._updateSessionActivity();\n  }\n\n  /**\n   * Updates the user activity timestamp *without* resuming\n   * recording. Some user events (e.g. keydown) can be create\n   * low-value replays that only contain the keypress as a\n   * breadcrumb. Instead this would require other events to\n   * create a new replay after a session has expired.\n   */\n  public updateUserActivity(): void {\n    this._updateUserActivity();\n    this._updateSessionActivity();\n  }\n\n  /**\n   * Only flush if `this.recordingMode === 'session'`\n   */\n  public conditionalFlush(): Promise<void> {\n    if (this.recordingMode === 'buffer') {\n      return Promise.resolve();\n    }\n\n    return this.flushImmediate();\n  }\n\n  /**\n   * Flush using debounce flush\n   */\n  public flush(): Promise<void> {\n    return this._debouncedFlush() as Promise<void>;\n  }\n\n  /**\n   * Always flush via `_debouncedFlush` so that we do not have flushes triggered\n   * from calling both `flush` and `_debouncedFlush`. Otherwise, there could be\n   * cases of mulitple flushes happening closely together.\n   */\n  public flushImmediate(): Promise<void> {\n    this._debouncedFlush();\n    // `.flush` is provided by the debounced function, analogously to lodash.debounce\n    return this._debouncedFlush.flush() as Promise<void>;\n  }\n\n  /**\n   * Cancels queued up flushes.\n   */\n  public cancelFlush(): void {\n    this._debouncedFlush.cancel();\n  }\n\n  /** Get the current sesion (=replay) ID */\n  public getSessionId(): string | undefined {\n    return this.session && this.session.id;\n  }\n\n  /**\n   * Checks if recording should be stopped due to user inactivity. Otherwise\n   * check if session is expired and create a new session if so. Triggers a new\n   * full snapshot on new session.\n   *\n   * Returns true if session is not expired, false otherwise.\n   * @hidden\n   */\n  public checkAndHandleExpiredSession(): boolean | void {\n    // Prevent starting a new session if the last user activity is older than\n    // SESSION_IDLE_PAUSE_DURATION. Otherwise non-user activity can trigger a new\n    // session+recording. This creates noisy replays that do not have much\n    // content in them.\n    if (\n      this._lastActivity &&\n      isExpired(this._lastActivity, this.timeouts.sessionIdlePause) &&\n      this.session &&\n      this.session.sampled === 'session'\n    ) {\n      // Pause recording only for session-based replays. Otherwise, resuming\n      // will create a new replay and will conflict with users who only choose\n      // to record error-based replays only. (e.g. the resumed replay will not\n      // contain a reference to an error)\n      this.pause();\n      return;\n    }\n\n    // --- There is recent user activity --- //\n    // This will create a new session if expired, based on expiry length\n    if (!this._checkSession()) {\n      // Check session handles the refreshing itself\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Capture some initial state that can change throughout the lifespan of the\n   * replay. This is required because otherwise they would be captured at the\n   * first flush.\n   */\n  public setInitialState(): void {\n    const urlPath = `${WINDOW.location.pathname}${WINDOW.location.hash}${WINDOW.location.search}`;\n    const url = `${WINDOW.location.origin}${urlPath}`;\n\n    this.performanceEntries = [];\n    this.replayPerformanceEntries = [];\n\n    // Reset _context as well\n    this._clearContext();\n\n    this._context.initialUrl = url;\n    this._context.initialTimestamp = Date.now();\n    this._context.urls.push(url);\n  }\n\n  /**\n   * Add a breadcrumb event, that may be throttled.\n   * If it was throttled, we add a custom breadcrumb to indicate that.\n   */\n  public throttledAddEvent(\n    event: RecordingEvent,\n    isCheckout?: boolean,\n  ): typeof THROTTLED | typeof SKIPPED | Promise<AddEventResult | null> {\n    const res = this._throttledAddEvent(event, isCheckout);\n\n    // If this is THROTTLED, it means we have throttled the event for the first time\n    // In this case, we want to add a breadcrumb indicating that something was skipped\n    if (res === THROTTLED) {\n      const breadcrumb = createBreadcrumb({\n        category: 'replay.throttled',\n      });\n\n      this.addUpdate(() => {\n        // Return `false` if the event _was_ added, as that means we schedule a flush\n        return !addEventSync(this, {\n          type: ReplayEventTypeCustom,\n          timestamp: breadcrumb.timestamp || 0,\n          data: {\n            tag: 'breadcrumb',\n            payload: breadcrumb,\n            metric: true,\n          },\n        });\n      });\n    }\n\n    return res;\n  }\n\n  /**\n   * This will get the parametrized route name of the current page.\n   * This is only available if performance is enabled, and if an instrumented router is used.\n   */\n  public getCurrentRoute(): string | undefined {\n    // eslint-disable-next-line deprecation/deprecation\n    const lastTransaction = this.lastTransaction || getCurrentScope().getTransaction();\n\n    const attributes = (lastTransaction && spanToJSON(lastTransaction).data) || {};\n    const source = attributes[SEMANTIC_ATTRIBUTE_SENTRY_SOURCE];\n    if (!lastTransaction || !source || !['route', 'custom'].includes(source)) {\n      return undefined;\n    }\n\n    return spanToJSON(lastTransaction).description;\n  }\n\n  /**\n   * Initialize and start all listeners to varying events (DOM,\n   * Performance Observer, Recording, Sentry SDK, etc)\n   */\n  private _initializeRecording(): void {\n    this.setInitialState();\n\n    // this method is generally called on page load or manually - in both cases\n    // we should treat it as an activity\n    this._updateSessionActivity();\n\n    this.eventBuffer = createEventBuffer({\n      useCompression: this._options.useCompression,\n      workerUrl: this._options.workerUrl,\n    });\n\n    this._removeListeners();\n    this._addListeners();\n\n    // Need to set as enabled before we start recording, as `record()` can trigger a flush with a new checkout\n    this._isEnabled = true;\n    this._isPaused = false;\n\n    this.startRecording();\n  }\n\n  /** A wrapper to conditionally capture exceptions. */\n  private _handleException(error: unknown): void {\n    DEBUG_BUILD && logger.error('[Replay]', error);\n\n    if (DEBUG_BUILD && this._options._experiments && this._options._experiments.captureExceptions) {\n      captureException(error);\n    }\n  }\n\n  /**\n   * Loads (or refreshes) the current session.\n   */\n  private _initializeSessionForSampling(previousSessionId?: string): void {\n    // Whenever there is _any_ error sample rate, we always allow buffering\n    // Because we decide on sampling when an error occurs, we need to buffer at all times if sampling for errors\n    const allowBuffering = this._options.errorSampleRate > 0;\n\n    const session = loadOrCreateSession(\n      {\n        sessionIdleExpire: this.timeouts.sessionIdleExpire,\n        maxReplayDuration: this._options.maxReplayDuration,\n        traceInternals: this._options._experiments.traceInternals,\n        previousSessionId,\n      },\n      {\n        stickySession: this._options.stickySession,\n        sessionSampleRate: this._options.sessionSampleRate,\n        allowBuffering,\n      },\n    );\n\n    this.session = session;\n  }\n\n  /**\n   * Checks and potentially refreshes the current session.\n   * Returns false if session is not recorded.\n   */\n  private _checkSession(): boolean {\n    // If there is no session yet, we do not want to refresh anything\n    // This should generally not happen, but to be safe....\n    if (!this.session) {\n      return false;\n    }\n\n    const currentSession = this.session;\n\n    if (\n      shouldRefreshSession(currentSession, {\n        sessionIdleExpire: this.timeouts.sessionIdleExpire,\n        maxReplayDuration: this._options.maxReplayDuration,\n      })\n    ) {\n      // This should never reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this._refreshSession(currentSession);\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Refresh a session with a new one.\n   * This stops the current session (without forcing a flush, as that would never work since we are expired),\n   * and then does a new sampling based on the refreshed session.\n   */\n  private async _refreshSession(session: Session): Promise<void> {\n    if (!this._isEnabled) {\n      return;\n    }\n    await this.stop({ reason: 'refresh session' });\n    this.initializeSampling(session.id);\n  }\n\n  /**\n   * Adds listeners to record events for the replay\n   */\n  private _addListeners(): void {\n    try {\n      WINDOW.document.addEventListener('visibilitychange', this._handleVisibilityChange);\n      WINDOW.addEventListener('blur', this._handleWindowBlur);\n      WINDOW.addEventListener('focus', this._handleWindowFocus);\n      WINDOW.addEventListener('keydown', this._handleKeyboardEvent);\n\n      if (this.clickDetector) {\n        this.clickDetector.addListeners();\n      }\n\n      // There is no way to remove these listeners, so ensure they are only added once\n      if (!this._hasInitializedCoreListeners) {\n        addGlobalListeners(this);\n\n        this._hasInitializedCoreListeners = true;\n      }\n    } catch (err) {\n      this._handleException(err);\n    }\n\n    this._performanceCleanupCallback = setupPerformanceObserver(this);\n  }\n\n  /**\n   * Cleans up listeners that were created in `_addListeners`\n   */\n  private _removeListeners(): void {\n    try {\n      WINDOW.document.removeEventListener('visibilitychange', this._handleVisibilityChange);\n\n      WINDOW.removeEventListener('blur', this._handleWindowBlur);\n      WINDOW.removeEventListener('focus', this._handleWindowFocus);\n      WINDOW.removeEventListener('keydown', this._handleKeyboardEvent);\n\n      if (this.clickDetector) {\n        this.clickDetector.removeListeners();\n      }\n\n      if (this._performanceCleanupCallback) {\n        this._performanceCleanupCallback();\n      }\n    } catch (err) {\n      this._handleException(err);\n    }\n  }\n\n  /**\n   * Handle when visibility of the page content changes. Opening a new tab will\n   * cause the state to change to hidden because of content of current page will\n   * be hidden. Likewise, moving a different window to cover the contents of the\n   * page will also trigger a change to a hidden state.\n   */\n  private _handleVisibilityChange: () => void = () => {\n    if (WINDOW.document.visibilityState === 'visible') {\n      this._doChangeToForegroundTasks();\n    } else {\n      this._doChangeToBackgroundTasks();\n    }\n  };\n\n  /**\n   * Handle when page is blurred\n   */\n  private _handleWindowBlur: () => void = () => {\n    const breadcrumb = createBreadcrumb({\n      category: 'ui.blur',\n    });\n\n    // Do not count blur as a user action -- it's part of the process of them\n    // leaving the page\n    this._doChangeToBackgroundTasks(breadcrumb);\n  };\n\n  /**\n   * Handle when page is focused\n   */\n  private _handleWindowFocus: () => void = () => {\n    const breadcrumb = createBreadcrumb({\n      category: 'ui.focus',\n    });\n\n    // Do not count focus as a user action -- instead wait until they focus and\n    // interactive with page\n    this._doChangeToForegroundTasks(breadcrumb);\n  };\n\n  /** Ensure page remains active when a key is pressed. */\n  private _handleKeyboardEvent: (event: KeyboardEvent) => void = (event: KeyboardEvent) => {\n    handleKeyboardEvent(this, event);\n  };\n\n  /**\n   * Tasks to run when we consider a page to be hidden (via blurring and/or visibility)\n   */\n  private _doChangeToBackgroundTasks(breadcrumb?: ReplayBreadcrumbFrame): void {\n    if (!this.session) {\n      return;\n    }\n\n    const expired = isSessionExpired(this.session, {\n      maxReplayDuration: this._options.maxReplayDuration,\n      sessionIdleExpire: this.timeouts.sessionIdleExpire,\n    });\n\n    if (expired) {\n      return;\n    }\n\n    if (breadcrumb) {\n      this._createCustomBreadcrumb(breadcrumb);\n    }\n\n    // Send replay when the page/tab becomes hidden. There is no reason to send\n    // replay if it becomes visible, since no actions we care about were done\n    // while it was hidden\n    // This should never reject\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    void this.conditionalFlush();\n  }\n\n  /**\n   * Tasks to run when we consider a page to be visible (via focus and/or visibility)\n   */\n  private _doChangeToForegroundTasks(breadcrumb?: ReplayBreadcrumbFrame): void {\n    if (!this.session) {\n      return;\n    }\n\n    const isSessionActive = this.checkAndHandleExpiredSession();\n\n    if (!isSessionActive) {\n      // If the user has come back to the page within SESSION_IDLE_PAUSE_DURATION\n      // ms, we will re-use the existing session, otherwise create a new\n      // session\n      logInfo('[Replay] Document has become active, but session has expired');\n      return;\n    }\n\n    if (breadcrumb) {\n      this._createCustomBreadcrumb(breadcrumb);\n    }\n  }\n\n  /**\n   * Update user activity (across session lifespans)\n   */\n  private _updateUserActivity(_lastActivity: number = Date.now()): void {\n    this._lastActivity = _lastActivity;\n  }\n\n  /**\n   * Updates the session's last activity timestamp\n   */\n  private _updateSessionActivity(_lastActivity: number = Date.now()): void {\n    if (this.session) {\n      this.session.lastActivity = _lastActivity;\n      this._maybeSaveSession();\n    }\n  }\n\n  /**\n   * Helper to create (and buffer) a replay breadcrumb from a core SDK breadcrumb\n   */\n  private _createCustomBreadcrumb(breadcrumb: ReplayBreadcrumbFrame): void {\n    this.addUpdate(() => {\n      // This should never reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.throttledAddEvent({\n        type: EventType.Custom,\n        timestamp: breadcrumb.timestamp || 0,\n        data: {\n          tag: 'breadcrumb',\n          payload: breadcrumb,\n        },\n      });\n    });\n  }\n\n  /**\n   * Observed performance events are added to `this.performanceEntries`. These\n   * are included in the replay event before it is finished and sent to Sentry.\n   */\n  private _addPerformanceEntries(): Promise<Array<AddEventResult | null>> {\n    const performanceEntries = createPerformanceEntries(this.performanceEntries).concat(this.replayPerformanceEntries);\n\n    this.performanceEntries = [];\n    this.replayPerformanceEntries = [];\n\n    return Promise.all(createPerformanceSpans(this, performanceEntries));\n  }\n\n  /**\n   * Clear _context\n   */\n  private _clearContext(): void {\n    // XXX: `initialTimestamp` and `initialUrl` do not get cleared\n    this._context.errorIds.clear();\n    this._context.traceIds.clear();\n    this._context.urls = [];\n  }\n\n  /** Update the initial timestamp based on the buffer content. */\n  private _updateInitialTimestampFromEventBuffer(): void {\n    const { session, eventBuffer } = this;\n    if (!session || !eventBuffer) {\n      return;\n    }\n\n    // we only ever update this on the initial segment\n    if (session.segmentId) {\n      return;\n    }\n\n    const earliestEvent = eventBuffer.getEarliestTimestamp();\n    if (earliestEvent && earliestEvent < this._context.initialTimestamp) {\n      this._context.initialTimestamp = earliestEvent;\n    }\n  }\n\n  /**\n   * Return and clear _context\n   */\n  private _popEventContext(): PopEventContext {\n    const _context = {\n      initialTimestamp: this._context.initialTimestamp,\n      initialUrl: this._context.initialUrl,\n      errorIds: Array.from(this._context.errorIds),\n      traceIds: Array.from(this._context.traceIds),\n      urls: this._context.urls,\n    };\n\n    this._clearContext();\n\n    return _context;\n  }\n\n  /**\n   * Flushes replay event buffer to Sentry.\n   *\n   * Performance events are only added right before flushing - this is\n   * due to the buffered performance observer events.\n   *\n   * Should never be called directly, only by `flush`\n   */\n  private async _runFlush(): Promise<void> {\n    const replayId = this.getSessionId();\n\n    if (!this.session || !this.eventBuffer || !replayId) {\n      DEBUG_BUILD && logger.error('[Replay] No session or eventBuffer found to flush.');\n      return;\n    }\n\n    await this._addPerformanceEntries();\n\n    // Check eventBuffer again, as it could have been stopped in the meanwhile\n    if (!this.eventBuffer || !this.eventBuffer.hasEvents) {\n      return;\n    }\n\n    // Only attach memory event if eventBuffer is not empty\n    await addMemoryEntry(this);\n\n    // Check eventBuffer again, as it could have been stopped in the meanwhile\n    if (!this.eventBuffer) {\n      return;\n    }\n\n    // if this changed in the meanwhile, e.g. because the session was refreshed or similar, we abort here\n    if (replayId !== this.getSessionId()) {\n      return;\n    }\n\n    try {\n      // This uses the data from the eventBuffer, so we need to call this before `finish()\n      this._updateInitialTimestampFromEventBuffer();\n\n      const timestamp = Date.now();\n\n      // Check total duration again, to avoid sending outdated stuff\n      // We leave 30s wiggle room to accomodate late flushing etc.\n      // This _could_ happen when the browser is suspended during flushing, in which case we just want to stop\n      if (timestamp - this._context.initialTimestamp > this._options.maxReplayDuration + 30_000) {\n        throw new Error('Session is too long, not sending replay');\n      }\n\n      const eventContext = this._popEventContext();\n      // Always increment segmentId regardless of outcome of sending replay\n      const segmentId = this.session.segmentId++;\n      this._maybeSaveSession();\n\n      // Note this empties the event buffer regardless of outcome of sending replay\n      const recordingData = await this.eventBuffer.finish();\n\n      await sendReplay({\n        replayId,\n        recordingData,\n        segmentId,\n        eventContext,\n        session: this.session,\n        options: this.getOptions(),\n        timestamp,\n      });\n    } catch (err) {\n      this._handleException(err);\n\n      // This means we retried 3 times and all of them failed,\n      // or we ran into a problem we don't want to retry, like rate limiting.\n      // In this case, we want to completely stop the replay - otherwise, we may get inconsistent segments\n      // This should never reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.stop({ reason: 'sendReplay' });\n\n      const client = getClient();\n\n      if (client) {\n        client.recordDroppedEvent('send_error', 'replay');\n      }\n    }\n  }\n\n  /**\n   * Flush recording data to Sentry. Creates a lock so that only a single flush\n   * can be active at a time. Do not call this directly.\n   */\n  private _flush = async ({\n    force = false,\n  }: {\n    /**\n     * If true, flush while ignoring the `_isEnabled` state of\n     * Replay integration. (By default, flush is noop if integration\n     * is stopped).\n     */\n    force?: boolean;\n  } = {}): Promise<void> => {\n    if (!this._isEnabled && !force) {\n      // This can happen if e.g. the replay was stopped because of exceeding the retry limit\n      return;\n    }\n\n    if (!this.checkAndHandleExpiredSession()) {\n      DEBUG_BUILD && logger.error('[Replay] Attempting to finish replay event after session expired.');\n      return;\n    }\n\n    if (!this.session) {\n      // should never happen, as we would have bailed out before\n      return;\n    }\n\n    const start = this.session.started;\n    const now = Date.now();\n    const duration = now - start;\n\n    // A flush is about to happen, cancel any queued flushes\n    this._debouncedFlush.cancel();\n\n    // If session is too short, or too long (allow some wiggle room over maxReplayDuration), do not send it\n    // This _should_ not happen, but it may happen if flush is triggered due to a page activity change or similar\n    const tooShort = duration < this._options.minReplayDuration;\n    const tooLong = duration > this._options.maxReplayDuration + 5_000;\n    if (tooShort || tooLong) {\n      logInfo(\n        `[Replay] Session duration (${Math.floor(duration / 1000)}s) is too ${\n          tooShort ? 'short' : 'long'\n        }, not sending replay.`,\n        this._options._experiments.traceInternals,\n      );\n\n      if (tooShort) {\n        this._debouncedFlush();\n      }\n      return;\n    }\n\n    const eventBuffer = this.eventBuffer;\n    if (eventBuffer && this.session.segmentId === 0 && !eventBuffer.hasCheckout) {\n      logInfo('[Replay] Flushing initial segment without checkout.', this._options._experiments.traceInternals);\n      // TODO FN: Evaluate if we want to stop here, or remove this again?\n    }\n\n    // this._flushLock acts as a lock so that future calls to `_flush()`\n    // will be blocked until this promise resolves\n    if (!this._flushLock) {\n      this._flushLock = this._runFlush();\n      await this._flushLock;\n      this._flushLock = undefined;\n      return;\n    }\n\n    // Wait for previous flush to finish, then call the debounced `_flush()`.\n    // It's possible there are other flush requests queued and waiting for it\n    // to resolve. We want to reduce all outstanding requests (as well as any\n    // new flush requests that occur within a second of the locked flush\n    // completing) into a single flush.\n\n    try {\n      await this._flushLock;\n    } catch (err) {\n      DEBUG_BUILD && logger.error(err);\n    } finally {\n      this._debouncedFlush();\n    }\n  };\n\n  /** Save the session, if it is sticky */\n  private _maybeSaveSession(): void {\n    if (this.session && this._options.stickySession) {\n      saveSession(this.session);\n    }\n  }\n\n  /** Handler for rrweb.record.onMutation */\n  private _onMutationHandler = (mutations: unknown[]): boolean => {\n    const count = mutations.length;\n\n    const mutationLimit = this._options.mutationLimit;\n    const mutationBreadcrumbLimit = this._options.mutationBreadcrumbLimit;\n    const overMutationLimit = mutationLimit && count > mutationLimit;\n\n    // Create a breadcrumb if a lot of mutations happen at the same time\n    // We can show this in the UI as an information with potential performance improvements\n    if (count > mutationBreadcrumbLimit || overMutationLimit) {\n      const breadcrumb = createBreadcrumb({\n        category: 'replay.mutations',\n        data: {\n          count,\n          limit: overMutationLimit,\n        },\n      });\n      this._createCustomBreadcrumb(breadcrumb);\n    }\n\n    // Stop replay if over the mutation limit\n    if (overMutationLimit) {\n      // This should never reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.stop({ reason: 'mutationLimit', forceFlush: this.recordingMode === 'session' });\n      return false;\n    }\n\n    // `true` means we use the regular mutation handling by rrweb\n    return true;\n  };\n}\n", "import { consoleSandbox } from '@sentry/utils';\n\nimport type { DeprecatedPrivacyOptions, ReplayIntegrationPrivacyOptions } from '../types';\n\ntype GetPrivacyOptions = Required<Omit<ReplayIntegrationPrivacyOptions, 'maskFn'>> &\n  Omit<DeprecatedPrivacyOptions, 'maskInputOptions'>;\ninterface GetPrivacyReturn {\n  maskTextSelector: string;\n  unmaskTextSelector: string;\n  blockSelector: string;\n  unblockSelector: string;\n  ignoreSelector: string;\n\n  blockClass?: RegExp;\n  maskTextClass?: RegExp;\n}\n\nfunction getOption(\n  selectors: string[],\n  defaultSelectors: string[],\n  deprecatedClassOption?: string | RegExp,\n  deprecatedSelectorOption?: string,\n): string {\n  const deprecatedSelectors = typeof deprecatedSelectorOption === 'string' ? deprecatedSelectorOption.split(',') : [];\n\n  const allSelectors = [\n    ...selectors,\n    // @deprecated\n    ...deprecatedSelectors,\n\n    // sentry defaults\n    ...defaultSelectors,\n  ];\n\n  // @deprecated\n  if (typeof deprecatedClassOption !== 'undefined') {\n    // NOTE: No support for RegExp\n    if (typeof deprecatedClassOption === 'string') {\n      allSelectors.push(`.${deprecatedClassOption}`);\n    }\n\n    consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.warn(\n        '[Replay] You are using a deprecated configuration item for privacy. Read the documentation on how to use the new privacy configuration.',\n      );\n    });\n  }\n\n  return allSelectors.join(',');\n}\n\n/**\n * Returns privacy related configuration for use in rrweb\n */\nexport function getPrivacyOptions({\n  mask,\n  unmask,\n  block,\n  unblock,\n  ignore,\n\n  // eslint-disable-next-line deprecation/deprecation\n  blockClass,\n  // eslint-disable-next-line deprecation/deprecation\n  blockSelector,\n  // eslint-disable-next-line deprecation/deprecation\n  maskTextClass,\n  // eslint-disable-next-line deprecation/deprecation\n  maskTextSelector,\n  // eslint-disable-next-line deprecation/deprecation\n  ignoreClass,\n}: GetPrivacyOptions): GetPrivacyReturn {\n  const defaultBlockedElements = ['base[href=\"/\"]'];\n\n  const maskSelector = getOption(mask, ['.sentry-mask', '[data-sentry-mask]'], maskTextClass, maskTextSelector);\n  const unmaskSelector = getOption(unmask, ['.sentry-unmask', '[data-sentry-unmask]']);\n\n  const options: GetPrivacyReturn = {\n    // We are making the decision to make text and input selectors the same\n    maskTextSelector: maskSelector,\n    unmaskTextSelector: unmaskSelector,\n\n    blockSelector: getOption(\n      block,\n      ['.sentry-block', '[data-sentry-block]', ...defaultBlockedElements],\n      blockClass,\n      blockSelector,\n    ),\n    unblockSelector: getOption(unblock, ['.sentry-unblock', '[data-sentry-unblock]']),\n    ignoreSelector: getOption(ignore, ['.sentry-ignore', '[data-sentry-ignore]', 'input[type=\"file\"]'], ignoreClass),\n  };\n\n  if (blockClass instanceof RegExp) {\n    options.blockClass = blockClass;\n  }\n\n  if (maskTextClass instanceof RegExp) {\n    options.maskTextClass = maskTextClass;\n  }\n\n  return options;\n}\n", "import type { getPrivacyOptions } from './getPrivacyOptions';\n\ninterface MaskAttributeParams {\n  maskAttributes: string[];\n  maskAllText: boolean;\n  privacyOptions: ReturnType<typeof getPrivacyOptions>;\n  key: string;\n  value: string;\n  el: HTMLElement;\n}\n\n/**\n * Masks an attribute if necessary, otherwise return attribute value as-is.\n */\nexport function maskAttribute({\n  el,\n  key,\n  maskAttributes,\n  maskAllText,\n  privacyOptions,\n  value,\n}: MaskAttributeParams): string {\n  // We only mask attributes if `maskAllText` is true\n  if (!maskAllText) {\n    return value;\n  }\n\n  // unmaskTextSelector takes precendence\n  if (privacyOptions.unmaskTextSelector && el.matches(privacyOptions.unmaskTextSelector)) {\n    return value;\n  }\n\n  if (\n    maskAttributes.includes(key) ||\n    // Need to mask `value` attribute for `<input>` if it's a button-like\n    // type\n    (key === 'value' && el.tagName === 'INPUT' && ['submit', 'button'].includes(el.getAttribute('type') || ''))\n  ) {\n    return value.replace(/[\\S]/g, '*');\n  }\n\n  return value;\n}\n", "import { getClient } from '@sentry/core';\nimport type { BrowserClientReplayOptions, Integration, IntegrationFn } from '@sentry/types';\nimport { consoleSandbox, dropUndefinedKeys, isBrowser } from '@sentry/utils';\n\nimport {\n  DEFAULT_FLUSH_MAX_DELAY,\n  DEFAULT_FLUSH_MIN_DELAY,\n  MAX_REPLAY_DURATION,\n  MIN_REPLAY_DURATION,\n  MIN_REPLAY_DURATION_LIMIT,\n} from './constants';\nimport { ReplayContainer } from './replay';\nimport type {\n  RecordingOptions,\n  ReplayCanvasIntegrationOptions,\n  ReplayConfiguration,\n  ReplayPluginOptions,\n  SendBufferedReplayOptions,\n} from './types';\nimport { getPrivacyOptions } from './util/getPrivacyOptions';\nimport { maskAttribute } from './util/maskAttribute';\n\nconst MEDIA_SELECTORS =\n  'img,image,svg,video,object,picture,embed,map,audio,link[rel=\"icon\"],link[rel=\"apple-touch-icon\"]';\n\nconst DEFAULT_NETWORK_HEADERS = ['content-length', 'content-type', 'accept'];\n\nlet _initialized = false;\n\ntype InitialReplayPluginOptions = Omit<ReplayPluginOptions, 'sessionSampleRate' | 'errorSampleRate'> &\n  Partial<Pick<ReplayPluginOptions, 'sessionSampleRate' | 'errorSampleRate'>>;\n\nexport const replayIntegration = ((options?: ReplayConfiguration) => {\n  // eslint-disable-next-line deprecation/deprecation\n  return new Replay(options);\n}) satisfies IntegrationFn;\n\n/**\n * The main replay integration class, to be passed to `init({  integrations: [] })`.\n * @deprecated Use `replayIntegration()` instead.\n */\nexport class Replay implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'Replay';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string;\n\n  /**\n   * Options to pass to `rrweb.record()`\n   */\n  private readonly _recordingOptions: RecordingOptions;\n\n  /**\n   * Initial options passed to the replay integration, merged with default values.\n   * Note: `sessionSampleRate` and `errorSampleRate` are not required here, as they\n   * can only be finally set when setupOnce() is called.\n   *\n   * @private\n   */\n  private readonly _initialOptions: InitialReplayPluginOptions;\n\n  private _replay?: ReplayContainer;\n\n  public constructor({\n    flushMinDelay = DEFAULT_FLUSH_MIN_DELAY,\n    flushMaxDelay = DEFAULT_FLUSH_MAX_DELAY,\n    minReplayDuration = MIN_REPLAY_DURATION,\n    maxReplayDuration = MAX_REPLAY_DURATION,\n    stickySession = true,\n    useCompression = true,\n    workerUrl,\n    _experiments = {},\n    sessionSampleRate,\n    errorSampleRate,\n    maskAllText = true,\n    maskAllInputs = true,\n    blockAllMedia = true,\n\n    mutationBreadcrumbLimit = 750,\n    mutationLimit = 10_000,\n\n    slowClickTimeout = 7_000,\n    slowClickIgnoreSelectors = [],\n\n    networkDetailAllowUrls = [],\n    networkDetailDenyUrls = [],\n    networkCaptureBodies = true,\n    networkRequestHeaders = [],\n    networkResponseHeaders = [],\n\n    mask = [],\n    maskAttributes = ['title', 'placeholder'],\n    unmask = [],\n    block = [],\n    unblock = [],\n    ignore = [],\n    maskFn,\n\n    beforeAddRecordingEvent,\n    beforeErrorSampling,\n\n    // eslint-disable-next-line deprecation/deprecation\n    blockClass,\n    // eslint-disable-next-line deprecation/deprecation\n    blockSelector,\n    // eslint-disable-next-line deprecation/deprecation\n    maskInputOptions,\n    // eslint-disable-next-line deprecation/deprecation\n    maskTextClass,\n    // eslint-disable-next-line deprecation/deprecation\n    maskTextSelector,\n    // eslint-disable-next-line deprecation/deprecation\n    ignoreClass,\n  }: ReplayConfiguration = {}) {\n    // eslint-disable-next-line deprecation/deprecation\n    this.name = Replay.id;\n\n    const privacyOptions = getPrivacyOptions({\n      mask,\n      unmask,\n      block,\n      unblock,\n      ignore,\n      blockClass,\n      blockSelector,\n      maskTextClass,\n      maskTextSelector,\n      ignoreClass,\n    });\n\n    this._recordingOptions = {\n      maskAllInputs,\n      maskAllText,\n      maskInputOptions: { ...(maskInputOptions || {}), password: true },\n      maskTextFn: maskFn,\n      maskInputFn: maskFn,\n      maskAttributeFn: (key: string, value: string, el: HTMLElement): string =>\n        maskAttribute({\n          maskAttributes,\n          maskAllText,\n          privacyOptions,\n          key,\n          value,\n          el,\n        }),\n\n      ...privacyOptions,\n\n      // Our defaults\n      slimDOMOptions: 'all',\n      inlineStylesheet: true,\n      // Disable inline images as it will increase segment/replay size\n      inlineImages: false,\n      // collect fonts, but be aware that `sentry.io` needs to be an allowed\n      // origin for playback\n      collectFonts: true,\n      errorHandler: (err: Error & { __rrweb__?: boolean }) => {\n        try {\n          err.__rrweb__ = true;\n        } catch (error) {\n          // ignore errors here\n          // this can happen if the error is frozen or does not allow mutation for other reasons\n        }\n      },\n    };\n\n    this._initialOptions = {\n      flushMinDelay,\n      flushMaxDelay,\n      minReplayDuration: Math.min(minReplayDuration, MIN_REPLAY_DURATION_LIMIT),\n      maxReplayDuration: Math.min(maxReplayDuration, MAX_REPLAY_DURATION),\n      stickySession,\n      sessionSampleRate,\n      errorSampleRate,\n      useCompression,\n      workerUrl,\n      blockAllMedia,\n      maskAllInputs,\n      maskAllText,\n      mutationBreadcrumbLimit,\n      mutationLimit,\n      slowClickTimeout,\n      slowClickIgnoreSelectors,\n      networkDetailAllowUrls,\n      networkDetailDenyUrls,\n      networkCaptureBodies,\n      networkRequestHeaders: _getMergedNetworkHeaders(networkRequestHeaders),\n      networkResponseHeaders: _getMergedNetworkHeaders(networkResponseHeaders),\n      beforeAddRecordingEvent,\n      beforeErrorSampling,\n\n      _experiments,\n    };\n\n    if (typeof sessionSampleRate === 'number') {\n      // eslint-disable-next-line\n      console.warn(\n        `[Replay] You are passing \\`sessionSampleRate\\` to the Replay integration.\nThis option is deprecated and will be removed soon.\nInstead, configure \\`replaysSessionSampleRate\\` directly in the SDK init options, e.g.:\nSentry.init({ replaysSessionSampleRate: ${sessionSampleRate} })`,\n      );\n\n      this._initialOptions.sessionSampleRate = sessionSampleRate;\n    }\n\n    if (typeof errorSampleRate === 'number') {\n      // eslint-disable-next-line\n      console.warn(\n        `[Replay] You are passing \\`errorSampleRate\\` to the Replay integration.\nThis option is deprecated and will be removed soon.\nInstead, configure \\`replaysOnErrorSampleRate\\` directly in the SDK init options, e.g.:\nSentry.init({ replaysOnErrorSampleRate: ${errorSampleRate} })`,\n      );\n\n      this._initialOptions.errorSampleRate = errorSampleRate;\n    }\n\n    if (this._initialOptions.blockAllMedia) {\n      // `blockAllMedia` is a more user friendly option to configure blocking\n      // embedded media elements\n      this._recordingOptions.blockSelector = !this._recordingOptions.blockSelector\n        ? MEDIA_SELECTORS\n        : `${this._recordingOptions.blockSelector},${MEDIA_SELECTORS}`;\n    }\n\n    if (this._isInitialized && isBrowser()) {\n      throw new Error('Multiple Sentry Session Replay instances are not supported');\n    }\n\n    this._isInitialized = true;\n  }\n\n  /** If replay has already been initialized */\n  protected get _isInitialized(): boolean {\n    return _initialized;\n  }\n\n  /** Update _isInitialized */\n  protected set _isInitialized(value: boolean) {\n    _initialized = value;\n  }\n\n  /**\n   * Setup and initialize replay container\n   */\n  public setupOnce(): void {\n    if (!isBrowser()) {\n      return;\n    }\n\n    this._setup();\n\n    // Once upon a time, we tried to create a transaction in `setupOnce` and it would\n    // potentially create a transaction before some native SDK integrations have run\n    // and applied their own global event processor. An example is:\n    // https://github.com/getsentry/sentry-javascript/blob/b47ceafbdac7f8b99093ce6023726ad4687edc48/packages/browser/src/integrations/useragent.ts\n    //\n    // So we call `this._initialize()` in next event loop as a workaround to wait for other\n    // global event processors to finish. This is no longer needed, but keeping it\n    // here to avoid any future issues.\n    setTimeout(() => this._initialize());\n  }\n\n  /**\n   * Start a replay regardless of sampling rate. Calling this will always\n   * create a new session. Will throw an error if replay is already in progress.\n   *\n   * Creates or loads a session, attaches listeners to varying events (DOM,\n   * PerformanceObserver, Recording, Sentry SDK, etc)\n   */\n  public start(): void {\n    if (!this._replay) {\n      return;\n    }\n\n    this._replay.start();\n  }\n\n  /**\n   * Start replay buffering. Buffers until `flush()` is called or, if\n   * `replaysOnErrorSampleRate` > 0, until an error occurs.\n   */\n  public startBuffering(): void {\n    if (!this._replay) {\n      return;\n    }\n\n    this._replay.startBuffering();\n  }\n\n  /**\n   * Currently, this needs to be manually called (e.g. for tests). Sentry SDK\n   * does not support a teardown\n   */\n  public stop(): Promise<void> {\n    if (!this._replay) {\n      return Promise.resolve();\n    }\n\n    return this._replay.stop({ forceFlush: this._replay.recordingMode === 'session' });\n  }\n\n  /**\n   * If not in \"session\" recording mode, flush event buffer which will create a new replay.\n   * Unless `continueRecording` is false, the replay will continue to record and\n   * behave as a \"session\"-based replay.\n   *\n   * Otherwise, queue up a flush.\n   */\n  public flush(options?: SendBufferedReplayOptions): Promise<void> {\n    if (!this._replay || !this._replay.isEnabled()) {\n      return Promise.resolve();\n    }\n\n    return this._replay.sendBufferedReplayOrFlush(options);\n  }\n\n  /**\n   * Get the current session ID.\n   */\n  public getReplayId(): string | undefined {\n    if (!this._replay || !this._replay.isEnabled()) {\n      return;\n    }\n\n    return this._replay.getSessionId();\n  }\n\n  /**\n   * Initializes replay.\n   */\n  protected _initialize(): void {\n    if (!this._replay) {\n      return;\n    }\n\n    // We have to run this in _initialize, because this runs in setTimeout\n    // So when this runs all integrations have been added\n    // Before this, we cannot access integrations on the client,\n    // so we need to mutate the options here\n    this._maybeLoadFromReplayCanvasIntegration();\n\n    this._replay.initializeSampling();\n  }\n\n  /** Setup the integration. */\n  private _setup(): void {\n    // Client is not available in constructor, so we need to wait until setupOnce\n    const finalOptions = loadReplayOptionsFromClient(this._initialOptions);\n\n    this._replay = new ReplayContainer({\n      options: finalOptions,\n      recordingOptions: this._recordingOptions,\n    });\n  }\n\n  /** Get canvas options from ReplayCanvas integration, if it is also added. */\n  private _maybeLoadFromReplayCanvasIntegration(): void {\n    // To save bundle size, we skip checking for stuff here\n    // and instead just try-catch everything - as generally this should all be defined\n    /* eslint-disable @typescript-eslint/no-non-null-assertion */\n    try {\n      const client = getClient()!;\n      const canvasIntegration = client.getIntegrationByName!('ReplayCanvas') as Integration & {\n        getOptions(): ReplayCanvasIntegrationOptions;\n      };\n      if (!canvasIntegration) {\n        return;\n      }\n\n      this._replay!['_canvas'] = canvasIntegration.getOptions();\n    } catch {\n      // ignore errors here\n    }\n    /* eslint-enable @typescript-eslint/no-non-null-assertion */\n  }\n}\n\n/** Parse Replay-related options from SDK options */\nfunction loadReplayOptionsFromClient(initialOptions: InitialReplayPluginOptions): ReplayPluginOptions {\n  const client = getClient();\n  const opt = client && (client.getOptions() as BrowserClientReplayOptions);\n\n  const finalOptions = { sessionSampleRate: 0, errorSampleRate: 0, ...dropUndefinedKeys(initialOptions) };\n\n  if (!opt) {\n    consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.warn('SDK client is not available.');\n    });\n    return finalOptions;\n  }\n\n  if (\n    initialOptions.sessionSampleRate == null && // TODO remove once deprecated rates are removed\n    initialOptions.errorSampleRate == null && // TODO remove once deprecated rates are removed\n    opt.replaysSessionSampleRate == null &&\n    opt.replaysOnErrorSampleRate == null\n  ) {\n    consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.warn(\n        'Replay is disabled because neither `replaysSessionSampleRate` nor `replaysOnErrorSampleRate` are set.',\n      );\n    });\n  }\n\n  if (typeof opt.replaysSessionSampleRate === 'number') {\n    finalOptions.sessionSampleRate = opt.replaysSessionSampleRate;\n  }\n\n  if (typeof opt.replaysOnErrorSampleRate === 'number') {\n    finalOptions.errorSampleRate = opt.replaysOnErrorSampleRate;\n  }\n\n  return finalOptions;\n}\n\nfunction _getMergedNetworkHeaders(headers: string[]): string[] {\n  return [...DEFAULT_NETWORK_HEADERS, ...headers.map(header => header.toLowerCase())];\n}\n", "import { getClient } from '@sentry/core';\nimport type { replayIntegration } from '../integration';\n\n/**\n * This is a small utility to get a type-safe instance of the Replay integration.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function getReplay(): ReturnType<typeof replayIntegration> | undefined {\n  const client = getClient();\n  return (\n    client && client.getIntegrationByName && client.getIntegrationByName<ReturnType<typeof replayIntegration>>('Replay')\n  );\n}\n", "var NodeType;\r\n(function (NodeType) {\r\n    NodeType[NodeType[\"Document\"] = 0] = \"Document\";\r\n    NodeType[NodeType[\"DocumentType\"] = 1] = \"DocumentType\";\r\n    NodeType[NodeType[\"Element\"] = 2] = \"Element\";\r\n    NodeType[NodeType[\"Text\"] = 3] = \"Text\";\r\n    NodeType[NodeType[\"CDATA\"] = 4] = \"CDATA\";\r\n    NodeType[NodeType[\"Comment\"] = 5] = \"Comment\";\r\n})(NodeType || (NodeType = {}));\n\nfunction isElement(n) {\r\n    return n.nodeType === n.ELEMENT_NODE;\r\n}\r\nfunction isShadowRoot(n) {\r\n    const host = n?.host;\r\n    return Boolean(host?.shadowRoot === n);\r\n}\r\nfunction isNativeShadowDom(shadowRoot) {\r\n    return Object.prototype.toString.call(shadowRoot) === '[object ShadowRoot]';\r\n}\r\nfunction fixBrowserCompatibilityIssuesInCSS(cssText) {\r\n    if (cssText.includes(' background-clip: text;') &&\r\n        !cssText.includes(' -webkit-background-clip: text;')) {\r\n        cssText = cssText.replace(' background-clip: text;', ' -webkit-background-clip: text; background-clip: text;');\r\n    }\r\n    return cssText;\r\n}\r\nfunction escapeImportStatement(rule) {\r\n    const { cssText } = rule;\r\n    if (cssText.split('\"').length < 3)\r\n        return cssText;\r\n    const statement = ['@import', `url(${JSON.stringify(rule.href)})`];\r\n    if (rule.layerName === '') {\r\n        statement.push(`layer`);\r\n    }\r\n    else if (rule.layerName) {\r\n        statement.push(`layer(${rule.layerName})`);\r\n    }\r\n    if (rule.supportsText) {\r\n        statement.push(`supports(${rule.supportsText})`);\r\n    }\r\n    if (rule.media.length) {\r\n        statement.push(rule.media.mediaText);\r\n    }\r\n    return statement.join(' ') + ';';\r\n}\r\nfunction stringifyStylesheet(s) {\r\n    try {\r\n        const rules = s.rules || s.cssRules;\r\n        return rules\r\n            ? fixBrowserCompatibilityIssuesInCSS(Array.from(rules, stringifyRule).join(''))\r\n            : null;\r\n    }\r\n    catch (error) {\r\n        return null;\r\n    }\r\n}\r\nfunction stringifyRule(rule) {\r\n    let importStringified;\r\n    if (isCSSImportRule(rule)) {\r\n        try {\r\n            importStringified =\r\n                stringifyStylesheet(rule.styleSheet) ||\r\n                    escapeImportStatement(rule);\r\n        }\r\n        catch (error) {\r\n        }\r\n    }\r\n    else if (isCSSStyleRule(rule) && rule.selectorText.includes(':')) {\r\n        return fixSafariColons(rule.cssText);\r\n    }\r\n    return importStringified || rule.cssText;\r\n}\r\nfunction fixSafariColons(cssStringified) {\r\n    const regex = /(\\[(?:[\\w-]+)[^\\\\])(:(?:[\\w-]+)\\])/gm;\r\n    return cssStringified.replace(regex, '$1\\\\$2');\r\n}\r\nfunction isCSSImportRule(rule) {\r\n    return 'styleSheet' in rule;\r\n}\r\nfunction isCSSStyleRule(rule) {\r\n    return 'selectorText' in rule;\r\n}\r\nclass Mirror {\r\n    constructor() {\r\n        this.idNodeMap = new Map();\r\n        this.nodeMetaMap = new WeakMap();\r\n    }\r\n    getId(n) {\r\n        if (!n)\r\n            return -1;\r\n        const id = this.getMeta(n)?.id;\r\n        return id ?? -1;\r\n    }\r\n    getNode(id) {\r\n        return this.idNodeMap.get(id) || null;\r\n    }\r\n    getIds() {\r\n        return Array.from(this.idNodeMap.keys());\r\n    }\r\n    getMeta(n) {\r\n        return this.nodeMetaMap.get(n) || null;\r\n    }\r\n    removeNodeFromMap(n) {\r\n        const id = this.getId(n);\r\n        this.idNodeMap.delete(id);\r\n        if (n.childNodes) {\r\n            n.childNodes.forEach((childNode) => this.removeNodeFromMap(childNode));\r\n        }\r\n    }\r\n    has(id) {\r\n        return this.idNodeMap.has(id);\r\n    }\r\n    hasNode(node) {\r\n        return this.nodeMetaMap.has(node);\r\n    }\r\n    add(n, meta) {\r\n        const id = meta.id;\r\n        this.idNodeMap.set(id, n);\r\n        this.nodeMetaMap.set(n, meta);\r\n    }\r\n    replace(id, n) {\r\n        const oldNode = this.getNode(id);\r\n        if (oldNode) {\r\n            const meta = this.nodeMetaMap.get(oldNode);\r\n            if (meta)\r\n                this.nodeMetaMap.set(n, meta);\r\n        }\r\n        this.idNodeMap.set(id, n);\r\n    }\r\n    reset() {\r\n        this.idNodeMap = new Map();\r\n        this.nodeMetaMap = new WeakMap();\r\n    }\r\n}\r\nfunction createMirror() {\r\n    return new Mirror();\r\n}\r\nfunction shouldMaskInput({ maskInputOptions, tagName, type, }) {\r\n    if (tagName === 'OPTION') {\r\n        tagName = 'SELECT';\r\n    }\r\n    return Boolean(maskInputOptions[tagName.toLowerCase()] ||\r\n        (type && maskInputOptions[type]) ||\r\n        type === 'password' ||\r\n        (tagName === 'INPUT' && !type && maskInputOptions['text']));\r\n}\r\nfunction maskInputValue({ isMasked, element, value, maskInputFn, }) {\r\n    let text = value || '';\r\n    if (!isMasked) {\r\n        return text;\r\n    }\r\n    if (maskInputFn) {\r\n        text = maskInputFn(text, element);\r\n    }\r\n    return '*'.repeat(text.length);\r\n}\r\nfunction toLowerCase(str) {\r\n    return str.toLowerCase();\r\n}\r\nfunction toUpperCase(str) {\r\n    return str.toUpperCase();\r\n}\r\nconst ORIGINAL_ATTRIBUTE_NAME = '__rrweb_original__';\r\nfunction is2DCanvasBlank(canvas) {\r\n    const ctx = canvas.getContext('2d');\r\n    if (!ctx)\r\n        return true;\r\n    const chunkSize = 50;\r\n    for (let x = 0; x < canvas.width; x += chunkSize) {\r\n        for (let y = 0; y < canvas.height; y += chunkSize) {\r\n            const getImageData = ctx.getImageData;\r\n            const originalGetImageData = ORIGINAL_ATTRIBUTE_NAME in getImageData\r\n                ? getImageData[ORIGINAL_ATTRIBUTE_NAME]\r\n                : getImageData;\r\n            const pixelBuffer = new Uint32Array(originalGetImageData.call(ctx, x, y, Math.min(chunkSize, canvas.width - x), Math.min(chunkSize, canvas.height - y)).data.buffer);\r\n            if (pixelBuffer.some((pixel) => pixel !== 0))\r\n                return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction isNodeMetaEqual(a, b) {\r\n    if (!a || !b || a.type !== b.type)\r\n        return false;\r\n    if (a.type === NodeType.Document)\r\n        return a.compatMode === b.compatMode;\r\n    else if (a.type === NodeType.DocumentType)\r\n        return (a.name === b.name &&\r\n            a.publicId === b.publicId &&\r\n            a.systemId === b.systemId);\r\n    else if (a.type === NodeType.Comment ||\r\n        a.type === NodeType.Text ||\r\n        a.type === NodeType.CDATA)\r\n        return a.textContent === b.textContent;\r\n    else if (a.type === NodeType.Element)\r\n        return (a.tagName === b.tagName &&\r\n            JSON.stringify(a.attributes) ===\r\n                JSON.stringify(b.attributes) &&\r\n            a.isSVG === b.isSVG &&\r\n            a.needBlock === b.needBlock);\r\n    return false;\r\n}\r\nfunction getInputType(element) {\r\n    const type = element.type;\r\n    return element.hasAttribute('data-rr-is-password')\r\n        ? 'password'\r\n        : type\r\n            ?\r\n                toLowerCase(type)\r\n            : null;\r\n}\r\nfunction getInputValue(el, tagName, type) {\r\n    if (tagName === 'INPUT' && (type === 'radio' || type === 'checkbox')) {\r\n        return el.getAttribute('value') || '';\r\n    }\r\n    return el.value;\r\n}\n\nlet _id = 1;\r\nconst tagNameRegex = new RegExp('[^a-z0-9-_:]');\r\nconst IGNORED_NODE = -2;\r\nfunction genId() {\r\n    return _id++;\r\n}\r\nfunction getValidTagName(element) {\r\n    if (element instanceof HTMLFormElement) {\r\n        return 'form';\r\n    }\r\n    const processedTagName = toLowerCase(element.tagName);\r\n    if (tagNameRegex.test(processedTagName)) {\r\n        return 'div';\r\n    }\r\n    return processedTagName;\r\n}\r\nfunction extractOrigin(url) {\r\n    let origin = '';\r\n    if (url.indexOf('//') > -1) {\r\n        origin = url.split('/').slice(0, 3).join('/');\r\n    }\r\n    else {\r\n        origin = url.split('/')[0];\r\n    }\r\n    origin = origin.split('?')[0];\r\n    return origin;\r\n}\r\nlet canvasService;\r\nlet canvasCtx;\r\nconst URL_IN_CSS_REF = /url\\((?:(')([^']*)'|(\")(.*?)\"|([^)]*))\\)/gm;\r\nconst URL_PROTOCOL_MATCH = /^(?:[a-z+]+:)?\\/\\//i;\r\nconst URL_WWW_MATCH = /^www\\..*/i;\r\nconst DATA_URI = /^(data:)([^,]*),(.*)/i;\r\nfunction absoluteToStylesheet(cssText, href) {\r\n    return (cssText || '').replace(URL_IN_CSS_REF, (origin, quote1, path1, quote2, path2, path3) => {\r\n        const filePath = path1 || path2 || path3;\r\n        const maybeQuote = quote1 || quote2 || '';\r\n        if (!filePath) {\r\n            return origin;\r\n        }\r\n        if (URL_PROTOCOL_MATCH.test(filePath) || URL_WWW_MATCH.test(filePath)) {\r\n            return `url(${maybeQuote}${filePath}${maybeQuote})`;\r\n        }\r\n        if (DATA_URI.test(filePath)) {\r\n            return `url(${maybeQuote}${filePath}${maybeQuote})`;\r\n        }\r\n        if (filePath[0] === '/') {\r\n            return `url(${maybeQuote}${extractOrigin(href) + filePath}${maybeQuote})`;\r\n        }\r\n        const stack = href.split('/');\r\n        const parts = filePath.split('/');\r\n        stack.pop();\r\n        for (const part of parts) {\r\n            if (part === '.') {\r\n                continue;\r\n            }\r\n            else if (part === '..') {\r\n                stack.pop();\r\n            }\r\n            else {\r\n                stack.push(part);\r\n            }\r\n        }\r\n        return `url(${maybeQuote}${stack.join('/')}${maybeQuote})`;\r\n    });\r\n}\r\nconst SRCSET_NOT_SPACES = /^[^ \\t\\n\\r\\u000c]+/;\r\nconst SRCSET_COMMAS_OR_SPACES = /^[, \\t\\n\\r\\u000c]+/;\r\nfunction getAbsoluteSrcsetString(doc, attributeValue) {\r\n    if (attributeValue.trim() === '') {\r\n        return attributeValue;\r\n    }\r\n    let pos = 0;\r\n    function collectCharacters(regEx) {\r\n        let chars;\r\n        const match = regEx.exec(attributeValue.substring(pos));\r\n        if (match) {\r\n            chars = match[0];\r\n            pos += chars.length;\r\n            return chars;\r\n        }\r\n        return '';\r\n    }\r\n    const output = [];\r\n    while (true) {\r\n        collectCharacters(SRCSET_COMMAS_OR_SPACES);\r\n        if (pos >= attributeValue.length) {\r\n            break;\r\n        }\r\n        let url = collectCharacters(SRCSET_NOT_SPACES);\r\n        if (url.slice(-1) === ',') {\r\n            url = absoluteToDoc(doc, url.substring(0, url.length - 1));\r\n            output.push(url);\r\n        }\r\n        else {\r\n            let descriptorsStr = '';\r\n            url = absoluteToDoc(doc, url);\r\n            let inParens = false;\r\n            while (true) {\r\n                const c = attributeValue.charAt(pos);\r\n                if (c === '') {\r\n                    output.push((url + descriptorsStr).trim());\r\n                    break;\r\n                }\r\n                else if (!inParens) {\r\n                    if (c === ',') {\r\n                        pos += 1;\r\n                        output.push((url + descriptorsStr).trim());\r\n                        break;\r\n                    }\r\n                    else if (c === '(') {\r\n                        inParens = true;\r\n                    }\r\n                }\r\n                else {\r\n                    if (c === ')') {\r\n                        inParens = false;\r\n                    }\r\n                }\r\n                descriptorsStr += c;\r\n                pos += 1;\r\n            }\r\n        }\r\n    }\r\n    return output.join(', ');\r\n}\r\nfunction absoluteToDoc(doc, attributeValue) {\r\n    if (!attributeValue || attributeValue.trim() === '') {\r\n        return attributeValue;\r\n    }\r\n    const a = doc.createElement('a');\r\n    a.href = attributeValue;\r\n    return a.href;\r\n}\r\nfunction isSVGElement(el) {\r\n    return Boolean(el.tagName === 'svg' || el.ownerSVGElement);\r\n}\r\nfunction getHref() {\r\n    const a = document.createElement('a');\r\n    a.href = '';\r\n    return a.href;\r\n}\r\nfunction transformAttribute(doc, tagName, name, value, element, maskAttributeFn) {\r\n    if (!value) {\r\n        return value;\r\n    }\r\n    if (name === 'src' ||\r\n        (name === 'href' && !(tagName === 'use' && value[0] === '#'))) {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    else if (name === 'xlink:href' && value[0] !== '#') {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    else if (name === 'background' &&\r\n        (tagName === 'table' || tagName === 'td' || tagName === 'th')) {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    else if (name === 'srcset') {\r\n        return getAbsoluteSrcsetString(doc, value);\r\n    }\r\n    else if (name === 'style') {\r\n        return absoluteToStylesheet(value, getHref());\r\n    }\r\n    else if (tagName === 'object' && name === 'data') {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    if (typeof maskAttributeFn === 'function') {\r\n        return maskAttributeFn(name, value, element);\r\n    }\r\n    return value;\r\n}\r\nfunction ignoreAttribute(tagName, name, _value) {\r\n    return (tagName === 'video' || tagName === 'audio') && name === 'autoplay';\r\n}\r\nfunction _isBlockedElement(element, blockClass, blockSelector, unblockSelector) {\r\n    try {\r\n        if (unblockSelector && element.matches(unblockSelector)) {\r\n            return false;\r\n        }\r\n        if (typeof blockClass === 'string') {\r\n            if (element.classList.contains(blockClass)) {\r\n                return true;\r\n            }\r\n        }\r\n        else {\r\n            for (let eIndex = element.classList.length; eIndex--;) {\r\n                const className = element.classList[eIndex];\r\n                if (blockClass.test(className)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        if (blockSelector) {\r\n            return element.matches(blockSelector);\r\n        }\r\n    }\r\n    catch (e) {\r\n    }\r\n    return false;\r\n}\r\nfunction elementClassMatchesRegex(el, regex) {\r\n    for (let eIndex = el.classList.length; eIndex--;) {\r\n        const className = el.classList[eIndex];\r\n        if (regex.test(className)) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction distanceToMatch(node, matchPredicate, limit = Infinity, distance = 0) {\r\n    if (!node)\r\n        return -1;\r\n    if (node.nodeType !== node.ELEMENT_NODE)\r\n        return -1;\r\n    if (distance > limit)\r\n        return -1;\r\n    if (matchPredicate(node))\r\n        return distance;\r\n    return distanceToMatch(node.parentNode, matchPredicate, limit, distance + 1);\r\n}\r\nfunction createMatchPredicate(className, selector) {\r\n    return (node) => {\r\n        const el = node;\r\n        if (el === null)\r\n            return false;\r\n        try {\r\n            if (className) {\r\n                if (typeof className === 'string') {\r\n                    if (el.matches(`.${className}`))\r\n                        return true;\r\n                }\r\n                else if (elementClassMatchesRegex(el, className)) {\r\n                    return true;\r\n                }\r\n            }\r\n            if (selector && el.matches(selector))\r\n                return true;\r\n            return false;\r\n        }\r\n        catch {\r\n            return false;\r\n        }\r\n    };\r\n}\r\nfunction needMaskingText(node, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, maskAllText) {\r\n    try {\r\n        const el = node.nodeType === node.ELEMENT_NODE\r\n            ? node\r\n            : node.parentElement;\r\n        if (el === null)\r\n            return false;\r\n        if (el.tagName === 'INPUT') {\r\n            const autocomplete = el.getAttribute('autocomplete');\r\n            const disallowedAutocompleteValues = [\r\n                'current-password',\r\n                'new-password',\r\n                'cc-number',\r\n                'cc-exp',\r\n                'cc-exp-month',\r\n                'cc-exp-year',\r\n                'cc-csc',\r\n            ];\r\n            if (disallowedAutocompleteValues.includes(autocomplete)) {\r\n                return true;\r\n            }\r\n        }\r\n        let maskDistance = -1;\r\n        let unmaskDistance = -1;\r\n        if (maskAllText) {\r\n            unmaskDistance = distanceToMatch(el, createMatchPredicate(unmaskTextClass, unmaskTextSelector));\r\n            if (unmaskDistance < 0) {\r\n                return true;\r\n            }\r\n            maskDistance = distanceToMatch(el, createMatchPredicate(maskTextClass, maskTextSelector), unmaskDistance >= 0 ? unmaskDistance : Infinity);\r\n        }\r\n        else {\r\n            maskDistance = distanceToMatch(el, createMatchPredicate(maskTextClass, maskTextSelector));\r\n            if (maskDistance < 0) {\r\n                return false;\r\n            }\r\n            unmaskDistance = distanceToMatch(el, createMatchPredicate(unmaskTextClass, unmaskTextSelector), maskDistance >= 0 ? maskDistance : Infinity);\r\n        }\r\n        return maskDistance >= 0\r\n            ? unmaskDistance >= 0\r\n                ? maskDistance <= unmaskDistance\r\n                : true\r\n            : unmaskDistance >= 0\r\n                ? false\r\n                : !!maskAllText;\r\n    }\r\n    catch (e) {\r\n    }\r\n    return !!maskAllText;\r\n}\r\nfunction onceIframeLoaded(iframeEl, listener, iframeLoadTimeout) {\r\n    const win = iframeEl.contentWindow;\r\n    if (!win) {\r\n        return;\r\n    }\r\n    let fired = false;\r\n    let readyState;\r\n    try {\r\n        readyState = win.document.readyState;\r\n    }\r\n    catch (error) {\r\n        return;\r\n    }\r\n    if (readyState !== 'complete') {\r\n        const timer = setTimeout(() => {\r\n            if (!fired) {\r\n                listener();\r\n                fired = true;\r\n            }\r\n        }, iframeLoadTimeout);\r\n        iframeEl.addEventListener('load', () => {\r\n            clearTimeout(timer);\r\n            fired = true;\r\n            listener();\r\n        });\r\n        return;\r\n    }\r\n    const blankUrl = 'about:blank';\r\n    if (win.location.href !== blankUrl ||\r\n        iframeEl.src === blankUrl ||\r\n        iframeEl.src === '') {\r\n        setTimeout(listener, 0);\r\n        return iframeEl.addEventListener('load', listener);\r\n    }\r\n    iframeEl.addEventListener('load', listener);\r\n}\r\nfunction onceStylesheetLoaded(link, listener, styleSheetLoadTimeout) {\r\n    let fired = false;\r\n    let styleSheetLoaded;\r\n    try {\r\n        styleSheetLoaded = link.sheet;\r\n    }\r\n    catch (error) {\r\n        return;\r\n    }\r\n    if (styleSheetLoaded)\r\n        return;\r\n    const timer = setTimeout(() => {\r\n        if (!fired) {\r\n            listener();\r\n            fired = true;\r\n        }\r\n    }, styleSheetLoadTimeout);\r\n    link.addEventListener('load', () => {\r\n        clearTimeout(timer);\r\n        fired = true;\r\n        listener();\r\n    });\r\n}\r\nfunction serializeNode(n, options) {\r\n    const { doc, mirror, blockClass, blockSelector, unblockSelector, maskAllText, maskAttributeFn, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, inlineStylesheet, maskInputOptions = {}, maskTextFn, maskInputFn, dataURLOptions = {}, inlineImages, recordCanvas, keepIframeSrcFn, newlyAddedElement = false, } = options;\r\n    const rootId = getRootId(doc, mirror);\r\n    switch (n.nodeType) {\r\n        case n.DOCUMENT_NODE:\r\n            if (n.compatMode !== 'CSS1Compat') {\r\n                return {\r\n                    type: NodeType.Document,\r\n                    childNodes: [],\r\n                    compatMode: n.compatMode,\r\n                };\r\n            }\r\n            else {\r\n                return {\r\n                    type: NodeType.Document,\r\n                    childNodes: [],\r\n                };\r\n            }\r\n        case n.DOCUMENT_TYPE_NODE:\r\n            return {\r\n                type: NodeType.DocumentType,\r\n                name: n.name,\r\n                publicId: n.publicId,\r\n                systemId: n.systemId,\r\n                rootId,\r\n            };\r\n        case n.ELEMENT_NODE:\r\n            return serializeElementNode(n, {\r\n                doc,\r\n                blockClass,\r\n                blockSelector,\r\n                unblockSelector,\r\n                inlineStylesheet,\r\n                maskAttributeFn,\r\n                maskInputOptions,\r\n                maskInputFn,\r\n                dataURLOptions,\r\n                inlineImages,\r\n                recordCanvas,\r\n                keepIframeSrcFn,\r\n                newlyAddedElement,\r\n                rootId,\r\n                maskAllText,\r\n                maskTextClass,\r\n                unmaskTextClass,\r\n                maskTextSelector,\r\n                unmaskTextSelector,\r\n            });\r\n        case n.TEXT_NODE:\r\n            return serializeTextNode(n, {\r\n                maskAllText,\r\n                maskTextClass,\r\n                unmaskTextClass,\r\n                maskTextSelector,\r\n                unmaskTextSelector,\r\n                maskTextFn,\r\n                maskInputOptions,\r\n                maskInputFn,\r\n                rootId,\r\n            });\r\n        case n.CDATA_SECTION_NODE:\r\n            return {\r\n                type: NodeType.CDATA,\r\n                textContent: '',\r\n                rootId,\r\n            };\r\n        case n.COMMENT_NODE:\r\n            return {\r\n                type: NodeType.Comment,\r\n                textContent: n.textContent || '',\r\n                rootId,\r\n            };\r\n        default:\r\n            return false;\r\n    }\r\n}\r\nfunction getRootId(doc, mirror) {\r\n    if (!mirror.hasNode(doc))\r\n        return undefined;\r\n    const docId = mirror.getId(doc);\r\n    return docId === 1 ? undefined : docId;\r\n}\r\nfunction serializeTextNode(n, options) {\r\n    const { maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, maskTextFn, maskInputOptions, maskInputFn, rootId, } = options;\r\n    const parentTagName = n.parentNode && n.parentNode.tagName;\r\n    let textContent = n.textContent;\r\n    const isStyle = parentTagName === 'STYLE' ? true : undefined;\r\n    const isScript = parentTagName === 'SCRIPT' ? true : undefined;\r\n    const isTextarea = parentTagName === 'TEXTAREA' ? true : undefined;\r\n    if (isStyle && textContent) {\r\n        try {\r\n            if (n.nextSibling || n.previousSibling) {\r\n            }\r\n            else if (n.parentNode.sheet?.cssRules) {\r\n                textContent = stringifyStylesheet(n.parentNode.sheet);\r\n            }\r\n        }\r\n        catch (err) {\r\n            console.warn(`Cannot get CSS styles from text's parentNode. Error: ${err}`, n);\r\n        }\r\n        textContent = absoluteToStylesheet(textContent, getHref());\r\n    }\r\n    if (isScript) {\r\n        textContent = 'SCRIPT_PLACEHOLDER';\r\n    }\r\n    const forceMask = needMaskingText(n, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, maskAllText);\r\n    if (!isStyle && !isScript && !isTextarea && textContent && forceMask) {\r\n        textContent = maskTextFn\r\n            ? maskTextFn(textContent)\r\n            : textContent.replace(/[\\S]/g, '*');\r\n    }\r\n    if (isTextarea && textContent && (maskInputOptions.textarea || forceMask)) {\r\n        textContent = maskInputFn\r\n            ? maskInputFn(textContent, n.parentNode)\r\n            : textContent.replace(/[\\S]/g, '*');\r\n    }\r\n    if (parentTagName === 'OPTION' && textContent) {\r\n        const isInputMasked = shouldMaskInput({\r\n            type: null,\r\n            tagName: parentTagName,\r\n            maskInputOptions,\r\n        });\r\n        textContent = maskInputValue({\r\n            isMasked: needMaskingText(n, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, isInputMasked),\r\n            element: n,\r\n            value: textContent,\r\n            maskInputFn,\r\n        });\r\n    }\r\n    return {\r\n        type: NodeType.Text,\r\n        textContent: textContent || '',\r\n        isStyle,\r\n        rootId,\r\n    };\r\n}\r\nfunction serializeElementNode(n, options) {\r\n    const { doc, blockClass, blockSelector, unblockSelector, inlineStylesheet, maskInputOptions = {}, maskAttributeFn, maskInputFn, dataURLOptions = {}, inlineImages, recordCanvas, keepIframeSrcFn, newlyAddedElement = false, rootId, maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, } = options;\r\n    const needBlock = _isBlockedElement(n, blockClass, blockSelector, unblockSelector);\r\n    const tagName = getValidTagName(n);\r\n    let attributes = {};\r\n    const len = n.attributes.length;\r\n    for (let i = 0; i < len; i++) {\r\n        const attr = n.attributes[i];\r\n        if (attr.name && !ignoreAttribute(tagName, attr.name, attr.value)) {\r\n            attributes[attr.name] = transformAttribute(doc, tagName, toLowerCase(attr.name), attr.value, n, maskAttributeFn);\r\n        }\r\n    }\r\n    if (tagName === 'link' && inlineStylesheet) {\r\n        const stylesheet = Array.from(doc.styleSheets).find((s) => {\r\n            return s.href === n.href;\r\n        });\r\n        let cssText = null;\r\n        if (stylesheet) {\r\n            cssText = stringifyStylesheet(stylesheet);\r\n        }\r\n        if (cssText) {\r\n            delete attributes.rel;\r\n            delete attributes.href;\r\n            attributes._cssText = absoluteToStylesheet(cssText, stylesheet.href);\r\n        }\r\n    }\r\n    if (tagName === 'style' &&\r\n        n.sheet &&\r\n        !(n.innerText || n.textContent || '').trim().length) {\r\n        const cssText = stringifyStylesheet(n.sheet);\r\n        if (cssText) {\r\n            attributes._cssText = absoluteToStylesheet(cssText, getHref());\r\n        }\r\n    }\r\n    if (tagName === 'input' ||\r\n        tagName === 'textarea' ||\r\n        tagName === 'select' ||\r\n        tagName === 'option') {\r\n        const el = n;\r\n        const type = getInputType(el);\r\n        const value = getInputValue(el, toUpperCase(tagName), type);\r\n        const checked = el.checked;\r\n        if (type !== 'submit' && type !== 'button' && value) {\r\n            const forceMask = needMaskingText(el, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, shouldMaskInput({\r\n                type,\r\n                tagName: toUpperCase(tagName),\r\n                maskInputOptions,\r\n            }));\r\n            attributes.value = maskInputValue({\r\n                isMasked: forceMask,\r\n                element: el,\r\n                value,\r\n                maskInputFn,\r\n            });\r\n        }\r\n        if (checked) {\r\n            attributes.checked = checked;\r\n        }\r\n    }\r\n    if (tagName === 'option') {\r\n        if (n.selected && !maskInputOptions['select']) {\r\n            attributes.selected = true;\r\n        }\r\n        else {\r\n            delete attributes.selected;\r\n        }\r\n    }\r\n    if (tagName === 'canvas' && recordCanvas) {\r\n        if (n.__context === '2d') {\r\n            if (!is2DCanvasBlank(n)) {\r\n                attributes.rr_dataURL = n.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            }\r\n        }\r\n        else if (!('__context' in n)) {\r\n            const canvasDataURL = n.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            const blankCanvas = document.createElement('canvas');\r\n            blankCanvas.width = n.width;\r\n            blankCanvas.height = n.height;\r\n            const blankCanvasDataURL = blankCanvas.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            if (canvasDataURL !== blankCanvasDataURL) {\r\n                attributes.rr_dataURL = canvasDataURL;\r\n            }\r\n        }\r\n    }\r\n    if (tagName === 'img' && inlineImages) {\r\n        if (!canvasService) {\r\n            canvasService = doc.createElement('canvas');\r\n            canvasCtx = canvasService.getContext('2d');\r\n        }\r\n        const image = n;\r\n        const oldValue = image.crossOrigin;\r\n        image.crossOrigin = 'anonymous';\r\n        const recordInlineImage = () => {\r\n            image.removeEventListener('load', recordInlineImage);\r\n            try {\r\n                canvasService.width = image.naturalWidth;\r\n                canvasService.height = image.naturalHeight;\r\n                canvasCtx.drawImage(image, 0, 0);\r\n                attributes.rr_dataURL = canvasService.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            }\r\n            catch (err) {\r\n                console.warn(`Cannot inline img src=${image.currentSrc}! Error: ${err}`);\r\n            }\r\n            oldValue\r\n                ? (attributes.crossOrigin = oldValue)\r\n                : image.removeAttribute('crossorigin');\r\n        };\r\n        if (image.complete && image.naturalWidth !== 0)\r\n            recordInlineImage();\r\n        else\r\n            image.addEventListener('load', recordInlineImage);\r\n    }\r\n    if (tagName === 'audio' || tagName === 'video') {\r\n        attributes.rr_mediaState = n.paused\r\n            ? 'paused'\r\n            : 'played';\r\n        attributes.rr_mediaCurrentTime = n.currentTime;\r\n    }\r\n    if (!newlyAddedElement) {\r\n        if (n.scrollLeft) {\r\n            attributes.rr_scrollLeft = n.scrollLeft;\r\n        }\r\n        if (n.scrollTop) {\r\n            attributes.rr_scrollTop = n.scrollTop;\r\n        }\r\n    }\r\n    if (needBlock) {\r\n        const { width, height } = n.getBoundingClientRect();\r\n        attributes = {\r\n            class: attributes.class,\r\n            rr_width: `${width}px`,\r\n            rr_height: `${height}px`,\r\n        };\r\n    }\r\n    if (tagName === 'iframe' && !keepIframeSrcFn(attributes.src)) {\r\n        if (!n.contentDocument) {\r\n            attributes.rr_src = attributes.src;\r\n        }\r\n        delete attributes.src;\r\n    }\r\n    let isCustomElement;\r\n    try {\r\n        if (customElements.get(tagName))\r\n            isCustomElement = true;\r\n    }\r\n    catch (e) {\r\n    }\r\n    return {\r\n        type: NodeType.Element,\r\n        tagName,\r\n        attributes,\r\n        childNodes: [],\r\n        isSVG: isSVGElement(n) || undefined,\r\n        needBlock,\r\n        rootId,\r\n        isCustom: isCustomElement,\r\n    };\r\n}\r\nfunction lowerIfExists(maybeAttr) {\r\n    if (maybeAttr === undefined || maybeAttr === null) {\r\n        return '';\r\n    }\r\n    else {\r\n        return maybeAttr.toLowerCase();\r\n    }\r\n}\r\nfunction slimDOMExcluded(sn, slimDOMOptions) {\r\n    if (slimDOMOptions.comment && sn.type === NodeType.Comment) {\r\n        return true;\r\n    }\r\n    else if (sn.type === NodeType.Element) {\r\n        if (slimDOMOptions.script &&\r\n            (sn.tagName === 'script' ||\r\n                (sn.tagName === 'link' &&\r\n                    (sn.attributes.rel === 'preload' ||\r\n                        sn.attributes.rel === 'modulepreload') &&\r\n                    sn.attributes.as === 'script') ||\r\n                (sn.tagName === 'link' &&\r\n                    sn.attributes.rel === 'prefetch' &&\r\n                    typeof sn.attributes.href === 'string' &&\r\n                    sn.attributes.href.endsWith('.js')))) {\r\n            return true;\r\n        }\r\n        else if (slimDOMOptions.headFavicon &&\r\n            ((sn.tagName === 'link' && sn.attributes.rel === 'shortcut icon') ||\r\n                (sn.tagName === 'meta' &&\r\n                    (lowerIfExists(sn.attributes.name).match(/^msapplication-tile(image|color)$/) ||\r\n                        lowerIfExists(sn.attributes.name) === 'application-name' ||\r\n                        lowerIfExists(sn.attributes.rel) === 'icon' ||\r\n                        lowerIfExists(sn.attributes.rel) === 'apple-touch-icon' ||\r\n                        lowerIfExists(sn.attributes.rel) === 'shortcut icon')))) {\r\n            return true;\r\n        }\r\n        else if (sn.tagName === 'meta') {\r\n            if (slimDOMOptions.headMetaDescKeywords &&\r\n                lowerIfExists(sn.attributes.name).match(/^description|keywords$/)) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaSocial &&\r\n                (lowerIfExists(sn.attributes.property).match(/^(og|twitter|fb):/) ||\r\n                    lowerIfExists(sn.attributes.name).match(/^(og|twitter):/) ||\r\n                    lowerIfExists(sn.attributes.name) === 'pinterest')) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaRobots &&\r\n                (lowerIfExists(sn.attributes.name) === 'robots' ||\r\n                    lowerIfExists(sn.attributes.name) === 'googlebot' ||\r\n                    lowerIfExists(sn.attributes.name) === 'bingbot')) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaHttpEquiv &&\r\n                sn.attributes['http-equiv'] !== undefined) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaAuthorship &&\r\n                (lowerIfExists(sn.attributes.name) === 'author' ||\r\n                    lowerIfExists(sn.attributes.name) === 'generator' ||\r\n                    lowerIfExists(sn.attributes.name) === 'framework' ||\r\n                    lowerIfExists(sn.attributes.name) === 'publisher' ||\r\n                    lowerIfExists(sn.attributes.name) === 'progid' ||\r\n                    lowerIfExists(sn.attributes.property).match(/^article:/) ||\r\n                    lowerIfExists(sn.attributes.property).match(/^product:/))) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaVerification &&\r\n                (lowerIfExists(sn.attributes.name) === 'google-site-verification' ||\r\n                    lowerIfExists(sn.attributes.name) === 'yandex-verification' ||\r\n                    lowerIfExists(sn.attributes.name) === 'csrf-token' ||\r\n                    lowerIfExists(sn.attributes.name) === 'p:domain_verify' ||\r\n                    lowerIfExists(sn.attributes.name) === 'verify-v1' ||\r\n                    lowerIfExists(sn.attributes.name) === 'verification' ||\r\n                    lowerIfExists(sn.attributes.name) === 'shopify-checkout-api-token')) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction serializeNodeWithId(n, options) {\r\n    const { doc, mirror, blockClass, blockSelector, unblockSelector, maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, skipChild = false, inlineStylesheet = true, maskInputOptions = {}, maskAttributeFn, maskTextFn, maskInputFn, slimDOMOptions, dataURLOptions = {}, inlineImages = false, recordCanvas = false, onSerialize, onIframeLoad, iframeLoadTimeout = 5000, onStylesheetLoad, stylesheetLoadTimeout = 5000, keepIframeSrcFn = () => false, newlyAddedElement = false, } = options;\r\n    let { preserveWhiteSpace = true } = options;\r\n    const _serializedNode = serializeNode(n, {\r\n        doc,\r\n        mirror,\r\n        blockClass,\r\n        blockSelector,\r\n        maskAllText,\r\n        unblockSelector,\r\n        maskTextClass,\r\n        unmaskTextClass,\r\n        maskTextSelector,\r\n        unmaskTextSelector,\r\n        inlineStylesheet,\r\n        maskInputOptions,\r\n        maskAttributeFn,\r\n        maskTextFn,\r\n        maskInputFn,\r\n        dataURLOptions,\r\n        inlineImages,\r\n        recordCanvas,\r\n        keepIframeSrcFn,\r\n        newlyAddedElement,\r\n    });\r\n    if (!_serializedNode) {\r\n        console.warn(n, 'not serialized');\r\n        return null;\r\n    }\r\n    let id;\r\n    if (mirror.hasNode(n)) {\r\n        id = mirror.getId(n);\r\n    }\r\n    else if (slimDOMExcluded(_serializedNode, slimDOMOptions) ||\r\n        (!preserveWhiteSpace &&\r\n            _serializedNode.type === NodeType.Text &&\r\n            !_serializedNode.isStyle &&\r\n            !_serializedNode.textContent.replace(/^\\s+|\\s+$/gm, '').length)) {\r\n        id = IGNORED_NODE;\r\n    }\r\n    else {\r\n        id = genId();\r\n    }\r\n    const serializedNode = Object.assign(_serializedNode, { id });\r\n    mirror.add(n, serializedNode);\r\n    if (id === IGNORED_NODE) {\r\n        return null;\r\n    }\r\n    if (onSerialize) {\r\n        onSerialize(n);\r\n    }\r\n    let recordChild = !skipChild;\r\n    if (serializedNode.type === NodeType.Element) {\r\n        recordChild = recordChild && !serializedNode.needBlock;\r\n        delete serializedNode.needBlock;\r\n        const shadowRoot = n.shadowRoot;\r\n        if (shadowRoot && isNativeShadowDom(shadowRoot))\r\n            serializedNode.isShadowHost = true;\r\n    }\r\n    if ((serializedNode.type === NodeType.Document ||\r\n        serializedNode.type === NodeType.Element) &&\r\n        recordChild) {\r\n        if (slimDOMOptions.headWhitespace &&\r\n            serializedNode.type === NodeType.Element &&\r\n            serializedNode.tagName === 'head') {\r\n            preserveWhiteSpace = false;\r\n        }\r\n        const bypassOptions = {\r\n            doc,\r\n            mirror,\r\n            blockClass,\r\n            blockSelector,\r\n            maskAllText,\r\n            unblockSelector,\r\n            maskTextClass,\r\n            unmaskTextClass,\r\n            maskTextSelector,\r\n            unmaskTextSelector,\r\n            skipChild,\r\n            inlineStylesheet,\r\n            maskInputOptions,\r\n            maskAttributeFn,\r\n            maskTextFn,\r\n            maskInputFn,\r\n            slimDOMOptions,\r\n            dataURLOptions,\r\n            inlineImages,\r\n            recordCanvas,\r\n            preserveWhiteSpace,\r\n            onSerialize,\r\n            onIframeLoad,\r\n            iframeLoadTimeout,\r\n            onStylesheetLoad,\r\n            stylesheetLoadTimeout,\r\n            keepIframeSrcFn,\r\n        };\r\n        for (const childN of Array.from(n.childNodes)) {\r\n            const serializedChildNode = serializeNodeWithId(childN, bypassOptions);\r\n            if (serializedChildNode) {\r\n                serializedNode.childNodes.push(serializedChildNode);\r\n            }\r\n        }\r\n        if (isElement(n) && n.shadowRoot) {\r\n            for (const childN of Array.from(n.shadowRoot.childNodes)) {\r\n                const serializedChildNode = serializeNodeWithId(childN, bypassOptions);\r\n                if (serializedChildNode) {\r\n                    isNativeShadowDom(n.shadowRoot) &&\r\n                        (serializedChildNode.isShadow = true);\r\n                    serializedNode.childNodes.push(serializedChildNode);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (n.parentNode &&\r\n        isShadowRoot(n.parentNode) &&\r\n        isNativeShadowDom(n.parentNode)) {\r\n        serializedNode.isShadow = true;\r\n    }\r\n    if (serializedNode.type === NodeType.Element &&\r\n        serializedNode.tagName === 'iframe') {\r\n        onceIframeLoaded(n, () => {\r\n            const iframeDoc = n.contentDocument;\r\n            if (iframeDoc && onIframeLoad) {\r\n                const serializedIframeNode = serializeNodeWithId(iframeDoc, {\r\n                    doc: iframeDoc,\r\n                    mirror,\r\n                    blockClass,\r\n                    blockSelector,\r\n                    unblockSelector,\r\n                    maskAllText,\r\n                    maskTextClass,\r\n                    unmaskTextClass,\r\n                    maskTextSelector,\r\n                    unmaskTextSelector,\r\n                    skipChild: false,\r\n                    inlineStylesheet,\r\n                    maskInputOptions,\r\n                    maskAttributeFn,\r\n                    maskTextFn,\r\n                    maskInputFn,\r\n                    slimDOMOptions,\r\n                    dataURLOptions,\r\n                    inlineImages,\r\n                    recordCanvas,\r\n                    preserveWhiteSpace,\r\n                    onSerialize,\r\n                    onIframeLoad,\r\n                    iframeLoadTimeout,\r\n                    onStylesheetLoad,\r\n                    stylesheetLoadTimeout,\r\n                    keepIframeSrcFn,\r\n                });\r\n                if (serializedIframeNode) {\r\n                    onIframeLoad(n, serializedIframeNode);\r\n                }\r\n            }\r\n        }, iframeLoadTimeout);\r\n    }\r\n    if (serializedNode.type === NodeType.Element &&\r\n        serializedNode.tagName === 'link' &&\r\n        serializedNode.attributes.rel === 'stylesheet') {\r\n        onceStylesheetLoaded(n, () => {\r\n            if (onStylesheetLoad) {\r\n                const serializedLinkNode = serializeNodeWithId(n, {\r\n                    doc,\r\n                    mirror,\r\n                    blockClass,\r\n                    blockSelector,\r\n                    unblockSelector,\r\n                    maskAllText,\r\n                    maskTextClass,\r\n                    unmaskTextClass,\r\n                    maskTextSelector,\r\n                    unmaskTextSelector,\r\n                    skipChild: false,\r\n                    inlineStylesheet,\r\n                    maskInputOptions,\r\n                    maskAttributeFn,\r\n                    maskTextFn,\r\n                    maskInputFn,\r\n                    slimDOMOptions,\r\n                    dataURLOptions,\r\n                    inlineImages,\r\n                    recordCanvas,\r\n                    preserveWhiteSpace,\r\n                    onSerialize,\r\n                    onIframeLoad,\r\n                    iframeLoadTimeout,\r\n                    onStylesheetLoad,\r\n                    stylesheetLoadTimeout,\r\n                    keepIframeSrcFn,\r\n                });\r\n                if (serializedLinkNode) {\r\n                    onStylesheetLoad(n, serializedLinkNode);\r\n                }\r\n            }\r\n        }, stylesheetLoadTimeout);\r\n    }\r\n    return serializedNode;\r\n}\r\nfunction snapshot(n, options) {\r\n    const { mirror = new Mirror(), blockClass = 'rr-block', blockSelector = null, unblockSelector = null, maskAllText = false, maskTextClass = 'rr-mask', unmaskTextClass = null, maskTextSelector = null, unmaskTextSelector = null, inlineStylesheet = true, inlineImages = false, recordCanvas = false, maskAllInputs = false, maskAttributeFn, maskTextFn, maskInputFn, slimDOM = false, dataURLOptions, preserveWhiteSpace, onSerialize, onIframeLoad, iframeLoadTimeout, onStylesheetLoad, stylesheetLoadTimeout, keepIframeSrcFn = () => false, } = options || {};\r\n    const maskInputOptions = maskAllInputs === true\r\n        ? {\r\n            color: true,\r\n            date: true,\r\n            'datetime-local': true,\r\n            email: true,\r\n            month: true,\r\n            number: true,\r\n            range: true,\r\n            search: true,\r\n            tel: true,\r\n            text: true,\r\n            time: true,\r\n            url: true,\r\n            week: true,\r\n            textarea: true,\r\n            select: true,\r\n        }\r\n        : maskAllInputs === false\r\n            ? {}\r\n            : maskAllInputs;\r\n    const slimDOMOptions = slimDOM === true || slimDOM === 'all'\r\n        ?\r\n            {\r\n                script: true,\r\n                comment: true,\r\n                headFavicon: true,\r\n                headWhitespace: true,\r\n                headMetaDescKeywords: slimDOM === 'all',\r\n                headMetaSocial: true,\r\n                headMetaRobots: true,\r\n                headMetaHttpEquiv: true,\r\n                headMetaAuthorship: true,\r\n                headMetaVerification: true,\r\n            }\r\n        : slimDOM === false\r\n            ? {}\r\n            : slimDOM;\r\n    return serializeNodeWithId(n, {\r\n        doc: n,\r\n        mirror,\r\n        blockClass,\r\n        blockSelector,\r\n        unblockSelector,\r\n        maskAllText,\r\n        maskTextClass,\r\n        unmaskTextClass,\r\n        maskTextSelector,\r\n        unmaskTextSelector,\r\n        skipChild: false,\r\n        inlineStylesheet,\r\n        maskInputOptions,\r\n        maskAttributeFn,\r\n        maskTextFn,\r\n        maskInputFn,\r\n        slimDOMOptions,\r\n        dataURLOptions,\r\n        inlineImages,\r\n        recordCanvas,\r\n        preserveWhiteSpace,\r\n        onSerialize,\r\n        onIframeLoad,\r\n        iframeLoadTimeout,\r\n        onStylesheetLoad,\r\n        stylesheetLoadTimeout,\r\n        keepIframeSrcFn,\r\n        newlyAddedElement: false,\r\n    });\r\n}\r\n\nconst commentre = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\r\nfunction parse(css, options = {}) {\r\n    let lineno = 1;\r\n    let column = 1;\r\n    function updatePosition(str) {\r\n        const lines = str.match(/\\n/g);\r\n        if (lines) {\r\n            lineno += lines.length;\r\n        }\r\n        const i = str.lastIndexOf('\\n');\r\n        column = i === -1 ? column + str.length : str.length - i;\r\n    }\r\n    function position() {\r\n        const start = { line: lineno, column };\r\n        return (node) => {\r\n            node.position = new Position(start);\r\n            whitespace();\r\n            return node;\r\n        };\r\n    }\r\n    class Position {\r\n        constructor(start) {\r\n            this.start = start;\r\n            this.end = { line: lineno, column };\r\n            this.source = options.source;\r\n        }\r\n    }\r\n    Position.prototype.content = css;\r\n    const errorsList = [];\r\n    function error(msg) {\r\n        const err = new Error(`${options.source || ''}:${lineno}:${column}: ${msg}`);\r\n        err.reason = msg;\r\n        err.filename = options.source;\r\n        err.line = lineno;\r\n        err.column = column;\r\n        err.source = css;\r\n        if (options.silent) {\r\n            errorsList.push(err);\r\n        }\r\n        else {\r\n            throw err;\r\n        }\r\n    }\r\n    function stylesheet() {\r\n        const rulesList = rules();\r\n        return {\r\n            type: 'stylesheet',\r\n            stylesheet: {\r\n                source: options.source,\r\n                rules: rulesList,\r\n                parsingErrors: errorsList,\r\n            },\r\n        };\r\n    }\r\n    function open() {\r\n        return match(/^{\\s*/);\r\n    }\r\n    function close() {\r\n        return match(/^}/);\r\n    }\r\n    function rules() {\r\n        let node;\r\n        const rules = [];\r\n        whitespace();\r\n        comments(rules);\r\n        while (css.length && css.charAt(0) !== '}' && (node = atrule() || rule())) {\r\n            if (node) {\r\n                rules.push(node);\r\n                comments(rules);\r\n            }\r\n        }\r\n        return rules;\r\n    }\r\n    function match(re) {\r\n        const m = re.exec(css);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const str = m[0];\r\n        updatePosition(str);\r\n        css = css.slice(str.length);\r\n        return m;\r\n    }\r\n    function whitespace() {\r\n        match(/^\\s*/);\r\n    }\r\n    function comments(rules = []) {\r\n        let c;\r\n        while ((c = comment())) {\r\n            if (c) {\r\n                rules.push(c);\r\n            }\r\n            c = comment();\r\n        }\r\n        return rules;\r\n    }\r\n    function comment() {\r\n        const pos = position();\r\n        if ('/' !== css.charAt(0) || '*' !== css.charAt(1)) {\r\n            return;\r\n        }\r\n        let i = 2;\r\n        while ('' !== css.charAt(i) &&\r\n            ('*' !== css.charAt(i) || '/' !== css.charAt(i + 1))) {\r\n            ++i;\r\n        }\r\n        i += 2;\r\n        if ('' === css.charAt(i - 1)) {\r\n            return error('End of comment missing');\r\n        }\r\n        const str = css.slice(2, i - 2);\r\n        column += 2;\r\n        updatePosition(str);\r\n        css = css.slice(i);\r\n        column += 2;\r\n        return pos({\r\n            type: 'comment',\r\n            comment: str,\r\n        });\r\n    }\r\n    function selector() {\r\n        const m = match(/^([^{]+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        return trim(m[0])\r\n            .replace(/\\/\\*([^*]|[\\r\\n]|(\\*+([^*/]|[\\r\\n])))*\\*\\/+/g, '')\r\n            .replace(/\"(?:\\\\\"|[^\"])*\"|'(?:\\\\'|[^'])*'/g, (m) => {\r\n            return m.replace(/,/g, '\\u200C');\r\n        })\r\n            .split(/\\s*(?![^(]*\\)),\\s*/)\r\n            .map((s) => {\r\n            return s.replace(/\\u200C/g, ',');\r\n        });\r\n    }\r\n    function declaration() {\r\n        const pos = position();\r\n        const propMatch = match(/^(\\*?[-#\\/\\*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/);\r\n        if (!propMatch) {\r\n            return;\r\n        }\r\n        const prop = trim(propMatch[0]);\r\n        if (!match(/^:\\s*/)) {\r\n            return error(`property missing ':'`);\r\n        }\r\n        const val = match(/^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^\\)]*?\\)|[^};])+)/);\r\n        const ret = pos({\r\n            type: 'declaration',\r\n            property: prop.replace(commentre, ''),\r\n            value: val ? trim(val[0]).replace(commentre, '') : '',\r\n        });\r\n        match(/^[;\\s]*/);\r\n        return ret;\r\n    }\r\n    function declarations() {\r\n        const decls = [];\r\n        if (!open()) {\r\n            return error(`missing '{'`);\r\n        }\r\n        comments(decls);\r\n        let decl;\r\n        while ((decl = declaration())) {\r\n            if (decl !== false) {\r\n                decls.push(decl);\r\n                comments(decls);\r\n            }\r\n            decl = declaration();\r\n        }\r\n        if (!close()) {\r\n            return error(`missing '}'`);\r\n        }\r\n        return decls;\r\n    }\r\n    function keyframe() {\r\n        let m;\r\n        const vals = [];\r\n        const pos = position();\r\n        while ((m = match(/^((\\d+\\.\\d+|\\.\\d+|\\d+)%?|[a-z]+)\\s*/))) {\r\n            vals.push(m[1]);\r\n            match(/^,\\s*/);\r\n        }\r\n        if (!vals.length) {\r\n            return;\r\n        }\r\n        return pos({\r\n            type: 'keyframe',\r\n            values: vals,\r\n            declarations: declarations(),\r\n        });\r\n    }\r\n    function atkeyframes() {\r\n        const pos = position();\r\n        let m = match(/^@([-\\w]+)?keyframes\\s*/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const vendor = m[1];\r\n        m = match(/^([-\\w]+)\\s*/);\r\n        if (!m) {\r\n            return error('@keyframes missing name');\r\n        }\r\n        const name = m[1];\r\n        if (!open()) {\r\n            return error(`@keyframes missing '{'`);\r\n        }\r\n        let frame;\r\n        let frames = comments();\r\n        while ((frame = keyframe())) {\r\n            frames.push(frame);\r\n            frames = frames.concat(comments());\r\n        }\r\n        if (!close()) {\r\n            return error(`@keyframes missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'keyframes',\r\n            name,\r\n            vendor,\r\n            keyframes: frames,\r\n        });\r\n    }\r\n    function atsupports() {\r\n        const pos = position();\r\n        const m = match(/^@supports *([^{]+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const supports = trim(m[1]);\r\n        if (!open()) {\r\n            return error(`@supports missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@supports missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'supports',\r\n            supports,\r\n            rules: style,\r\n        });\r\n    }\r\n    function athost() {\r\n        const pos = position();\r\n        const m = match(/^@host\\s*/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        if (!open()) {\r\n            return error(`@host missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@host missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'host',\r\n            rules: style,\r\n        });\r\n    }\r\n    function atmedia() {\r\n        const pos = position();\r\n        const m = match(/^@media *([^{]+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const media = trim(m[1]);\r\n        if (!open()) {\r\n            return error(`@media missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@media missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'media',\r\n            media,\r\n            rules: style,\r\n        });\r\n    }\r\n    function atcustommedia() {\r\n        const pos = position();\r\n        const m = match(/^@custom-media\\s+(--[^\\s]+)\\s*([^{;]+);/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        return pos({\r\n            type: 'custom-media',\r\n            name: trim(m[1]),\r\n            media: trim(m[2]),\r\n        });\r\n    }\r\n    function atpage() {\r\n        const pos = position();\r\n        const m = match(/^@page */);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const sel = selector() || [];\r\n        if (!open()) {\r\n            return error(`@page missing '{'`);\r\n        }\r\n        let decls = comments();\r\n        let decl;\r\n        while ((decl = declaration())) {\r\n            decls.push(decl);\r\n            decls = decls.concat(comments());\r\n        }\r\n        if (!close()) {\r\n            return error(`@page missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'page',\r\n            selectors: sel,\r\n            declarations: decls,\r\n        });\r\n    }\r\n    function atdocument() {\r\n        const pos = position();\r\n        const m = match(/^@([-\\w]+)?document *([^{]+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const vendor = trim(m[1]);\r\n        const doc = trim(m[2]);\r\n        if (!open()) {\r\n            return error(`@document missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@document missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'document',\r\n            document: doc,\r\n            vendor,\r\n            rules: style,\r\n        });\r\n    }\r\n    function atfontface() {\r\n        const pos = position();\r\n        const m = match(/^@font-face\\s*/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        if (!open()) {\r\n            return error(`@font-face missing '{'`);\r\n        }\r\n        let decls = comments();\r\n        let decl;\r\n        while ((decl = declaration())) {\r\n            decls.push(decl);\r\n            decls = decls.concat(comments());\r\n        }\r\n        if (!close()) {\r\n            return error(`@font-face missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'font-face',\r\n            declarations: decls,\r\n        });\r\n    }\r\n    const atimport = _compileAtrule('import');\r\n    const atcharset = _compileAtrule('charset');\r\n    const atnamespace = _compileAtrule('namespace');\r\n    function _compileAtrule(name) {\r\n        const re = new RegExp('^@' + name + '\\\\s*([^;]+);');\r\n        return () => {\r\n            const pos = position();\r\n            const m = match(re);\r\n            if (!m) {\r\n                return;\r\n            }\r\n            const ret = { type: name };\r\n            ret[name] = m[1].trim();\r\n            return pos(ret);\r\n        };\r\n    }\r\n    function atrule() {\r\n        if (css[0] !== '@') {\r\n            return;\r\n        }\r\n        return (atkeyframes() ||\r\n            atmedia() ||\r\n            atcustommedia() ||\r\n            atsupports() ||\r\n            atimport() ||\r\n            atcharset() ||\r\n            atnamespace() ||\r\n            atdocument() ||\r\n            atpage() ||\r\n            athost() ||\r\n            atfontface());\r\n    }\r\n    function rule() {\r\n        const pos = position();\r\n        const sel = selector();\r\n        if (!sel) {\r\n            return error('selector missing');\r\n        }\r\n        comments();\r\n        return pos({\r\n            type: 'rule',\r\n            selectors: sel,\r\n            declarations: declarations(),\r\n        });\r\n    }\r\n    return addParent(stylesheet());\r\n}\r\nfunction trim(str) {\r\n    return str ? str.replace(/^\\s+|\\s+$/g, '') : '';\r\n}\r\nfunction addParent(obj, parent) {\r\n    const isNode = obj && typeof obj.type === 'string';\r\n    const childParent = isNode ? obj : parent;\r\n    for (const k of Object.keys(obj)) {\r\n        const value = obj[k];\r\n        if (Array.isArray(value)) {\r\n            value.forEach((v) => {\r\n                addParent(v, childParent);\r\n            });\r\n        }\r\n        else if (value && typeof value === 'object') {\r\n            addParent(value, childParent);\r\n        }\r\n    }\r\n    if (isNode) {\r\n        Object.defineProperty(obj, 'parent', {\r\n            configurable: true,\r\n            writable: true,\r\n            enumerable: false,\r\n            value: parent || null,\r\n        });\r\n    }\r\n    return obj;\r\n}\n\nconst tagMap = {\r\n    script: 'noscript',\r\n    altglyph: 'altGlyph',\r\n    altglyphdef: 'altGlyphDef',\r\n    altglyphitem: 'altGlyphItem',\r\n    animatecolor: 'animateColor',\r\n    animatemotion: 'animateMotion',\r\n    animatetransform: 'animateTransform',\r\n    clippath: 'clipPath',\r\n    feblend: 'feBlend',\r\n    fecolormatrix: 'feColorMatrix',\r\n    fecomponenttransfer: 'feComponentTransfer',\r\n    fecomposite: 'feComposite',\r\n    feconvolvematrix: 'feConvolveMatrix',\r\n    fediffuselighting: 'feDiffuseLighting',\r\n    fedisplacementmap: 'feDisplacementMap',\r\n    fedistantlight: 'feDistantLight',\r\n    fedropshadow: 'feDropShadow',\r\n    feflood: 'feFlood',\r\n    fefunca: 'feFuncA',\r\n    fefuncb: 'feFuncB',\r\n    fefuncg: 'feFuncG',\r\n    fefuncr: 'feFuncR',\r\n    fegaussianblur: 'feGaussianBlur',\r\n    feimage: 'feImage',\r\n    femerge: 'feMerge',\r\n    femergenode: 'feMergeNode',\r\n    femorphology: 'feMorphology',\r\n    feoffset: 'feOffset',\r\n    fepointlight: 'fePointLight',\r\n    fespecularlighting: 'feSpecularLighting',\r\n    fespotlight: 'feSpotLight',\r\n    fetile: 'feTile',\r\n    feturbulence: 'feTurbulence',\r\n    foreignobject: 'foreignObject',\r\n    glyphref: 'glyphRef',\r\n    lineargradient: 'linearGradient',\r\n    radialgradient: 'radialGradient',\r\n};\r\nfunction getTagName(n) {\r\n    let tagName = tagMap[n.tagName] ? tagMap[n.tagName] : n.tagName;\r\n    if (tagName === 'link' && n.attributes._cssText) {\r\n        tagName = 'style';\r\n    }\r\n    return tagName;\r\n}\r\nfunction escapeRegExp(str) {\r\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\r\n}\r\nconst HOVER_SELECTOR = /([^\\\\]):hover/;\r\nconst HOVER_SELECTOR_GLOBAL = new RegExp(HOVER_SELECTOR.source, 'g');\r\nfunction addHoverClass(cssText, cache) {\r\n    const cachedStyle = cache?.stylesWithHoverClass.get(cssText);\r\n    if (cachedStyle)\r\n        return cachedStyle;\r\n    if (cssText.length >= 1000000) {\r\n        return cssText;\r\n    }\r\n    const ast = parse(cssText, {\r\n        silent: true,\r\n    });\r\n    if (!ast.stylesheet) {\r\n        return cssText;\r\n    }\r\n    const selectors = [];\r\n    ast.stylesheet.rules.forEach((rule) => {\r\n        if ('selectors' in rule) {\r\n            (rule.selectors || []).forEach((selector) => {\r\n                if (HOVER_SELECTOR.test(selector)) {\r\n                    selectors.push(selector);\r\n                }\r\n            });\r\n        }\r\n    });\r\n    if (selectors.length === 0) {\r\n        return cssText;\r\n    }\r\n    const selectorMatcher = new RegExp(selectors\r\n        .filter((selector, index) => selectors.indexOf(selector) === index)\r\n        .sort((a, b) => b.length - a.length)\r\n        .map((selector) => {\r\n        return escapeRegExp(selector);\r\n    })\r\n        .join('|'), 'g');\r\n    const result = cssText.replace(selectorMatcher, (selector) => {\r\n        const newSelector = selector.replace(HOVER_SELECTOR_GLOBAL, '$1.\\\\:hover');\r\n        return `${selector}, ${newSelector}`;\r\n    });\r\n    cache?.stylesWithHoverClass.set(cssText, result);\r\n    return result;\r\n}\r\nfunction createCache() {\r\n    const stylesWithHoverClass = new Map();\r\n    return {\r\n        stylesWithHoverClass,\r\n    };\r\n}\r\nfunction buildNode(n, options) {\r\n    const { doc, hackCss, cache } = options;\r\n    switch (n.type) {\r\n        case NodeType.Document:\r\n            return doc.implementation.createDocument(null, '', null);\r\n        case NodeType.DocumentType:\r\n            return doc.implementation.createDocumentType(n.name || 'html', n.publicId, n.systemId);\r\n        case NodeType.Element: {\r\n            const tagName = getTagName(n);\r\n            let node;\r\n            if (n.isSVG) {\r\n                node = doc.createElementNS('http://www.w3.org/2000/svg', tagName);\r\n            }\r\n            else {\r\n                if (n.isCustom &&\r\n                    doc.defaultView?.customElements &&\r\n                    !doc.defaultView.customElements.get(n.tagName))\r\n                    doc.defaultView.customElements.define(n.tagName, class extends doc.defaultView.HTMLElement {\r\n                    });\r\n                node = doc.createElement(tagName);\r\n            }\r\n            const specialAttributes = {};\r\n            for (const name in n.attributes) {\r\n                if (!Object.prototype.hasOwnProperty.call(n.attributes, name)) {\r\n                    continue;\r\n                }\r\n                let value = n.attributes[name];\r\n                if (tagName === 'option' &&\r\n                    name === 'selected' &&\r\n                    value === false) {\r\n                    continue;\r\n                }\r\n                if (value === null) {\r\n                    continue;\r\n                }\r\n                if (value === true)\r\n                    value = '';\r\n                if (name.startsWith('rr_')) {\r\n                    specialAttributes[name] = value;\r\n                    continue;\r\n                }\r\n                const isTextarea = tagName === 'textarea' && name === 'value';\r\n                const isRemoteOrDynamicCss = tagName === 'style' && name === '_cssText';\r\n                if (isRemoteOrDynamicCss && hackCss && typeof value === 'string') {\r\n                    value = addHoverClass(value, cache);\r\n                }\r\n                if ((isTextarea || isRemoteOrDynamicCss) && typeof value === 'string') {\r\n                    const child = doc.createTextNode(value);\r\n                    for (const c of Array.from(node.childNodes)) {\r\n                        if (c.nodeType === node.TEXT_NODE) {\r\n                            node.removeChild(c);\r\n                        }\r\n                    }\r\n                    node.appendChild(child);\r\n                    continue;\r\n                }\r\n                try {\r\n                    if (n.isSVG && name === 'xlink:href') {\r\n                        node.setAttributeNS('http://www.w3.org/1999/xlink', name, value.toString());\r\n                    }\r\n                    else if (name === 'onload' ||\r\n                        name === 'onclick' ||\r\n                        name.substring(0, 7) === 'onmouse') {\r\n                        node.setAttribute('_' + name, value.toString());\r\n                    }\r\n                    else if (tagName === 'meta' &&\r\n                        n.attributes['http-equiv'] === 'Content-Security-Policy' &&\r\n                        name === 'content') {\r\n                        node.setAttribute('csp-content', value.toString());\r\n                        continue;\r\n                    }\r\n                    else if (tagName === 'link' &&\r\n                        (n.attributes.rel === 'preload' ||\r\n                            n.attributes.rel === 'modulepreload') &&\r\n                        n.attributes.as === 'script') {\r\n                    }\r\n                    else if (tagName === 'link' &&\r\n                        n.attributes.rel === 'prefetch' &&\r\n                        typeof n.attributes.href === 'string' &&\r\n                        n.attributes.href.endsWith('.js')) {\r\n                    }\r\n                    else if (tagName === 'img' &&\r\n                        n.attributes.srcset &&\r\n                        n.attributes.rr_dataURL) {\r\n                        node.setAttribute('rrweb-original-srcset', n.attributes.srcset);\r\n                    }\r\n                    else {\r\n                        node.setAttribute(name, value.toString());\r\n                    }\r\n                }\r\n                catch (error) {\r\n                }\r\n            }\r\n            for (const name in specialAttributes) {\r\n                const value = specialAttributes[name];\r\n                if (tagName === 'canvas' && name === 'rr_dataURL') {\r\n                    const image = document.createElement('img');\r\n                    image.onload = () => {\r\n                        const ctx = node.getContext('2d');\r\n                        if (ctx) {\r\n                            ctx.drawImage(image, 0, 0, image.width, image.height);\r\n                        }\r\n                    };\r\n                    image.src = value.toString();\r\n                    if (node.RRNodeType)\r\n                        node.rr_dataURL = value.toString();\r\n                }\r\n                else if (tagName === 'img' && name === 'rr_dataURL') {\r\n                    const image = node;\r\n                    if (!image.currentSrc.startsWith('data:')) {\r\n                        image.setAttribute('rrweb-original-src', n.attributes.src);\r\n                        image.src = value.toString();\r\n                    }\r\n                }\r\n                if (name === 'rr_width') {\r\n                    node.style.setProperty('width', value.toString());\r\n                }\r\n                else if (name === 'rr_height') {\r\n                    node.style.setProperty('height', value.toString());\r\n                }\r\n                else if (name === 'rr_mediaCurrentTime' &&\r\n                    typeof value === 'number') {\r\n                    node.currentTime = value;\r\n                }\r\n                else if (name === 'rr_mediaState') {\r\n                    switch (value) {\r\n                        case 'played':\r\n                            node\r\n                                .play()\r\n                                .catch((e) => console.warn('media playback error', e));\r\n                            break;\r\n                        case 'paused':\r\n                            node.pause();\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            if (n.isShadowHost) {\r\n                if (!node.shadowRoot) {\r\n                    node.attachShadow({ mode: 'open' });\r\n                }\r\n                else {\r\n                    while (node.shadowRoot.firstChild) {\r\n                        node.shadowRoot.removeChild(node.shadowRoot.firstChild);\r\n                    }\r\n                }\r\n            }\r\n            return node;\r\n        }\r\n        case NodeType.Text:\r\n            return doc.createTextNode(n.isStyle && hackCss\r\n                ? addHoverClass(n.textContent, cache)\r\n                : n.textContent);\r\n        case NodeType.CDATA:\r\n            return doc.createCDATASection(n.textContent);\r\n        case NodeType.Comment:\r\n            return doc.createComment(n.textContent);\r\n        default:\r\n            return null;\r\n    }\r\n}\r\nfunction buildNodeWithSN(n, options) {\r\n    const { doc, mirror, skipChild = false, hackCss = true, afterAppend, cache, } = options;\r\n    if (mirror.has(n.id)) {\r\n        const nodeInMirror = mirror.getNode(n.id);\r\n        const meta = mirror.getMeta(nodeInMirror);\r\n        if (isNodeMetaEqual(meta, n))\r\n            return mirror.getNode(n.id);\r\n    }\r\n    let node = buildNode(n, { doc, hackCss, cache });\r\n    if (!node) {\r\n        return null;\r\n    }\r\n    if (n.rootId && mirror.getNode(n.rootId) !== doc) {\r\n        mirror.replace(n.rootId, doc);\r\n    }\r\n    if (n.type === NodeType.Document) {\r\n        doc.close();\r\n        doc.open();\r\n        if (n.compatMode === 'BackCompat' &&\r\n            n.childNodes &&\r\n            n.childNodes[0].type !== NodeType.DocumentType) {\r\n            if (n.childNodes[0].type === NodeType.Element &&\r\n                'xmlns' in n.childNodes[0].attributes &&\r\n                n.childNodes[0].attributes.xmlns === 'http://www.w3.org/1999/xhtml') {\r\n                doc.write('<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"\">');\r\n            }\r\n            else {\r\n                doc.write('<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"\">');\r\n            }\r\n        }\r\n        node = doc;\r\n    }\r\n    mirror.add(node, n);\r\n    if ((n.type === NodeType.Document || n.type === NodeType.Element) &&\r\n        !skipChild) {\r\n        for (const childN of n.childNodes) {\r\n            const childNode = buildNodeWithSN(childN, {\r\n                doc,\r\n                mirror,\r\n                skipChild: false,\r\n                hackCss,\r\n                afterAppend,\r\n                cache,\r\n            });\r\n            if (!childNode) {\r\n                console.warn('Failed to rebuild', childN);\r\n                continue;\r\n            }\r\n            if (childN.isShadow && isElement(node) && node.shadowRoot) {\r\n                node.shadowRoot.appendChild(childNode);\r\n            }\r\n            else if (n.type === NodeType.Document &&\r\n                childN.type == NodeType.Element) {\r\n                const htmlElement = childNode;\r\n                let body = null;\r\n                htmlElement.childNodes.forEach((child) => {\r\n                    if (child.nodeName === 'BODY')\r\n                        body = child;\r\n                });\r\n                if (body) {\r\n                    htmlElement.removeChild(body);\r\n                    node.appendChild(childNode);\r\n                    htmlElement.appendChild(body);\r\n                }\r\n                else {\r\n                    node.appendChild(childNode);\r\n                }\r\n            }\r\n            else {\r\n                node.appendChild(childNode);\r\n            }\r\n            if (afterAppend) {\r\n                afterAppend(childNode, childN.id);\r\n            }\r\n        }\r\n    }\r\n    return node;\r\n}\r\nfunction visit(mirror, onVisit) {\r\n    function walk(node) {\r\n        onVisit(node);\r\n    }\r\n    for (const id of mirror.getIds()) {\r\n        if (mirror.has(id)) {\r\n            walk(mirror.getNode(id));\r\n        }\r\n    }\r\n}\r\nfunction handleScroll(node, mirror) {\r\n    const n = mirror.getMeta(node);\r\n    if (n?.type !== NodeType.Element) {\r\n        return;\r\n    }\r\n    const el = node;\r\n    for (const name in n.attributes) {\r\n        if (!(Object.prototype.hasOwnProperty.call(n.attributes, name) &&\r\n            name.startsWith('rr_'))) {\r\n            continue;\r\n        }\r\n        const value = n.attributes[name];\r\n        if (name === 'rr_scrollLeft') {\r\n            el.scrollLeft = value;\r\n        }\r\n        if (name === 'rr_scrollTop') {\r\n            el.scrollTop = value;\r\n        }\r\n    }\r\n}\r\nfunction rebuild(n, options) {\r\n    const { doc, onVisit, hackCss = true, afterAppend, cache, mirror = new Mirror(), } = options;\r\n    const node = buildNodeWithSN(n, {\r\n        doc,\r\n        mirror,\r\n        skipChild: false,\r\n        hackCss,\r\n        afterAppend,\r\n        cache,\r\n    });\r\n    visit(mirror, (visitedNode) => {\r\n        if (onVisit) {\r\n            onVisit(visitedNode);\r\n        }\r\n        handleScroll(visitedNode, mirror);\r\n    });\r\n    return node;\r\n}\n\nexport { IGNORED_NODE, Mirror, NodeType, addHoverClass, buildNodeWithSN, createCache, createMatchPredicate, createMirror, distanceToMatch, escapeImportStatement, fixSafariColons, genId, getInputType, getInputValue, ignoreAttribute, is2DCanvasBlank, isCSSImportRule, isCSSStyleRule, isElement, isNativeShadowDom, isNodeMetaEqual, isShadowRoot, maskInputValue, needMaskingText, rebuild, serializeNodeWithId, shouldMaskInput, snapshot, stringifyRule, stringifyStylesheet, toLowerCase, toUpperCase, transformAttribute };\n", "import { distanceToMatch, IGNORED_NODE, isShadowRoot, createMatchPredicate } from '../../rrweb-snapshot/es/rrweb-snapshot.js';\n\nfunction on(type, fn, target = document) {\r\n    const options = { capture: true, passive: true };\r\n    target.addEventListener(type, fn, options);\r\n    return () => target.removeEventListener(type, fn, options);\r\n}\r\nconst DEPARTED_MIRROR_ACCESS_WARNING = 'Please stop import mirror directly. Instead of that,' +\r\n    '\\r\\n' +\r\n    'now you can use replayer.getMirror() to access the mirror instance of a replayer,' +\r\n    '\\r\\n' +\r\n    'or you can use record.mirror to access the mirror instance during recording.';\r\nlet _mirror = {\r\n    map: {},\r\n    getId() {\r\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\r\n        return -1;\r\n    },\r\n    getNode() {\r\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\r\n        return null;\r\n    },\r\n    removeNodeFromMap() {\r\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\r\n    },\r\n    has() {\r\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\r\n        return false;\r\n    },\r\n    reset() {\r\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\r\n    },\r\n};\r\nif (typeof window !== 'undefined' && window.Proxy && window.Reflect) {\r\n    _mirror = new Proxy(_mirror, {\r\n        get(target, prop, receiver) {\r\n            if (prop === 'map') {\r\n                console.error(DEPARTED_MIRROR_ACCESS_WARNING);\r\n            }\r\n            return Reflect.get(target, prop, receiver);\r\n        },\r\n    });\r\n}\r\nfunction throttle(func, wait, options = {}) {\r\n    let timeout = null;\r\n    let previous = 0;\r\n    return function (...args) {\r\n        const now = Date.now();\r\n        if (!previous && options.leading === false) {\r\n            previous = now;\r\n        }\r\n        const remaining = wait - (now - previous);\r\n        const context = this;\r\n        if (remaining <= 0 || remaining > wait) {\r\n            if (timeout) {\r\n                clearTimeout(timeout);\r\n                timeout = null;\r\n            }\r\n            previous = now;\r\n            func.apply(context, args);\r\n        }\r\n        else if (!timeout && options.trailing !== false) {\r\n            timeout = setTimeout(() => {\r\n                previous = options.leading === false ? 0 : Date.now();\r\n                timeout = null;\r\n                func.apply(context, args);\r\n            }, remaining);\r\n        }\r\n    };\r\n}\r\nfunction hookSetter(target, key, d, isRevoked, win = window) {\r\n    const original = win.Object.getOwnPropertyDescriptor(target, key);\r\n    win.Object.defineProperty(target, key, isRevoked\r\n        ? d\r\n        : {\r\n            set(value) {\r\n                setTimeout(() => {\r\n                    d.set.call(this, value);\r\n                }, 0);\r\n                if (original && original.set) {\r\n                    original.set.call(this, value);\r\n                }\r\n            },\r\n        });\r\n    return () => hookSetter(target, key, original || {}, true);\r\n}\r\nfunction patch(source, name, replacement) {\r\n    try {\r\n        if (!(name in source)) {\r\n            return () => {\r\n            };\r\n        }\r\n        const original = source[name];\r\n        const wrapped = replacement(original);\r\n        if (typeof wrapped === 'function') {\r\n            wrapped.prototype = wrapped.prototype || {};\r\n            Object.defineProperties(wrapped, {\r\n                __rrweb_original__: {\r\n                    enumerable: false,\r\n                    value: original,\r\n                },\r\n            });\r\n        }\r\n        source[name] = wrapped;\r\n        return () => {\r\n            source[name] = original;\r\n        };\r\n    }\r\n    catch {\r\n        return () => {\r\n        };\r\n    }\r\n}\r\nlet nowTimestamp = Date.now;\r\nif (!(/[1-9][0-9]{12}/.test(Date.now().toString()))) {\r\n    nowTimestamp = () => new Date().getTime();\r\n}\r\nfunction getWindowScroll(win) {\r\n    const doc = win.document;\r\n    return {\r\n        left: doc.scrollingElement\r\n            ? doc.scrollingElement.scrollLeft\r\n            : win.pageXOffset !== undefined\r\n                ? win.pageXOffset\r\n                : doc?.documentElement.scrollLeft ||\r\n                    doc?.body?.parentElement?.scrollLeft ||\r\n                    doc?.body?.scrollLeft ||\r\n                    0,\r\n        top: doc.scrollingElement\r\n            ? doc.scrollingElement.scrollTop\r\n            : win.pageYOffset !== undefined\r\n                ? win.pageYOffset\r\n                : doc?.documentElement.scrollTop ||\r\n                    doc?.body?.parentElement?.scrollTop ||\r\n                    doc?.body?.scrollTop ||\r\n                    0,\r\n    };\r\n}\r\nfunction getWindowHeight() {\r\n    return (window.innerHeight ||\r\n        (document.documentElement && document.documentElement.clientHeight) ||\r\n        (document.body && document.body.clientHeight));\r\n}\r\nfunction getWindowWidth() {\r\n    return (window.innerWidth ||\r\n        (document.documentElement && document.documentElement.clientWidth) ||\r\n        (document.body && document.body.clientWidth));\r\n}\r\nfunction isBlocked(node, blockClass, blockSelector, unblockSelector, checkAncestors) {\r\n    if (!node) {\r\n        return false;\r\n    }\r\n    const el = node.nodeType === node.ELEMENT_NODE\r\n        ? node\r\n        : node.parentElement;\r\n    if (!el)\r\n        return false;\r\n    const blockedPredicate = createMatchPredicate(blockClass, blockSelector);\r\n    if (!checkAncestors) {\r\n        const isUnblocked = unblockSelector && el.matches(unblockSelector);\r\n        return blockedPredicate(el) && !isUnblocked;\r\n    }\r\n    const blockDistance = distanceToMatch(el, blockedPredicate);\r\n    let unblockDistance = -1;\r\n    if (blockDistance < 0) {\r\n        return false;\r\n    }\r\n    if (unblockSelector) {\r\n        unblockDistance = distanceToMatch(el, createMatchPredicate(null, unblockSelector));\r\n    }\r\n    if (blockDistance > -1 && unblockDistance < 0) {\r\n        return true;\r\n    }\r\n    return blockDistance < unblockDistance;\r\n}\r\nfunction isSerialized(n, mirror) {\r\n    return mirror.getId(n) !== -1;\r\n}\r\nfunction isIgnored(n, mirror) {\r\n    return mirror.getId(n) === IGNORED_NODE;\r\n}\r\nfunction isAncestorRemoved(target, mirror) {\r\n    if (isShadowRoot(target)) {\r\n        return false;\r\n    }\r\n    const id = mirror.getId(target);\r\n    if (!mirror.has(id)) {\r\n        return true;\r\n    }\r\n    if (target.parentNode &&\r\n        target.parentNode.nodeType === target.DOCUMENT_NODE) {\r\n        return false;\r\n    }\r\n    if (!target.parentNode) {\r\n        return true;\r\n    }\r\n    return isAncestorRemoved(target.parentNode, mirror);\r\n}\r\nfunction legacy_isTouchEvent(event) {\r\n    return Boolean(event.changedTouches);\r\n}\r\nfunction polyfill(win = window) {\r\n    if ('NodeList' in win && !win.NodeList.prototype.forEach) {\r\n        win.NodeList.prototype.forEach = Array.prototype\r\n            .forEach;\r\n    }\r\n    if ('DOMTokenList' in win && !win.DOMTokenList.prototype.forEach) {\r\n        win.DOMTokenList.prototype.forEach = Array.prototype\r\n            .forEach;\r\n    }\r\n    if (!Node.prototype.contains) {\r\n        Node.prototype.contains = (...args) => {\r\n            let node = args[0];\r\n            if (!(0 in args)) {\r\n                throw new TypeError('1 argument is required');\r\n            }\r\n            do {\r\n                if (this === node) {\r\n                    return true;\r\n                }\r\n            } while ((node = node && node.parentNode));\r\n            return false;\r\n        };\r\n    }\r\n}\r\nfunction queueToResolveTrees(queue) {\r\n    const queueNodeMap = {};\r\n    const putIntoMap = (m, parent) => {\r\n        const nodeInTree = {\r\n            value: m,\r\n            parent,\r\n            children: [],\r\n        };\r\n        queueNodeMap[m.node.id] = nodeInTree;\r\n        return nodeInTree;\r\n    };\r\n    const queueNodeTrees = [];\r\n    for (const mutation of queue) {\r\n        const { nextId, parentId } = mutation;\r\n        if (nextId && nextId in queueNodeMap) {\r\n            const nextInTree = queueNodeMap[nextId];\r\n            if (nextInTree.parent) {\r\n                const idx = nextInTree.parent.children.indexOf(nextInTree);\r\n                nextInTree.parent.children.splice(idx, 0, putIntoMap(mutation, nextInTree.parent));\r\n            }\r\n            else {\r\n                const idx = queueNodeTrees.indexOf(nextInTree);\r\n                queueNodeTrees.splice(idx, 0, putIntoMap(mutation, null));\r\n            }\r\n            continue;\r\n        }\r\n        if (parentId in queueNodeMap) {\r\n            const parentInTree = queueNodeMap[parentId];\r\n            parentInTree.children.push(putIntoMap(mutation, parentInTree));\r\n            continue;\r\n        }\r\n        queueNodeTrees.push(putIntoMap(mutation, null));\r\n    }\r\n    return queueNodeTrees;\r\n}\r\nfunction iterateResolveTree(tree, cb) {\r\n    cb(tree.value);\r\n    for (let i = tree.children.length - 1; i >= 0; i--) {\r\n        iterateResolveTree(tree.children[i], cb);\r\n    }\r\n}\r\nfunction isSerializedIframe(n, mirror) {\r\n    return Boolean(n.nodeName === 'IFRAME' && mirror.getMeta(n));\r\n}\r\nfunction isSerializedStylesheet(n, mirror) {\r\n    return Boolean(n.nodeName === 'LINK' &&\r\n        n.nodeType === n.ELEMENT_NODE &&\r\n        n.getAttribute &&\r\n        n.getAttribute('rel') === 'stylesheet' &&\r\n        mirror.getMeta(n));\r\n}\r\nfunction getBaseDimension(node, rootIframe) {\r\n    const frameElement = node.ownerDocument?.defaultView?.frameElement;\r\n    if (!frameElement || frameElement === rootIframe) {\r\n        return {\r\n            x: 0,\r\n            y: 0,\r\n            relativeScale: 1,\r\n            absoluteScale: 1,\r\n        };\r\n    }\r\n    const frameDimension = frameElement.getBoundingClientRect();\r\n    const frameBaseDimension = getBaseDimension(frameElement, rootIframe);\r\n    const relativeScale = frameDimension.height / frameElement.clientHeight;\r\n    return {\r\n        x: frameDimension.x * frameBaseDimension.relativeScale +\r\n            frameBaseDimension.x,\r\n        y: frameDimension.y * frameBaseDimension.relativeScale +\r\n            frameBaseDimension.y,\r\n        relativeScale,\r\n        absoluteScale: frameBaseDimension.absoluteScale * relativeScale,\r\n    };\r\n}\r\nfunction hasShadowRoot(n) {\r\n    return Boolean(n?.shadowRoot);\r\n}\r\nfunction getNestedRule(rules, position) {\r\n    const rule = rules[position[0]];\r\n    if (position.length === 1) {\r\n        return rule;\r\n    }\r\n    else {\r\n        return getNestedRule(rule.cssRules[position[1]].cssRules, position.slice(2));\r\n    }\r\n}\r\nfunction getPositionsAndIndex(nestedIndex) {\r\n    const positions = [...nestedIndex];\r\n    const index = positions.pop();\r\n    return { positions, index };\r\n}\r\nfunction uniqueTextMutations(mutations) {\r\n    const idSet = new Set();\r\n    const uniqueMutations = [];\r\n    for (let i = mutations.length; i--;) {\r\n        const mutation = mutations[i];\r\n        if (!idSet.has(mutation.id)) {\r\n            uniqueMutations.push(mutation);\r\n            idSet.add(mutation.id);\r\n        }\r\n    }\r\n    return uniqueMutations;\r\n}\r\nclass StyleSheetMirror {\r\n    constructor() {\r\n        this.id = 1;\r\n        this.styleIDMap = new WeakMap();\r\n        this.idStyleMap = new Map();\r\n    }\r\n    getId(stylesheet) {\r\n        return this.styleIDMap.get(stylesheet) ?? -1;\r\n    }\r\n    has(stylesheet) {\r\n        return this.styleIDMap.has(stylesheet);\r\n    }\r\n    add(stylesheet, id) {\r\n        if (this.has(stylesheet))\r\n            return this.getId(stylesheet);\r\n        let newId;\r\n        if (id === undefined) {\r\n            newId = this.id++;\r\n        }\r\n        else\r\n            newId = id;\r\n        this.styleIDMap.set(stylesheet, newId);\r\n        this.idStyleMap.set(newId, stylesheet);\r\n        return newId;\r\n    }\r\n    getStyle(id) {\r\n        return this.idStyleMap.get(id) || null;\r\n    }\r\n    reset() {\r\n        this.styleIDMap = new WeakMap();\r\n        this.idStyleMap = new Map();\r\n        this.id = 1;\r\n    }\r\n    generateId() {\r\n        return this.id++;\r\n    }\r\n}\r\nfunction getShadowHost(n) {\r\n    let shadowHost = null;\r\n    if (n.getRootNode?.()?.nodeType === Node.DOCUMENT_FRAGMENT_NODE &&\r\n        n.getRootNode().host)\r\n        shadowHost = n.getRootNode().host;\r\n    return shadowHost;\r\n}\r\nfunction getRootShadowHost(n) {\r\n    let rootShadowHost = n;\r\n    let shadowHost;\r\n    while ((shadowHost = getShadowHost(rootShadowHost)))\r\n        rootShadowHost = shadowHost;\r\n    return rootShadowHost;\r\n}\r\nfunction shadowHostInDom(n) {\r\n    const doc = n.ownerDocument;\r\n    if (!doc)\r\n        return false;\r\n    const shadowHost = getRootShadowHost(n);\r\n    return doc.contains(shadowHost);\r\n}\r\nfunction inDom(n) {\r\n    const doc = n.ownerDocument;\r\n    if (!doc)\r\n        return false;\r\n    return doc.contains(n) || shadowHostInDom(n);\r\n}\r\nlet cachedRequestAnimationFrameImplementation;\r\nfunction getRequestAnimationFrameImplementation() {\r\n    if (cachedRequestAnimationFrameImplementation) {\r\n        return cachedRequestAnimationFrameImplementation;\r\n    }\r\n    const document = window.document;\r\n    let requestAnimationFrameImplementation = window.requestAnimationFrame;\r\n    if (document && typeof document.createElement === 'function') {\r\n        try {\r\n            const sandbox = document.createElement('iframe');\r\n            sandbox.hidden = true;\r\n            document.head.appendChild(sandbox);\r\n            const contentWindow = sandbox.contentWindow;\r\n            if (contentWindow && contentWindow.requestAnimationFrame) {\r\n                requestAnimationFrameImplementation =\r\n                    contentWindow.requestAnimationFrame;\r\n            }\r\n            document.head.removeChild(sandbox);\r\n        }\r\n        catch (e) {\r\n        }\r\n    }\r\n    return (cachedRequestAnimationFrameImplementation =\r\n        requestAnimationFrameImplementation.bind(window));\r\n}\r\nfunction onRequestAnimationFrame(...rest) {\r\n    return getRequestAnimationFrameImplementation()(...rest);\r\n}\n\nexport { StyleSheetMirror, _mirror, getBaseDimension, getNestedRule, getPositionsAndIndex, getRootShadowHost, getShadowHost, getWindowHeight, getWindowScroll, getWindowWidth, hasShadowRoot, hookSetter, inDom, isAncestorRemoved, isBlocked, isIgnored, isSerialized, isSerializedIframe, isSerializedStylesheet, iterateResolveTree, legacy_isTouchEvent, nowTimestamp, on, onRequestAnimationFrame, patch, polyfill, queueToResolveTrees, shadowHostInDom, throttle, uniqueTextMutations };\n", "var EventType = /* @__PURE__ */ ((EventType2) => {\n  EventType2[EventType2[\"DomContentLoaded\"] = 0] = \"DomContentLoaded\";\n  EventType2[EventType2[\"Load\"] = 1] = \"Load\";\n  EventType2[EventType2[\"FullSnapshot\"] = 2] = \"FullSnapshot\";\n  EventType2[EventType2[\"IncrementalSnapshot\"] = 3] = \"IncrementalSnapshot\";\n  EventType2[EventType2[\"Meta\"] = 4] = \"Meta\";\n  EventType2[EventType2[\"Custom\"] = 5] = \"Custom\";\n  EventType2[EventType2[\"Plugin\"] = 6] = \"Plugin\";\n  return EventType2;\n})(EventType || {});\nvar IncrementalSource = /* @__PURE__ */ ((IncrementalSource2) => {\n  IncrementalSource2[IncrementalSource2[\"Mutation\"] = 0] = \"Mutation\";\n  IncrementalSource2[IncrementalSource2[\"MouseMove\"] = 1] = \"MouseMove\";\n  IncrementalSource2[IncrementalSource2[\"MouseInteraction\"] = 2] = \"MouseInteraction\";\n  IncrementalSource2[IncrementalSource2[\"Scroll\"] = 3] = \"Scroll\";\n  IncrementalSource2[IncrementalSource2[\"ViewportResize\"] = 4] = \"ViewportResize\";\n  IncrementalSource2[IncrementalSource2[\"Input\"] = 5] = \"Input\";\n  IncrementalSource2[IncrementalSource2[\"TouchMove\"] = 6] = \"TouchMove\";\n  IncrementalSource2[IncrementalSource2[\"MediaInteraction\"] = 7] = \"MediaInteraction\";\n  IncrementalSource2[IncrementalSource2[\"StyleSheetRule\"] = 8] = \"StyleSheetRule\";\n  IncrementalSource2[IncrementalSource2[\"CanvasMutation\"] = 9] = \"CanvasMutation\";\n  IncrementalSource2[IncrementalSource2[\"Font\"] = 10] = \"Font\";\n  IncrementalSource2[IncrementalSource2[\"Log\"] = 11] = \"Log\";\n  IncrementalSource2[IncrementalSource2[\"Drag\"] = 12] = \"Drag\";\n  IncrementalSource2[IncrementalSource2[\"StyleDeclaration\"] = 13] = \"StyleDeclaration\";\n  IncrementalSource2[IncrementalSource2[\"Selection\"] = 14] = \"Selection\";\n  IncrementalSource2[IncrementalSource2[\"AdoptedStyleSheet\"] = 15] = \"AdoptedStyleSheet\";\n  IncrementalSource2[IncrementalSource2[\"CustomElement\"] = 16] = \"CustomElement\";\n  return IncrementalSource2;\n})(IncrementalSource || {});\nvar MouseInteractions = /* @__PURE__ */ ((MouseInteractions2) => {\n  MouseInteractions2[MouseInteractions2[\"MouseUp\"] = 0] = \"MouseUp\";\n  MouseInteractions2[MouseInteractions2[\"MouseDown\"] = 1] = \"MouseDown\";\n  MouseInteractions2[MouseInteractions2[\"Click\"] = 2] = \"Click\";\n  MouseInteractions2[MouseInteractions2[\"ContextMenu\"] = 3] = \"ContextMenu\";\n  MouseInteractions2[MouseInteractions2[\"DblClick\"] = 4] = \"DblClick\";\n  MouseInteractions2[MouseInteractions2[\"Focus\"] = 5] = \"Focus\";\n  MouseInteractions2[MouseInteractions2[\"Blur\"] = 6] = \"Blur\";\n  MouseInteractions2[MouseInteractions2[\"TouchStart\"] = 7] = \"TouchStart\";\n  MouseInteractions2[MouseInteractions2[\"TouchMove_Departed\"] = 8] = \"TouchMove_Departed\";\n  MouseInteractions2[MouseInteractions2[\"TouchEnd\"] = 9] = \"TouchEnd\";\n  MouseInteractions2[MouseInteractions2[\"TouchCancel\"] = 10] = \"TouchCancel\";\n  return MouseInteractions2;\n})(MouseInteractions || {});\nvar PointerTypes = /* @__PURE__ */ ((PointerTypes2) => {\n  PointerTypes2[PointerTypes2[\"Mouse\"] = 0] = \"Mouse\";\n  PointerTypes2[PointerTypes2[\"Pen\"] = 1] = \"Pen\";\n  PointerTypes2[PointerTypes2[\"Touch\"] = 2] = \"Touch\";\n  return PointerTypes2;\n})(PointerTypes || {});\nvar CanvasContext = /* @__PURE__ */ ((CanvasContext2) => {\n  CanvasContext2[CanvasContext2[\"2D\"] = 0] = \"2D\";\n  CanvasContext2[CanvasContext2[\"WebGL\"] = 1] = \"WebGL\";\n  CanvasContext2[CanvasContext2[\"WebGL2\"] = 2] = \"WebGL2\";\n  return CanvasContext2;\n})(CanvasContext || {});\nvar ReplayerEvents = /* @__PURE__ */ ((ReplayerEvents2) => {\n  ReplayerEvents2[\"Start\"] = \"start\";\n  ReplayerEvents2[\"Pause\"] = \"pause\";\n  ReplayerEvents2[\"Resume\"] = \"resume\";\n  ReplayerEvents2[\"Resize\"] = \"resize\";\n  ReplayerEvents2[\"Finish\"] = \"finish\";\n  ReplayerEvents2[\"FullsnapshotRebuilded\"] = \"fullsnapshot-rebuilded\";\n  ReplayerEvents2[\"LoadStylesheetStart\"] = \"load-stylesheet-start\";\n  ReplayerEvents2[\"LoadStylesheetEnd\"] = \"load-stylesheet-end\";\n  ReplayerEvents2[\"SkipStart\"] = \"skip-start\";\n  ReplayerEvents2[\"SkipEnd\"] = \"skip-end\";\n  ReplayerEvents2[\"MouseInteraction\"] = \"mouse-interaction\";\n  ReplayerEvents2[\"EventCast\"] = \"event-cast\";\n  ReplayerEvents2[\"CustomEvent\"] = \"custom-event\";\n  ReplayerEvents2[\"Flush\"] = \"flush\";\n  ReplayerEvents2[\"StateChange\"] = \"state-change\";\n  ReplayerEvents2[\"PlayBack\"] = \"play-back\";\n  ReplayerEvents2[\"Destroy\"] = \"destroy\";\n  return ReplayerEvents2;\n})(ReplayerEvents || {});\n\nexport { CanvasContext, EventType, IncrementalSource, MouseInteractions, PointerTypes, ReplayerEvents };\n", "let errorHandler;\r\nfunction registerErrorHandler(handler) {\r\n    errorHandler = handler;\r\n}\r\nfunction unregisterErrorHandler() {\r\n    errorHandler = undefined;\r\n}\r\nconst callbackWrapper = (cb) => {\r\n    if (!errorHandler) {\r\n        return cb;\r\n    }\r\n    const rrwebWrapped = ((...rest) => {\r\n        try {\r\n            return cb(...rest);\r\n        }\r\n        catch (error) {\r\n            if (errorHandler && errorHandler(error) === true) {\r\n                return () => {\r\n                };\r\n            }\r\n            throw error;\r\n        }\r\n    });\r\n    return rrwebWrapped;\r\n};\n\nexport { callbackWrapper, registerErrorHandler, unregisterErrorHandler };\n", "/*\n * base64-arraybuffer 1.0.1 <https://github.com/niklasvh/base64-arraybuffer>\n * Copyright (c) 2021 Niklas von Hertzen <https://hertzen.com>\n * Released under MIT License\n */\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nvar lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (var i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nvar encode = function (arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nvar decode = function (base64) {\n    var bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    var arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n\nexport { decode, encode };\n", "import { encode } from './../../../../../../ext/base64-arraybuffer/dist/base64-arraybuffer.es5.js';\n\nconst canvasVarMap = new Map();\r\nfunction variableListFor(ctx, ctor) {\r\n    let contextMap = canvasVarMap.get(ctx);\r\n    if (!contextMap) {\r\n        contextMap = new Map();\r\n        canvasVarMap.set(ctx, contextMap);\r\n    }\r\n    if (!contextMap.has(ctor)) {\r\n        contextMap.set(ctor, []);\r\n    }\r\n    return contextMap.get(ctor);\r\n}\r\nconst saveWebGLVar = (value, win, ctx) => {\r\n    if (!value ||\r\n        !(isInstanceOfWebGLObject(value, win) || typeof value === 'object'))\r\n        return;\r\n    const name = value.constructor.name;\r\n    const list = variableListFor(ctx, name);\r\n    let index = list.indexOf(value);\r\n    if (index === -1) {\r\n        index = list.length;\r\n        list.push(value);\r\n    }\r\n    return index;\r\n};\r\nfunction serializeArg(value, win, ctx) {\r\n    if (value instanceof Array) {\r\n        return value.map((arg) => serializeArg(arg, win, ctx));\r\n    }\r\n    else if (value === null) {\r\n        return value;\r\n    }\r\n    else if (value instanceof Float32Array ||\r\n        value instanceof Float64Array ||\r\n        value instanceof Int32Array ||\r\n        value instanceof Uint32Array ||\r\n        value instanceof Uint8Array ||\r\n        value instanceof Uint16Array ||\r\n        value instanceof Int16Array ||\r\n        value instanceof Int8Array ||\r\n        value instanceof Uint8ClampedArray) {\r\n        const name = value.constructor.name;\r\n        return {\r\n            rr_type: name,\r\n            args: [Object.values(value)],\r\n        };\r\n    }\r\n    else if (value instanceof ArrayBuffer) {\r\n        const name = value.constructor.name;\r\n        const base64 = encode(value);\r\n        return {\r\n            rr_type: name,\r\n            base64,\r\n        };\r\n    }\r\n    else if (value instanceof DataView) {\r\n        const name = value.constructor.name;\r\n        return {\r\n            rr_type: name,\r\n            args: [\r\n                serializeArg(value.buffer, win, ctx),\r\n                value.byteOffset,\r\n                value.byteLength,\r\n            ],\r\n        };\r\n    }\r\n    else if (value instanceof HTMLImageElement) {\r\n        const name = value.constructor.name;\r\n        const { src } = value;\r\n        return {\r\n            rr_type: name,\r\n            src,\r\n        };\r\n    }\r\n    else if (value instanceof HTMLCanvasElement) {\r\n        const name = 'HTMLImageElement';\r\n        const src = value.toDataURL();\r\n        return {\r\n            rr_type: name,\r\n            src,\r\n        };\r\n    }\r\n    else if (value instanceof ImageData) {\r\n        const name = value.constructor.name;\r\n        return {\r\n            rr_type: name,\r\n            args: [serializeArg(value.data, win, ctx), value.width, value.height],\r\n        };\r\n    }\r\n    else if (isInstanceOfWebGLObject(value, win) || typeof value === 'object') {\r\n        const name = value.constructor.name;\r\n        const index = saveWebGLVar(value, win, ctx);\r\n        return {\r\n            rr_type: name,\r\n            index: index,\r\n        };\r\n    }\r\n    return value;\r\n}\r\nconst serializeArgs = (args, win, ctx) => {\r\n    return args.map((arg) => serializeArg(arg, win, ctx));\r\n};\r\nconst isInstanceOfWebGLObject = (value, win) => {\r\n    const webGLConstructorNames = [\r\n        'WebGLActiveInfo',\r\n        'WebGLBuffer',\r\n        'WebGLFramebuffer',\r\n        'WebGLProgram',\r\n        'WebGLRenderbuffer',\r\n        'WebGLShader',\r\n        'WebGLShaderPrecisionFormat',\r\n        'WebGLTexture',\r\n        'WebGLUniformLocation',\r\n        'WebGLVertexArrayObject',\r\n        'WebGLVertexArrayObjectOES',\r\n    ];\r\n    const supportedWebGLConstructorNames = webGLConstructorNames.filter((name) => typeof win[name] === 'function');\r\n    return Boolean(supportedWebGLConstructorNames.find((name) => value instanceof win[name]));\r\n};\n\nexport { isInstanceOfWebGLObject, saveWebGLVar, serializeArg, serializeArgs, variableListFor };\n", "import { CanvasContext } from '../../../../../types/dist/rrweb-types.js';\nimport { patch, isBlocked, hookSetter } from '../../../utils.js';\nimport { serializeArgs } from './serialize-args.js';\n\nfunction initCanvas2DMutationObserver(cb, win, blockClass, blockSelector, unblockSelector) {\r\n    const handlers = [];\r\n    const props2D = Object.getOwnPropertyNames(win.CanvasRenderingContext2D.prototype);\r\n    for (const prop of props2D) {\r\n        try {\r\n            if (typeof win.CanvasRenderingContext2D.prototype[prop] !== 'function') {\r\n                continue;\r\n            }\r\n            const restoreHandler = patch(win.CanvasRenderingContext2D.prototype, prop, function (original) {\r\n                return function (...args) {\r\n                    if (!isBlocked(this.canvas, blockClass, blockSelector, unblockSelector, true)) {\r\n                        setTimeout(() => {\r\n                            const recordArgs = serializeArgs(args, win, this);\r\n                            cb(this.canvas, {\r\n                                type: CanvasContext['2D'],\r\n                                property: prop,\r\n                                args: recordArgs,\r\n                            });\r\n                        }, 0);\r\n                    }\r\n                    return original.apply(this, args);\r\n                };\r\n            });\r\n            handlers.push(restoreHandler);\r\n        }\r\n        catch {\r\n            const hookHandler = hookSetter(win.CanvasRenderingContext2D.prototype, prop, {\r\n                set(v) {\r\n                    cb(this.canvas, {\r\n                        type: CanvasContext['2D'],\r\n                        property: prop,\r\n                        args: [v],\r\n                        setter: true,\r\n                    });\r\n                },\r\n            });\r\n            handlers.push(hookHandler);\r\n        }\r\n    }\r\n    return () => {\r\n        handlers.forEach((h) => h());\r\n    };\r\n}\n\nexport { initCanvas2DMutationObserver as default };\n", "import { patch, isBlocked } from '../../../utils.js';\n\nfunction getNormalizedContextName(contextType) {\r\n    return contextType === 'experimental-webgl' ? 'webgl' : contextType;\r\n}\r\nfunction initCanvasContextObserver(win, blockClass, blockSelector, unblockSelector, setPreserveDrawingBufferToTrue) {\r\n    const handlers = [];\r\n    try {\r\n        const restoreHandler = patch(win.HTMLCanvasElement.prototype, 'getContext', function (original) {\r\n            return function (contextType, ...args) {\r\n                if (!isBlocked(this, blockClass, blockSelector, unblockSelector, true)) {\r\n                    const ctxName = getNormalizedContextName(contextType);\r\n                    if (!('__context' in this))\r\n                        this.__context = ctxName;\r\n                    if (setPreserveDrawingBufferToTrue &&\r\n                        ['webgl', 'webgl2'].includes(ctxName)) {\r\n                        if (args[0] && typeof args[0] === 'object') {\r\n                            const contextAttributes = args[0];\r\n                            if (!contextAttributes.preserveDrawingBuffer) {\r\n                                contextAttributes.preserveDrawingBuffer = true;\r\n                            }\r\n                        }\r\n                        else {\r\n                            args.splice(0, 1, {\r\n                                preserveDrawingBuffer: true,\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n                return original.apply(this, [contextType, ...args]);\r\n            };\r\n        });\r\n        handlers.push(restoreHandler);\r\n    }\r\n    catch {\r\n        console.error('failed to patch HTMLCanvasElement.prototype.getContext');\r\n    }\r\n    return () => {\r\n        handlers.forEach((h) => h());\r\n    };\r\n}\n\nexport { initCanvasContextObserver as default };\n", "import { CanvasContext } from '../../../../../types/dist/rrweb-types.js';\nimport { patch, isBlocked, hookSetter } from '../../../utils.js';\nimport { saveWebGLVar, serializeArgs } from './serialize-args.js';\n\nfunction patchGLPrototype(prototype, type, cb, blockClass, blockSelector, unblockSelector, mirror, win) {\r\n    const handlers = [];\r\n    const props = Object.getOwnPropertyNames(prototype);\r\n    for (const prop of props) {\r\n        if ([\r\n            'isContextLost',\r\n            'canvas',\r\n            'drawingBufferWidth',\r\n            'drawingBufferHeight',\r\n        ].includes(prop)) {\r\n            continue;\r\n        }\r\n        try {\r\n            if (typeof prototype[prop] !== 'function') {\r\n                continue;\r\n            }\r\n            const restoreHandler = patch(prototype, prop, function (original) {\r\n                return function (...args) {\r\n                    const result = original.apply(this, args);\r\n                    saveWebGLVar(result, win, this);\r\n                    if ('tagName' in this.canvas &&\r\n                        !isBlocked(this.canvas, blockClass, blockSelector, unblockSelector, true)) {\r\n                        const recordArgs = serializeArgs(args, win, this);\r\n                        const mutation = {\r\n                            type,\r\n                            property: prop,\r\n                            args: recordArgs,\r\n                        };\r\n                        cb(this.canvas, mutation);\r\n                    }\r\n                    return result;\r\n                };\r\n            });\r\n            handlers.push(restoreHandler);\r\n        }\r\n        catch {\r\n            const hookHandler = hookSetter(prototype, prop, {\r\n                set(v) {\r\n                    cb(this.canvas, {\r\n                        type,\r\n                        property: prop,\r\n                        args: [v],\r\n                        setter: true,\r\n                    });\r\n                },\r\n            });\r\n            handlers.push(hookHandler);\r\n        }\r\n    }\r\n    return handlers;\r\n}\r\nfunction initCanvasWebGLMutationObserver(cb, win, blockClass, blockSelector, unblockSelector, mirror) {\r\n    const handlers = [];\r\n    handlers.push(...patchGLPrototype(win.WebGLRenderingContext.prototype, CanvasContext.WebGL, cb, blockClass, blockSelector, unblockSelector, mirror, win));\r\n    if (typeof win.WebGL2RenderingContext !== 'undefined') {\r\n        handlers.push(...patchGLPrototype(win.WebGL2RenderingContext.prototype, CanvasContext.WebGL2, cb, blockClass, blockSelector, unblockSelector, mirror, win));\r\n    }\r\n    return () => {\r\n        handlers.forEach((h) => h());\r\n    };\r\n}\n\nexport { initCanvasWebGLMutationObserver as default };\n", "var r = `for(var t=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\",e=\"undefined\"==typeof Uint8Array?[]:new Uint8Array(256),n=0;n<64;n++)e[t.charCodeAt(n)]=n;var a=function(e){var n,a=new Uint8Array(e),s=a.length,r=\"\";for(n=0;n<s;n+=3)r+=t[a[n]>>2],r+=t[(3&a[n])<<4|a[n+1]>>4],r+=t[(15&a[n+1])<<2|a[n+2]>>6],r+=t[63&a[n+2]];return s%3==2?r=r.substring(0,r.length-1)+\"=\":s%3==1&&(r=r.substring(0,r.length-2)+\"==\"),r};const s=new Map,r=new Map;const i=self;i.onmessage=async function(t){if(!(\"OffscreenCanvas\"in globalThis))return i.postMessage({id:t.data.id});{const{id:e,bitmap:n,width:o,height:f,dataURLOptions:c}=t.data,g=async function(t,e,n){const s=t+\"-\"+e;if(\"OffscreenCanvas\"in globalThis){if(r.has(s))return r.get(s);const i=new OffscreenCanvas(t,e);i.getContext(\"2d\");const o=await i.convertToBlob(n),f=await o.arrayBuffer(),c=a(f);return r.set(s,c),c}return\"\"}(o,f,c),d=new OffscreenCanvas(o,f);d.getContext(\"2d\").drawImage(n,0,0),n.close();const u=await d.convertToBlob(c),h=u.type,w=await u.arrayBuffer(),l=a(w);if(!s.has(e)&&await g===l)return s.set(e,l),i.postMessage({id:e});if(s.get(e)===l)return i.postMessage({id:e});i.postMessage({id:e,type:h,base64:l,width:o,height:f}),s.set(e,l)}};`;\n\nexport { r as default };\n", "import r from './image-bitmap-data-url-worker.js';\n\nfunction t(){const t=new Blob([r]);return URL.createObjectURL(t)}\n\nexport { t as getImageBitmapDataUrlWorkerURL };\n", "import { onRequestAnimationFrame, isBlocked } from '../../../utils.js';\nimport { CanvasContext } from '../../../../../types/dist/rrweb-types.js';\nimport initCanvas2DMutationObserver from './2d.js';\nimport initCanvasContextObserver from './canvas.js';\nimport initCanvasWebGLMutationObserver from './webgl.js';\nimport { getImageBitmapDataUrlWorkerURL as t } from '../../../../../rrweb-worker/es/rrweb-worker/index.js';\nimport { callbackWrapper, registerErrorHandler } from '../../error-handler.js';\n\nclass CanvasManagerNoop {\r\n    reset() {\r\n    }\r\n    freeze() {\r\n    }\r\n    unfreeze() {\r\n    }\r\n    lock() {\r\n    }\r\n    unlock() {\r\n    }\r\n    snapshot() {\r\n    }\r\n}\r\nclass CanvasManager {\r\n    reset() {\r\n        this.pendingCanvasMutations.clear();\r\n        this.resetObservers && this.resetObservers();\r\n    }\r\n    freeze() {\r\n        this.frozen = true;\r\n    }\r\n    unfreeze() {\r\n        this.frozen = false;\r\n    }\r\n    lock() {\r\n        this.locked = true;\r\n    }\r\n    unlock() {\r\n        this.locked = false;\r\n    }\r\n    constructor(options) {\r\n        this.pendingCanvasMutations = new Map();\r\n        this.rafStamps = { latestId: 0, invokeId: null };\r\n        this.frozen = false;\r\n        this.locked = false;\r\n        this.processMutation = (target, mutation) => {\r\n            const newFrame = this.rafStamps.invokeId &&\r\n                this.rafStamps.latestId !== this.rafStamps.invokeId;\r\n            if (newFrame || !this.rafStamps.invokeId)\r\n                this.rafStamps.invokeId = this.rafStamps.latestId;\r\n            if (!this.pendingCanvasMutations.has(target)) {\r\n                this.pendingCanvasMutations.set(target, []);\r\n            }\r\n            this.pendingCanvasMutations.get(target).push(mutation);\r\n        };\r\n        const { sampling = 'all', win, blockClass, blockSelector, unblockSelector, recordCanvas, dataURLOptions, errorHandler, } = options;\r\n        this.mutationCb = options.mutationCb;\r\n        this.mirror = options.mirror;\r\n        this.options = options;\r\n        if (errorHandler) {\r\n            registerErrorHandler(errorHandler);\r\n        }\r\n        if (options.enableManualSnapshot) {\r\n            return;\r\n        }\r\n        callbackWrapper(() => {\r\n            if (recordCanvas && sampling === 'all')\r\n                this.initCanvasMutationObserver(win, blockClass, blockSelector, unblockSelector);\r\n            if (recordCanvas && typeof sampling === 'number')\r\n                this.initCanvasFPSObserver(sampling, win, blockClass, blockSelector, unblockSelector, {\r\n                    dataURLOptions,\r\n                });\r\n        })();\r\n    }\r\n    initCanvasFPSObserver(fps, win, blockClass, blockSelector, unblockSelector, options) {\r\n        const canvasContextReset = initCanvasContextObserver(win, blockClass, blockSelector, unblockSelector, true);\r\n        const rafId = this.takeSnapshot(false, fps, win, blockClass, blockSelector, unblockSelector, options.dataURLOptions);\r\n        this.resetObservers = () => {\r\n            canvasContextReset();\r\n            cancelAnimationFrame(rafId);\r\n        };\r\n    }\r\n    initCanvasMutationObserver(win, blockClass, blockSelector, unblockSelector) {\r\n        this.startRAFTimestamping();\r\n        this.startPendingCanvasMutationFlusher();\r\n        const canvasContextReset = initCanvasContextObserver(win, blockClass, blockSelector, unblockSelector, false);\r\n        const canvas2DReset = initCanvas2DMutationObserver(this.processMutation.bind(this), win, blockClass, blockSelector, unblockSelector);\r\n        const canvasWebGL1and2Reset = initCanvasWebGLMutationObserver(this.processMutation.bind(this), win, blockClass, blockSelector, unblockSelector, this.mirror);\r\n        this.resetObservers = () => {\r\n            canvasContextReset();\r\n            canvas2DReset();\r\n            canvasWebGL1and2Reset();\r\n        };\r\n    }\r\n    snapshot(canvasElement) {\r\n        const { options } = this;\r\n        const rafId = this.takeSnapshot(true, options.sampling === 'all' ? 2 : options.sampling || 2, options.win, options.blockClass, options.blockSelector, options.unblockSelector, options.dataURLOptions, canvasElement);\r\n        this.resetObservers = () => {\r\n            cancelAnimationFrame(rafId);\r\n        };\r\n    }\r\n    takeSnapshot(isManualSnapshot, fps, win, blockClass, blockSelector, unblockSelector, dataURLOptions, canvasElement) {\r\n        const snapshotInProgressMap = new Map();\r\n        const worker = new Worker(t());\r\n        worker.onmessage = (e) => {\r\n            const data = e.data;\r\n            const { id } = data;\r\n            snapshotInProgressMap.set(id, false);\r\n            if (!('base64' in data))\r\n                return;\r\n            const { base64, type, width, height } = data;\r\n            this.mutationCb({\r\n                id,\r\n                type: CanvasContext['2D'],\r\n                commands: [\r\n                    {\r\n                        property: 'clearRect',\r\n                        args: [0, 0, width, height],\r\n                    },\r\n                    {\r\n                        property: 'drawImage',\r\n                        args: [\r\n                            {\r\n                                rr_type: 'ImageBitmap',\r\n                                args: [\r\n                                    {\r\n                                        rr_type: 'Blob',\r\n                                        data: [{ rr_type: 'ArrayBuffer', base64 }],\r\n                                        type,\r\n                                    },\r\n                                ],\r\n                            },\r\n                            0,\r\n                            0,\r\n                        ],\r\n                    },\r\n                ],\r\n            });\r\n        };\r\n        const timeBetweenSnapshots = 1000 / fps;\r\n        let lastSnapshotTime = 0;\r\n        let rafId;\r\n        const getCanvas = (canvasElement) => {\r\n            if (canvasElement) {\r\n                return [canvasElement];\r\n            }\r\n            const matchedCanvas = [];\r\n            win.document.querySelectorAll('canvas').forEach((canvas) => {\r\n                if (!isBlocked(canvas, blockClass, blockSelector, unblockSelector, true)) {\r\n                    matchedCanvas.push(canvas);\r\n                }\r\n            });\r\n            return matchedCanvas;\r\n        };\r\n        const takeCanvasSnapshots = (timestamp) => {\r\n            if (lastSnapshotTime &&\r\n                timestamp - lastSnapshotTime < timeBetweenSnapshots) {\r\n                rafId = onRequestAnimationFrame(takeCanvasSnapshots);\r\n                return;\r\n            }\r\n            lastSnapshotTime = timestamp;\r\n            getCanvas(canvasElement).forEach((canvas) => {\r\n                const id = this.mirror.getId(canvas);\r\n                if (snapshotInProgressMap.get(id))\r\n                    return;\r\n                snapshotInProgressMap.set(id, true);\r\n                if (!isManualSnapshot &&\r\n                    ['webgl', 'webgl2'].includes(canvas.__context)) {\r\n                    const context = canvas.getContext(canvas.__context);\r\n                    if (context?.getContextAttributes()?.preserveDrawingBuffer === false) {\r\n                        context.clear(context.COLOR_BUFFER_BIT);\r\n                    }\r\n                }\r\n                createImageBitmap(canvas)\r\n                    .then((bitmap) => {\r\n                    worker.postMessage({\r\n                        id,\r\n                        bitmap,\r\n                        width: canvas.width,\r\n                        height: canvas.height,\r\n                        dataURLOptions,\r\n                    }, [bitmap]);\r\n                })\r\n                    .catch((error) => {\r\n                    callbackWrapper(() => {\r\n                        throw error;\r\n                    })();\r\n                });\r\n            });\r\n            rafId = onRequestAnimationFrame(takeCanvasSnapshots);\r\n        };\r\n        rafId = onRequestAnimationFrame(takeCanvasSnapshots);\r\n        return rafId;\r\n    }\r\n    startPendingCanvasMutationFlusher() {\r\n        onRequestAnimationFrame(() => this.flushPendingCanvasMutations());\r\n    }\r\n    startRAFTimestamping() {\r\n        const setLatestRAFTimestamp = (timestamp) => {\r\n            this.rafStamps.latestId = timestamp;\r\n            onRequestAnimationFrame(setLatestRAFTimestamp);\r\n        };\r\n        onRequestAnimationFrame(setLatestRAFTimestamp);\r\n    }\r\n    flushPendingCanvasMutations() {\r\n        this.pendingCanvasMutations.forEach((values, canvas) => {\r\n            const id = this.mirror.getId(canvas);\r\n            this.flushPendingCanvasMutationFor(canvas, id);\r\n        });\r\n        onRequestAnimationFrame(() => this.flushPendingCanvasMutations());\r\n    }\r\n    flushPendingCanvasMutationFor(canvas, id) {\r\n        if (this.frozen || this.locked) {\r\n            return;\r\n        }\r\n        const valuesWithType = this.pendingCanvasMutations.get(canvas);\r\n        if (!valuesWithType || id === -1)\r\n            return;\r\n        const values = valuesWithType.map((value) => {\r\n            const { type, ...rest } = value;\r\n            return rest;\r\n        });\r\n        const { type } = valuesWithType[0];\r\n        this.mutationCb({ id, type, commands: values });\r\n        this.pendingCanvasMutations.delete(canvas);\r\n    }\r\n}\n\nexport { CanvasManager, CanvasManagerNoop };\n", "import { CanvasManager } from '@sentry-internal/rrweb';\nimport { convertIntegrationFnToClass, defineIntegration } from '@sentry/core';\nimport type { CanvasManagerInterface, CanvasManagerOptions } from '@sentry/replay';\nimport type { Integration, IntegrationClass, IntegrationFn } from '@sentry/types';\n\ninterface ReplayCanvasOptions {\n  enableManualSnapshot?: boolean;\n  quality: 'low' | 'medium' | 'high';\n}\n\ntype GetCanvasManager = (options: CanvasManagerOptions) => CanvasManagerInterface;\nexport interface ReplayCanvasIntegrationOptions {\n  enableManualSnapshot?: boolean;\n  recordCanvas: true;\n  getCanvasManager: GetCanvasManager;\n  sampling: {\n    canvas: number;\n  };\n  dataURLOptions: {\n    type: string;\n    quality: number;\n  };\n}\n\nconst CANVAS_QUALITY = {\n  low: {\n    sampling: {\n      canvas: 1,\n    },\n    dataURLOptions: {\n      type: 'image/webp',\n      quality: 0.25,\n    },\n  },\n  medium: {\n    sampling: {\n      canvas: 2,\n    },\n    dataURLOptions: {\n      type: 'image/webp',\n      quality: 0.4,\n    },\n  },\n  high: {\n    sampling: {\n      canvas: 4,\n    },\n    dataURLOptions: {\n      type: 'image/webp',\n      quality: 0.5,\n    },\n  },\n};\n\nconst INTEGRATION_NAME = 'ReplayCanvas';\n\n/** Exported only for type safe tests. */\nexport const _replayCanvasIntegration = ((options: Partial<ReplayCanvasOptions> = {}) => {\n  const _canvasOptions = {\n    quality: options.quality || 'medium',\n    enableManualSnapshot: options.enableManualSnapshot,\n  };\n\n  let canvasManagerResolve: (value: CanvasManager) => void;\n  const _canvasManager: Promise<CanvasManager> = new Promise(resolve => (canvasManagerResolve = resolve));\n\n  return {\n    name: INTEGRATION_NAME,\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    setupOnce() {},\n    getOptions(): ReplayCanvasIntegrationOptions {\n      const { quality, enableManualSnapshot } = _canvasOptions;\n\n      return {\n        enableManualSnapshot,\n        recordCanvas: true,\n        getCanvasManager: (options: CanvasManagerOptions) => {\n          const manager = new CanvasManager({\n            ...options,\n            enableManualSnapshot,\n            errorHandler: (err: unknown) => {\n              try {\n                if (typeof err === 'object') {\n                  (err as Error & { __rrweb__?: boolean }).__rrweb__ = true;\n                }\n              } catch (error) {\n                // ignore errors here\n                // this can happen if the error is frozen or does not allow mutation for other reasons\n              }\n            },\n          });\n          canvasManagerResolve(manager);\n          return manager;\n        },\n        ...(CANVAS_QUALITY[quality || 'medium'] || CANVAS_QUALITY.medium),\n      };\n    },\n    async snapshot(canvasElement?: HTMLCanvasElement) {\n      const canvasManager = await _canvasManager;\n      canvasManager.snapshot(canvasElement);\n    },\n  };\n}) satisfies IntegrationFn;\n\n/**\n * Add this in addition to `replayIntegration()` to enable canvas recording.\n */\nexport const replayCanvasIntegration = defineIntegration(_replayCanvasIntegration);\n\n/**\n * @deprecated Use `replayCanvasIntegration()` instead\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const ReplayCanvas = convertIntegrationFnToClass(INTEGRATION_NAME, replayCanvasIntegration) as IntegrationClass<\n  Integration & {\n    getOptions: () => ReplayCanvasIntegrationOptions;\n  }\n>;\n", "import { GLOBAL_OBJ } from '@sentry/utils';\n\n// exporting a separate copy of `WINDOW` rather than exporting the one from `@sentry/browser`\n// prevents the browser package from being bundled in the CDN bundle, and avoids a\n// circular dependency between the browser and feedback packages\nexport const WINDOW = GLOBAL_OBJ as typeof GLOBAL_OBJ & Window;\n\nconst LIGHT_BACKGROUND = '#ffffff';\nconst INHERIT = 'inherit';\nconst SUBMIT_COLOR = 'rgba(108, 95, 199, 1)';\nconst LIGHT_THEME = {\n  fontFamily: \"system-ui, 'Helvetica Neue', Arial, sans-serif\",\n  fontSize: '14px',\n\n  background: LIGHT_BACKGROUND,\n  backgroundHover: '#f6f6f7',\n  foreground: '#2b2233',\n  border: '1.5px solid rgba(41, 35, 47, 0.13)',\n  borderRadius: '12px',\n  boxShadow: '0px 4px 24px 0px rgba(43, 34, 51, 0.12)',\n\n  success: '#268d75',\n  error: '#df3338',\n\n  submitBackground: 'rgba(88, 74, 192, 1)',\n  submitBackgroundHover: SUBMIT_COLOR,\n  submitBorder: SUBMIT_COLOR,\n  submitOutlineFocus: '#29232f',\n  submitForeground: LIGHT_BACKGROUND,\n  submitForegroundHover: LIGHT_BACKGROUND,\n\n  cancelBackground: 'transparent',\n  cancelBackgroundHover: 'var(--background-hover)',\n  cancelBorder: 'var(--border)',\n  cancelOutlineFocus: 'var(--input-outline-focus)',\n  cancelForeground: 'var(--foreground)',\n  cancelForegroundHover: 'var(--foreground)',\n\n  inputBackground: INHERIT,\n  inputForeground: INHERIT,\n  inputBorder: 'var(--border)',\n  inputOutlineFocus: SUBMIT_COLOR,\n\n  formBorderRadius: '20px',\n  formContentBorderRadius: '6px',\n};\n\nexport const DEFAULT_THEME = {\n  light: LIGHT_THEME,\n  dark: {\n    ...LIGHT_THEME,\n\n    background: '#29232f',\n    backgroundHover: '#352f3b',\n    foreground: '#ebe6ef',\n    border: '1.5px solid rgba(235, 230, 239, 0.15)',\n\n    success: '#2da98c',\n    error: '#f55459',\n  },\n};\n\nexport const ACTOR_LABEL = 'Report a Bug';\nexport const CANCEL_BUTTON_LABEL = 'Cancel';\nexport const SUBMIT_BUTTON_LABEL = 'Send Bug Report';\nexport const FORM_TITLE = 'Report a Bug';\nexport const EMAIL_PLACEHOLDER = 'your.email@example.org';\nexport const EMAIL_LABEL = 'Email';\nexport const MESSAGE_PLACEHOLDER = \"What's the bug? What did you expect?\";\nexport const MESSAGE_LABEL = 'Description';\nexport const NAME_PLACEHOLDER = 'Your Name';\nexport const NAME_LABEL = 'Name';\nexport const SUCCESS_MESSAGE_TEXT = 'Thank you for your report!';\n\nexport const FEEDBACK_WIDGET_SOURCE = 'widget';\nexport const FEEDBACK_API_SOURCE = 'api';\n", "import type { Scope } from '@sentry/core';\nimport { getIsolationScope } from '@sentry/core';\nimport { prepareEvent } from '@sentry/core';\nimport type { Client, FeedbackEvent } from '@sentry/types';\n\ninterface PrepareFeedbackEventParams {\n  client: Client;\n  event: FeedbackEvent;\n  scope: Scope;\n}\n/**\n * Prepare a feedback event & enrich it with the SDK metadata.\n */\nexport async function prepareFeedbackEvent({\n  client,\n  scope,\n  event,\n}: PrepareFeedbackEventParams): Promise<FeedbackEvent | null> {\n  const eventHint = {};\n  if (client.emit) {\n    client.emit('preprocessEvent', event, eventHint);\n  }\n\n  const preparedEvent = (await prepareEvent(\n    client.getOptions(),\n    event,\n    eventHint,\n    scope,\n    client,\n    getIsolationScope(),\n  )) as FeedbackEvent | null;\n\n  if (preparedEvent === null) {\n    // Taken from baseclient's `_processEvent` method, where this is handled for errors/transactions\n    client.recordDroppedEvent('event_processor', 'feedback', event);\n    return null;\n  }\n\n  // This normally happens in browser client \"_prepareEvent\"\n  // but since we do not use this private method from the client, but rather the plain import\n  // we need to do this manually.\n  preparedEvent.platform = preparedEvent.platform || 'javascript';\n\n  return preparedEvent;\n}\n", "import { createEventEnvelope, getClient, withScope } from '@sentry/core';\nimport type { FeedbackEvent, TransportMakeRequestResponse } from '@sentry/types';\n\nimport { FEEDBACK_API_SOURCE, FEEDBACK_WIDGET_SOURCE } from '../constants';\nimport type { SendFeedbackData, SendFeedbackOptions } from '../types';\nimport { prepareFeedbackEvent } from './prepareFeedbackEvent';\n\n/**\n * Send feedback using transport\n */\nexport async function sendFeedbackRequest(\n  { feedback: { message, email, name, source, url } }: SendFeedbackData,\n  { includeReplay = true }: SendFeedbackOptions = {},\n): Promise<void | TransportMakeRequestResponse> {\n  const client = getClient();\n  const transport = client && client.getTransport();\n  const dsn = client && client.getDsn();\n\n  if (!client || !transport || !dsn) {\n    return;\n  }\n\n  const baseEvent: FeedbackEvent = {\n    contexts: {\n      feedback: {\n        contact_email: email,\n        name,\n        message,\n        url,\n        source,\n      },\n    },\n    type: 'feedback',\n  };\n\n  return withScope(async scope => {\n    // No use for breadcrumbs in feedback\n    scope.clearBreadcrumbs();\n\n    if ([FEEDBACK_API_SOURCE, FEEDBACK_WIDGET_SOURCE].includes(String(source))) {\n      scope.setLevel('info');\n    }\n\n    const feedbackEvent = await prepareFeedbackEvent({\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      scope: scope as any,\n      client,\n      event: baseEvent,\n    });\n\n    if (!feedbackEvent) {\n      return;\n    }\n\n    if (client.emit) {\n      client.emit('beforeSendFeedback', feedbackEvent, { includeReplay: Boolean(includeReplay) });\n    }\n\n    const envelope = createEventEnvelope(feedbackEvent, dsn, client.getOptions()._metadata, client.getOptions().tunnel);\n\n    let response: void | TransportMakeRequestResponse;\n\n    try {\n      response = await transport.send(envelope);\n    } catch (err) {\n      const error = new Error('Unable to send Feedback');\n\n      try {\n        // In case browsers don't allow this property to be writable\n        // @ts-expect-error This needs lib es2022 and newer\n        error.cause = err;\n      } catch {\n        // nothing to do\n      }\n      throw error;\n    }\n\n    // TODO (v8): we can remove this guard once transport.send's type signature doesn't include void anymore\n    if (!response) {\n      return;\n    }\n\n    // Require valid status codes, otherwise can assume feedback was not sent successfully\n    if (typeof response.statusCode === 'number' && (response.statusCode < 200 || response.statusCode >= 300)) {\n      throw new Error('Unable to send Feedback');\n    }\n\n    return response;\n  });\n}\n\n/*\n * For reference, the fully built event looks something like this:\n * {\n *     \"type\": \"feedback\",\n *     \"event_id\": \"d2132d31b39445f1938d7e21b6bf0ec4\",\n *     \"timestamp\": 1597977777.6189718,\n *     \"dist\": \"1.12\",\n *     \"platform\": \"javascript\",\n *     \"environment\": \"production\",\n *     \"release\": 42,\n *     \"tags\": {\"transaction\": \"/organizations/:orgId/performance/:eventSlug/\"},\n *     \"sdk\": {\"name\": \"name\", \"version\": \"version\"},\n *     \"user\": {\n *         \"id\": \"123\",\n *         \"username\": \"user\",\n *         \"email\": \"user@site.com\",\n *         \"ip_address\": \"192.168.11.12\",\n *     },\n *     \"request\": {\n *         \"url\": None,\n *         \"headers\": {\n *             \"user-Agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/15.5 Safari/605.1.15\"\n *         },\n *     },\n *     \"contexts\": {\n *         \"feedback\": {\n *             \"message\": \"test message\",\n *             \"contact_email\": \"test@example.com\",\n *             \"type\": \"feedback\",\n *         },\n *         \"trace\": {\n *             \"trace_id\": \"4C79F60C11214EB38604F4AE0781BFB2\",\n *             \"span_id\": \"FA90FDEAD5F74052\",\n *             \"type\": \"trace\",\n *         },\n *         \"replay\": {\n *             \"replay_id\": \"e2d42047b1c5431c8cba85ee2a8ab25d\",\n *         },\n *     },\n *   }\n */\n", "import { getLocationHref } from '@sentry/utils';\n\nimport { FEEDBACK_API_SOURCE } from './constants';\nimport type { SendFeedbackOptions } from './types';\nimport { sendFeedbackRequest } from './util/sendFeedbackRequest';\n\ninterface SendFeedbackParams {\n  message: string;\n  name?: string;\n  email?: string;\n  url?: string;\n  source?: string;\n}\n\n/**\n * Public API to send a Feedback item to Sentry\n */\nexport function sendFeedback(\n  { name, email, message, source = FEEDBACK_API_SOURCE, url = getLocationHref() }: SendFeedbackParams,\n  options: SendFeedbackOptions = {},\n): ReturnType<typeof sendFeedbackRequest> {\n  if (!message) {\n    throw new Error('Unable to submit feedback with empty message');\n  }\n\n  return sendFeedbackRequest(\n    {\n      feedback: {\n        name,\n        email,\n        message,\n        url,\n        source,\n      },\n    },\n    options,\n  );\n}\n", "declare const __DEBUG_BUILD__: boolean;\n\n/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nexport const DEBUG_BUILD = __DEBUG_BUILD__;\n", "import type { FeedbackInternalOptions, OptionalFeedbackConfiguration } from '../types';\n\n/**\n * Quick and dirty deep merge for the Feedback integration options\n */\nexport function mergeOptions(\n  defaultOptions: FeedbackInternalOptions,\n  optionOverrides: OptionalFeedbackConfiguration,\n): FeedbackInternalOptions {\n  return {\n    ...defaultOptions,\n    ...optionOverrides,\n    themeDark: {\n      ...defaultOptions.themeDark,\n      ...optionOverrides.themeDark,\n    },\n    themeLight: {\n      ...defaultOptions.themeLight,\n      ...optionOverrides.themeLight,\n    },\n  };\n}\n", "/**\n * Creates <style> element for widget actor (button that opens the dialog)\n */\nexport function createActorStyles(d: Document): HTMLStyleElement {\n  const style = d.createElement('style');\n  style.textContent = `\n.widget__actor {\n  line-height: 25px;\n\n  display: flex;\n  align-items: center;\n  gap: 8px;\n\n  border-radius: var(--border-radius);\n  cursor: pointer;\n  font-size: 14px;\n  font-weight: 600;\n  padding: 12px 16px;\n  text-decoration: none;\n  z-index: 9000;\n\n  color: var(--foreground);\n  background-color: var(--background);\n  border: var(--border);\n  box-shadow: var(--box-shadow);\n  opacity: 1;\n  transition: opacity 0.1s ease-in-out;\n}\n\n.widget__actor:hover {\n  background-color: var(--background-hover);\n}\n\n.widget__actor svg {\n  width: 16px;\n  height: 16px;\n}\n\n.widget__actor--hidden {\n  opacity: 0;\n  pointer-events: none;\n  visibility: hidden;\n}\n\n.widget__actor__text {\n}\n\n.feedback-icon path {\n  fill: var(--foreground);\n}\n`;\n\n  return style;\n}\n", "/**\n * Creates <style> element for widget dialog\n */\nexport function createDialogStyles(d: Document): HTMLStyleElement {\n  const style = d.createElement('style');\n\n  style.textContent = `\n.dialog {\n  line-height: 25px;\n  background-color: rgba(0, 0, 0, 0.05);\n  border: none;\n  position: fixed;\n  inset: 0;\n  z-index: 10000;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  opacity: 1;\n  transition: opacity 0.2s ease-in-out;\n}\n\n.dialog:not([open]) {\n  opacity: 0;\n  pointer-events: none;\n  visibility: hidden;\n}\n.dialog:not([open]) .dialog__content {\n  transform: translate(0, -16px) scale(0.98);\n}\n\n.dialog__content {\n  position: fixed;\n  left: var(--left);\n  right: var(--right);\n  bottom: var(--bottom);\n  top: var(--top);\n\n  border: var(--border);\n  border-radius: var(--form-border-radius);\n  background-color: var(--background);\n  color: var(--foreground);\n\n  width: 320px;\n  max-width: 100%;\n  max-height: calc(100% - 2rem);\n  display: flex;\n  flex-direction: column;\n  box-shadow: var(--box-shadow);\n  transition: transform 0.2s ease-in-out;\n  transform: translate(0, 0) scale(1);\n}\n\n.dialog__header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  font-size: 20px;\n  font-weight: 600;\n  padding: 24px 24px 0 24px;\n  margin: 0;\n  margin-bottom: 16px;\n}\n\n.brand-link {\n  display: inline-flex;\n}\n\n.error {\n  color: var(--error);\n  margin-bottom: 16px;\n}\n\n.form {\n  display: grid;\n  overflow: auto;\n  flex-direction: column;\n  gap: 16px;\n  padding: 0 24px 24px;\n}\n\n.form__error-container {\n  color: var(--error);\n}\n\n.form__error-container--hidden {\n  display: none;\n}\n\n.form__label {\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  margin: 0px;\n}\n\n.form__label__text {\n  display: grid;\n  gap: 4px;\n  align-items: center;\n  grid-auto-flow: column;\n  grid-auto-columns: max-content;\n}\n\n.form__label__text--required {\n  font-size: 0.85em;\n}\n\n.form__input {\n  font-family: inherit;\n  line-height: inherit;\n  background-color: var(--input-background);\n  box-sizing: border-box;\n  border: var(--input-border);\n  border-radius: var(--form-content-border-radius);\n  color: var(--input-foreground);\n  font-size: 14px;\n  font-weight: 500;\n  padding: 6px 12px;\n}\n\n.form__input:focus-visible {\n  outline: 1px auto var(--input-outline-focus);\n}\n\n.form__input--textarea {\n  font-family: inherit;\n  resize: vertical;\n}\n\n.btn-group {\n  display: grid;\n  gap: 8px;\n  margin-top: 8px;\n}\n\n.btn {\n  line-height: inherit;\n  border: var(--cancel-border);\n  border-radius: var(--form-content-border-radius);\n  cursor: pointer;\n  font-size: 14px;\n  font-weight: 600;\n  padding: 6px 16px;\n}\n.btn[disabled] {\n  opacity: 0.6;\n  pointer-events: none;\n}\n\n.btn--primary {\n  background-color: var(--submit-background);\n  border-color: var(--submit-border);\n  color: var(--submit-foreground);\n}\n.btn--primary:hover {\n  background-color: var(--submit-background-hover);\n  color: var(--submit-foreground-hover);\n}\n.btn--primary:focus-visible {\n  outline: 1px auto var(--submit-outline-focus);\n}\n\n.btn--default {\n  background-color: var(--cancel-background);\n  color: var(--cancel-foreground);\n  font-weight: 500;\n}\n.btn--default:hover {\n  background-color: var(--cancel-background-hover);\n  color: var(--cancel-foreground-hover);\n}\n.btn--default:focus-visible {\n  outline: 1px auto var(--cancel-outline-focus);\n}\n\n.success-message {\n  background-color: var(--background);\n  border: var(--border);\n  border-radius: var(--border-radius);\n  box-shadow: var(--box-shadow);\n  font-weight: 600;\n  color: var(--success);\n  padding: 12px 24px;\n  line-height: 25px;\n  display: grid;\n  align-items: center;\n  grid-auto-flow: column;\n  gap: 6px;\n  cursor: default;\n}\n\n.success-icon path {\n  fill: var(--success);\n}\n`;\n\n  return style;\n}\n", "import type { FeedbackTheme, FeedbackThemes } from '../types';\n\nfunction getThemedCssVariables(theme: FeedbackTheme): string {\n  return `\n  --background: ${theme.background};\n  --background-hover: ${theme.backgroundHover};\n  --foreground: ${theme.foreground};\n  --error: ${theme.error};\n  --success: ${theme.success};\n  --border: ${theme.border};\n  --border-radius: ${theme.borderRadius};\n  --box-shadow: ${theme.boxShadow};\n\n  --submit-background: ${theme.submitBackground};\n  --submit-background-hover: ${theme.submitBackgroundHover};\n  --submit-border: ${theme.submitBorder};\n  --submit-outline-focus: ${theme.submitOutlineFocus};\n  --submit-foreground: ${theme.submitForeground};\n  --submit-foreground-hover: ${theme.submitForegroundHover};\n\n  --cancel-background: ${theme.cancelBackground};\n  --cancel-background-hover: ${theme.cancelBackgroundHover};\n  --cancel-border: ${theme.cancelBorder};\n  --cancel-outline-focus: ${theme.cancelOutlineFocus};\n  --cancel-foreground: ${theme.cancelForeground};\n  --cancel-foreground-hover: ${theme.cancelForegroundHover};\n\n  --input-background: ${theme.inputBackground};\n  --input-foreground: ${theme.inputForeground};\n  --input-border: ${theme.inputBorder};\n  --input-outline-focus: ${theme.inputOutlineFocus};\n\n  --form-border-radius: ${theme.formBorderRadius};\n  --form-content-border-radius: ${theme.formContentBorderRadius};\n  `;\n}\n\n/**\n * Creates <style> element for widget actor (button that opens the dialog)\n */\nexport function createMainStyles(\n  d: Document,\n  colorScheme: 'system' | 'dark' | 'light',\n  themes: FeedbackThemes,\n): HTMLStyleElement {\n  const style = d.createElement('style');\n  style.textContent = `\n:host {\n  --bottom: 1rem;\n  --right: 1rem;\n  --top: auto;\n  --left: auto;\n  --z-index: 100000;\n  --font-family: ${themes.light.fontFamily};\n  --font-size: ${themes.light.fontSize};\n\n  position: fixed;\n  left: var(--left);\n  right: var(--right);\n  bottom: var(--bottom);\n  top: var(--top);\n  z-index: var(--z-index);\n\n  font-family: var(--font-family);\n  font-size: var(--font-size);\n\n  ${getThemedCssVariables(colorScheme === 'dark' ? themes.dark : themes.light)}\n}\n\n${\n  colorScheme === 'system'\n    ? `\n@media (prefers-color-scheme: dark) {\n  :host {\n    ${getThemedCssVariables(themes.dark)}\n  }\n}`\n    : ''\n}\n}`;\n\n  return style;\n}\n", "import { logger } from '@sentry/utils';\n\nimport { WINDOW } from '../constants';\nimport type { FeedbackInternalOptions } from '../types';\nimport { createDialogStyles } from './Dialog.css';\nimport { createMainStyles } from './Main.css';\n\ntype CreateShadowHostParams = Pick<FeedbackInternalOptions, 'id' | 'colorScheme' | 'themeDark' | 'themeLight'>;\n\n/**\n * Creates shadow host\n */\nexport function createShadowHost({ id, colorScheme, themeDark, themeLight }: CreateShadowHostParams): {\n  shadow: ShadowRoot;\n  host: HTMLDivElement;\n} {\n  try {\n    const doc = WINDOW.document;\n\n    // Create the host\n    const host = doc.createElement('div');\n    host.id = id;\n\n    // Create the shadow root\n    const shadow = host.attachShadow({ mode: 'open' });\n\n    shadow.appendChild(createMainStyles(doc, colorScheme, { dark: themeDark, light: themeLight }));\n    shadow.appendChild(createDialogStyles(doc));\n\n    return { shadow, host };\n  } catch {\n    // Shadow DOM probably not supported\n    logger.warn('[Feedback] Browser does not support shadow DOM API');\n    throw new Error('Browser does not support shadow DOM API.');\n  }\n}\n", "import type { TransportMakeRequestResponse } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\nimport { FEEDBACK_WIDGET_SOURCE } from '../constants';\nimport { DEBUG_BUILD } from '../debug-build';\nimport { sendFeedback } from '../sendFeedback';\nimport type { FeedbackFormData, SendFeedbackOptions } from '../types';\nimport type { DialogComponent } from '../widget/Dialog';\n\n/**\n * Handles UI behavior of dialog when feedback is submitted, calls\n * `sendFeedback` to send feedback.\n */\nexport async function handleFeedbackSubmit(\n  dialog: DialogComponent | null,\n  feedback: FeedbackFormData,\n  options?: SendFeedbackOptions,\n): Promise<TransportMakeRequestResponse | void> {\n  if (!dialog) {\n    // Not sure when this would happen\n    return;\n  }\n\n  const showFetchError = (): void => {\n    if (!dialog) {\n      return;\n    }\n    dialog.showError('There was a problem submitting feedback, please wait and try again.');\n  };\n\n  dialog.hideError();\n\n  try {\n    const resp = await sendFeedback({ ...feedback, source: FEEDBACK_WIDGET_SOURCE }, options);\n\n    // Success!\n    return resp;\n  } catch (err) {\n    DEBUG_BUILD && logger.error(err);\n    showFetchError();\n  }\n}\n", "/**\n * Helper function to set a dict of attributes on element (w/ specified namespace)\n */\nexport function setAttributesNS<T extends SVGElement>(el: T, attributes: Record<string, string>): T {\n  Object.entries(attributes).forEach(([key, val]) => {\n    el.setAttributeNS(null, key, val);\n  });\n  return el;\n}\n", "import { WINDOW } from '../constants';\nimport { setAttributesNS } from '../util/setAttributesNS';\n\nconst SIZE = 20;\nconst XMLNS = 'http://www.w3.org/2000/svg';\n\ninterface IconReturn {\n  el: SVGElement;\n}\n\n/**\n * Feedback Icon\n */\nexport function Icon(): IconReturn {\n  const createElementNS = <K extends keyof SVGElementTagNameMap>(tagName: K): SVGElementTagNameMap[K] =>\n    WINDOW.document.createElementNS(XMLNS, tagName);\n  const svg = setAttributesNS(createElementNS('svg'), {\n    class: 'feedback-icon',\n    width: `${SIZE}`,\n    height: `${SIZE}`,\n    viewBox: `0 0 ${SIZE} ${SIZE}`,\n    fill: 'none',\n  });\n\n  const g = setAttributesNS(createElementNS('g'), {\n    clipPath: 'url(#clip0_57_80)',\n  });\n\n  const path = setAttributesNS(createElementNS('path'), {\n    ['fill-rule']: 'evenodd',\n    ['clip-rule']: 'evenodd',\n    d: 'M15.6622 15H12.3997C12.2129 14.9959 12.031 14.9396 11.8747 14.8375L8.04965 12.2H7.49956V19.1C7.4875 19.3348 7.3888 19.5568 7.22256 19.723C7.05632 19.8892 6.83435 19.9879 6.59956 20H2.04956C1.80193 19.9968 1.56535 19.8969 1.39023 19.7218C1.21511 19.5467 1.1153 19.3101 1.11206 19.0625V12.2H0.949652C0.824431 12.2017 0.700142 12.1783 0.584123 12.1311C0.468104 12.084 0.362708 12.014 0.274155 11.9255C0.185602 11.8369 0.115689 11.7315 0.0685419 11.6155C0.0213952 11.4995 -0.00202913 11.3752 -0.00034808 11.25V3.75C-0.00900498 3.62067 0.0092504 3.49095 0.0532651 3.36904C0.0972798 3.24712 0.166097 3.13566 0.255372 3.04168C0.344646 2.94771 0.452437 2.87327 0.571937 2.82307C0.691437 2.77286 0.82005 2.74798 0.949652 2.75H8.04965L11.8747 0.1625C12.031 0.0603649 12.2129 0.00407221 12.3997 0H15.6622C15.9098 0.00323746 16.1464 0.103049 16.3215 0.278167C16.4966 0.453286 16.5964 0.689866 16.5997 0.9375V3.25269C17.3969 3.42959 18.1345 3.83026 18.7211 4.41679C19.5322 5.22788 19.9878 6.32796 19.9878 7.47502C19.9878 8.62209 19.5322 9.72217 18.7211 10.5333C18.1345 11.1198 17.3969 11.5205 16.5997 11.6974V14.0125C16.6047 14.1393 16.5842 14.2659 16.5395 14.3847C16.4948 14.5035 16.4268 14.6121 16.3394 14.7042C16.252 14.7962 16.147 14.8698 16.0307 14.9206C15.9144 14.9714 15.7891 14.9984 15.6622 15ZM1.89695 10.325H1.88715V4.625H8.33715C8.52423 4.62301 8.70666 4.56654 8.86215 4.4625L12.6872 1.875H14.7247V13.125H12.6872L8.86215 10.4875C8.70666 10.3835 8.52423 10.327 8.33715 10.325H2.20217C2.15205 10.3167 2.10102 10.3125 2.04956 10.3125C1.9981 10.3125 1.94708 10.3167 1.89695 10.325ZM2.98706 12.2V18.1625H5.66206V12.2H2.98706ZM16.5997 9.93612V5.01393C16.6536 5.02355 16.7072 5.03495 16.7605 5.04814C17.1202 5.13709 17.4556 5.30487 17.7425 5.53934C18.0293 5.77381 18.2605 6.06912 18.4192 6.40389C18.578 6.73866 18.6603 7.10452 18.6603 7.47502C18.6603 7.84552 18.578 8.21139 18.4192 8.54616C18.2605 8.88093 18.0293 9.17624 17.7425 9.41071C17.4556 9.64518 17.1202 9.81296 16.7605 9.90191C16.7072 9.91509 16.6536 9.9265 16.5997 9.93612Z',\n  });\n  svg.appendChild(g).appendChild(path);\n\n  const speakerDefs = createElementNS('defs');\n  const speakerClipPathDef = setAttributesNS(createElementNS('clipPath'), {\n    id: 'clip0_57_80',\n  });\n\n  const speakerRect = setAttributesNS(createElementNS('rect'), {\n    width: `${SIZE}`,\n    height: `${SIZE}`,\n    fill: 'white',\n  });\n\n  speakerClipPathDef.appendChild(speakerRect);\n  speakerDefs.appendChild(speakerClipPathDef);\n\n  svg.appendChild(speakerDefs).appendChild(speakerClipPathDef).appendChild(speakerRect);\n\n  return {\n    get el() {\n      return svg;\n    },\n  };\n}\n", "import { WINDOW } from '../../constants';\n\n/**\n * Helper function to create an element. Could be used as a JSX factory\n * (i.e. React-like syntax).\n */\nexport function createElement<K extends keyof HTMLElementTagNameMap>(\n  tagName: K,\n  attributes: { [key: string]: string | boolean | EventListenerOrEventListenerObject } | null,\n  ...children: any\n): HTMLElementTagNameMap[K] {\n  const doc = WINDOW.document;\n  const element = doc.createElement(tagName);\n\n  if (attributes) {\n    Object.entries(attributes).forEach(([attribute, attributeValue]) => {\n      if (attribute === 'className' && typeof attributeValue === 'string') {\n        // JSX does not allow class as a valid name\n        element.setAttribute('class', attributeValue);\n      } else if (typeof attributeValue === 'boolean' && attributeValue) {\n        element.setAttribute(attribute, '');\n      } else if (typeof attributeValue === 'string') {\n        element.setAttribute(attribute, attributeValue);\n      } else if (attribute.startsWith('on') && typeof attributeValue === 'function') {\n        element.addEventListener(attribute.substring(2).toLowerCase(), attributeValue);\n      }\n    });\n  }\n  for (const child of children) {\n    appendChild(element, child);\n  }\n\n  return element;\n}\n\nfunction appendChild(parent: Node, child: any): void {\n  const doc = WINDOW.document;\n  if (typeof child === 'undefined' || child === null) {\n    return;\n  }\n\n  if (Array.isArray(child)) {\n    for (const value of child) {\n      appendChild(parent, value);\n    }\n  } else if (child === false) {\n    // do nothing if child evaluated to false\n  } else if (typeof child === 'string') {\n    parent.appendChild(doc.createTextNode(child));\n  } else if (child instanceof Node) {\n    parent.appendChild(child);\n  } else {\n    parent.appendChild(doc.createTextNode(String(child)));\n  }\n}\n", "import type { FeedbackComponent, FeedbackInternalOptions } from '../types';\nimport { Icon } from './Icon';\nimport { createElement } from './util/createElement';\n\nexport interface ActorProps extends Pick<FeedbackInternalOptions, 'buttonLabel'> {\n  onClick?: (e: MouseEvent) => void;\n}\n\nexport interface ActorComponent extends FeedbackComponent<HTMLButtonElement> {\n  /**\n   * Shows the actor element\n   */\n  show: () => void;\n  /**\n   * Hides the actor element\n   */\n  hide: () => void;\n}\n\n/**\n *\n */\nexport function Actor({ buttonLabel, onClick }: ActorProps): ActorComponent {\n  function _handleClick(e: MouseEvent): void {\n    onClick && onClick(e);\n  }\n\n  const el = createElement(\n    'button',\n    {\n      type: 'button',\n      className: 'widget__actor',\n      ['aria-label']: buttonLabel,\n      ['aria-hidden']: 'false',\n    },\n    Icon().el,\n    buttonLabel\n      ? createElement(\n          'span',\n          {\n            className: 'widget__actor__text',\n          },\n          buttonLabel,\n        )\n      : null,\n  );\n\n  el.addEventListener('click', _handleClick);\n\n  return {\n    get el() {\n      return el;\n    },\n    show: (): void => {\n      el.classList.remove('widget__actor--hidden');\n      el.setAttribute('aria-hidden', 'false');\n    },\n    hide: (): void => {\n      el.classList.add('widget__actor--hidden');\n      el.setAttribute('aria-hidden', 'true');\n    },\n  };\n}\n", "import type { FeedbackComponent } from '../types';\nimport { createElement } from './util/createElement';\n\nexport interface SubmitButtonProps {\n  label: string;\n}\n\ntype SubmitButtonComponent = FeedbackComponent<HTMLButtonElement>;\n\n/**\n *\n */\nexport function SubmitButton({ label }: SubmitButtonProps): SubmitButtonComponent {\n  const el = createElement(\n    'button',\n    {\n      type: 'submit',\n      className: 'btn btn--primary',\n      ['aria-label']: label,\n    },\n    label,\n  );\n\n  return {\n    el,\n  };\n}\n", "import type { FeedbackComponent, FeedbackFormData, FeedbackInternalOptions, FeedbackTextConfiguration } from '../types';\nimport { SubmitButton } from './SubmitButton';\nimport { createElement } from './util/createElement';\n\nexport interface FormComponentProps\n  extends Pick<\n    FeedbackInternalOptions,\n    | 'showName'\n    | 'showEmail'\n    | 'isNameRequired'\n    | 'isEmailRequired'\n    | Exclude<keyof FeedbackTextConfiguration, 'buttonLabel' | 'formTitle' | 'successMessageText'>\n  > {\n  /**\n   * A default name value to render the input with. Empty strings are ok.\n   */\n  defaultName: string;\n  /**\n   * A default email value to render the input with. Empty strings are ok.\n   */\n  defaultEmail: string;\n  onCancel?: (e: Event) => void;\n  onSubmit?: (feedback: FeedbackFormData) => void;\n}\n\ninterface FormComponent extends FeedbackComponent<HTMLFormElement> {\n  /**\n   * Shows the error message\n   */\n  showError: (message: string) => void;\n\n  /**\n   * Hides the error message\n   */\n  hideError: () => void;\n}\n\nfunction retrieveStringValue(formData: FormData, key: string): string {\n  const value = formData.get(key);\n  if (typeof value === 'string') {\n    return value.trim();\n  }\n  return '';\n}\n\n/**\n * Creates the form element\n */\nexport function Form({\n  nameLabel,\n  namePlaceholder,\n  emailLabel,\n  emailPlaceholder,\n  messageLabel,\n  messagePlaceholder,\n  cancelButtonLabel,\n  submitButtonLabel,\n\n  showName,\n  showEmail,\n  isNameRequired,\n  isEmailRequired,\n\n  defaultName,\n  defaultEmail,\n  onCancel,\n  onSubmit,\n}: FormComponentProps): FormComponent {\n  const { el: submitEl } = SubmitButton({\n    label: submitButtonLabel,\n  });\n\n  function handleSubmit(e: Event): void {\n    e.preventDefault();\n\n    if (!(e.target instanceof HTMLFormElement)) {\n      return;\n    }\n\n    try {\n      if (onSubmit) {\n        const formData = new FormData(e.target as HTMLFormElement);\n        const feedback = {\n          name: retrieveStringValue(formData, 'name'),\n          email: retrieveStringValue(formData, 'email'),\n          message: retrieveStringValue(formData, 'message'),\n        };\n\n        onSubmit(feedback);\n      }\n    } catch {\n      // pass\n    }\n  }\n\n  const errorEl = createElement('div', {\n    className: 'form__error-container form__error-container--hidden',\n    ['aria-hidden']: 'true',\n  });\n\n  function showError(message: string): void {\n    errorEl.textContent = message;\n    errorEl.classList.remove('form__error-container--hidden');\n    errorEl.setAttribute('aria-hidden', 'false');\n  }\n\n  function hideError(): void {\n    errorEl.textContent = '';\n    errorEl.classList.add('form__error-container--hidden');\n    errorEl.setAttribute('aria-hidden', 'true');\n  }\n\n  const nameEl = createElement('input', {\n    id: 'name',\n    type: showName ? 'text' : 'hidden',\n    ['aria-hidden']: showName ? 'false' : 'true',\n    name: 'name',\n    required: isNameRequired,\n    className: 'form__input',\n    placeholder: namePlaceholder,\n    value: defaultName,\n  });\n\n  const emailEl = createElement('input', {\n    id: 'email',\n    type: showEmail ? 'text' : 'hidden',\n    ['aria-hidden']: showEmail ? 'false' : 'true',\n    name: 'email',\n    required: isEmailRequired,\n    className: 'form__input',\n    placeholder: emailPlaceholder,\n    value: defaultEmail,\n  });\n\n  const messageEl = createElement('textarea', {\n    id: 'message',\n    autoFocus: 'true',\n    rows: '5',\n    name: 'message',\n    required: true,\n    className: 'form__input form__input--textarea',\n    placeholder: messagePlaceholder,\n  });\n\n  const cancelEl = createElement(\n    'button',\n    {\n      type: 'button',\n      className: 'btn btn--default',\n      ['aria-label']: cancelButtonLabel,\n      onClick: (e: Event) => {\n        onCancel && onCancel(e);\n      },\n    },\n    cancelButtonLabel,\n  );\n\n  const formEl = createElement(\n    'form',\n    {\n      className: 'form',\n      onSubmit: handleSubmit,\n    },\n    [\n      errorEl,\n\n      showName &&\n        createElement(\n          'label',\n          {\n            htmlFor: 'name',\n            className: 'form__label',\n          },\n          [\n            createElement(\n              'span',\n              { className: 'form__label__text' },\n              nameLabel,\n              isNameRequired && createElement('span', { className: 'form__label__text--required' }, ' (required)'),\n            ),\n            nameEl,\n          ],\n        ),\n      !showName && nameEl,\n\n      showEmail &&\n        createElement(\n          'label',\n          {\n            htmlFor: 'email',\n            className: 'form__label',\n          },\n          [\n            createElement(\n              'span',\n              { className: 'form__label__text' },\n              emailLabel,\n              isEmailRequired && createElement('span', { className: 'form__label__text--required' }, ' (required)'),\n            ),\n            emailEl,\n          ],\n        ),\n      !showEmail && emailEl,\n\n      createElement(\n        'label',\n        {\n          htmlFor: 'message',\n          className: 'form__label',\n        },\n        [\n          createElement(\n            'span',\n            { className: 'form__label__text' },\n            messageLabel,\n            createElement('span', { className: 'form__label__text--required' }, ' (required)'),\n          ),\n          messageEl,\n        ],\n      ),\n\n      createElement(\n        'div',\n        {\n          className: 'btn-group',\n        },\n        [submitEl, cancelEl],\n      ),\n    ],\n  );\n\n  return {\n    get el() {\n      return formEl;\n    },\n    showError,\n    hideError,\n  };\n}\n", "import { WINDOW } from '../constants';\nimport type { FeedbackInternalOptions } from '../types';\nimport { setAttributesNS } from '../util/setAttributesNS';\n\nconst XMLNS = 'http://www.w3.org/2000/svg';\n\ninterface IconReturn {\n  el: SVGElement;\n}\n\ntype Props = Pick<FeedbackInternalOptions, 'colorScheme'>;\n\n/**\n * Sentry Logo\n */\nexport function Logo({ colorScheme }: Props): IconReturn {\n  const createElementNS = <K extends keyof SVGElementTagNameMap>(tagName: K): SVGElementTagNameMap[K] =>\n    WINDOW.document.createElementNS(XMLNS, tagName);\n  const svg = setAttributesNS(createElementNS('svg'), {\n    class: 'sentry-logo',\n    width: '32',\n    height: '30',\n    viewBox: '0 0 72 66',\n    fill: 'none',\n  });\n\n  const path = setAttributesNS(createElementNS('path'), {\n    transform: 'translate(11, 11)',\n    d: 'M29,2.26a4.67,4.67,0,0,0-8,0L14.42,13.53A32.21,32.21,0,0,1,32.17,40.19H27.55A27.68,27.68,0,0,0,12.09,17.47L6,28a15.92,15.92,0,0,1,9.23,12.17H4.62A.76.76,0,0,1,4,39.06l2.94-5a10.74,10.74,0,0,0-3.36-1.9l-2.91,5a4.54,4.54,0,0,0,1.69,6.24A4.66,4.66,0,0,0,4.62,44H19.15a19.4,19.4,0,0,0-8-17.31l2.31-4A23.87,23.87,0,0,1,23.76,44H36.07a35.88,35.88,0,0,0-16.41-31.8l4.67-8a.77.77,0,0,1,1.05-.27c.53.29,20.29,34.77,20.66,35.17a.76.76,0,0,1-.68,1.13H40.6q.09,1.91,0,3.81h4.78A4.59,4.59,0,0,0,50,39.43a4.49,4.49,0,0,0-.62-2.28Z',\n  });\n  svg.append(path);\n\n  const defs = createElementNS('defs');\n  const style = createElementNS('style');\n\n  style.textContent = `\n    path {\n      fill: ${colorScheme === 'dark' ? '#fff' : '#362d59'};\n    }`;\n\n  if (colorScheme === 'system') {\n    style.textContent += `\n    @media (prefers-color-scheme: dark) {\n      path: {\n        fill: '#fff';\n      }\n    }\n    `;\n  }\n\n  defs.append(style);\n  svg.append(defs);\n\n  return {\n    get el() {\n      return svg;\n    },\n  };\n}\n", "import type { FeedbackComponent, FeedbackInternalOptions } from '../types';\nimport type { FormComponentProps } from './Form';\nimport { Form } from './Form';\nimport { Logo } from './Logo';\nimport { createElement } from './util/createElement';\n\nexport interface DialogProps\n  extends FormComponentProps,\n    Pick<FeedbackInternalOptions, 'formTitle' | 'showBranding' | 'colorScheme'> {\n  onClosed?: () => void;\n}\n\nexport interface DialogComponent extends FeedbackComponent<HTMLDialogElement> {\n  /**\n   * Shows the error message\n   */\n  showError: (message: string) => void;\n\n  /**\n   * Hides the error message\n   */\n  hideError: () => void;\n\n  /**\n   * Opens and shows the dialog and form\n   */\n  open: () => void;\n\n  /**\n   * Closes the dialog and form\n   */\n  close: () => void;\n\n  /**\n   * Check if dialog is currently opened\n   */\n  checkIsOpen: () => boolean;\n}\n\n/**\n * Feedback dialog component that has the form\n */\nexport function Dialog({\n  formTitle,\n  showBranding,\n  showName,\n  showEmail,\n  isNameRequired,\n  isEmailRequired,\n  colorScheme,\n  defaultName,\n  defaultEmail,\n  onClosed,\n  onCancel,\n  onSubmit,\n  ...textLabels\n}: DialogProps): DialogComponent {\n  let el: HTMLDialogElement | null = null;\n\n  /**\n   * Handles when the dialog is clicked. In our case, the dialog is the\n   * semi-transparent bg behind the form. We want clicks outside of the form to\n   * hide the form.\n   */\n  function handleDialogClick(): void {\n    close();\n\n    // Only this should trigger `onClose`, we don't want the `close()` method to\n    // trigger it, otherwise it can cause cycles.\n    onClosed && onClosed();\n  }\n\n  /**\n   * Close the dialog\n   */\n  function close(): void {\n    if (el) {\n      el.open = false;\n    }\n  }\n\n  /**\n   * Opens the dialog\n   */\n  function open(): void {\n    if (el) {\n      el.open = true;\n    }\n  }\n\n  /**\n   * Check if dialog is currently opened\n   */\n  function checkIsOpen(): boolean {\n    return (el && el.open === true) || false;\n  }\n\n  const {\n    el: formEl,\n    showError,\n    hideError,\n  } = Form({\n    showEmail,\n    showName,\n    isEmailRequired,\n    isNameRequired,\n\n    defaultName,\n    defaultEmail,\n    onSubmit,\n    onCancel,\n    ...textLabels,\n  });\n\n  el = createElement(\n    'dialog',\n    {\n      className: 'dialog',\n      open: true,\n      onClick: handleDialogClick,\n    },\n    createElement(\n      'div',\n      {\n        className: 'dialog__content',\n        onClick: e => {\n          // Stop event propagation so clicks on content modal do not propagate to dialog (which will close dialog)\n          e.stopPropagation();\n        },\n      },\n      createElement(\n        'h2',\n        { className: 'dialog__header' },\n        formTitle,\n        showBranding &&\n          createElement(\n            'a',\n            {\n              className: 'brand-link',\n              target: '_blank',\n              href: 'https://sentry.io/welcome/',\n              title: 'Powered by Sentry',\n              rel: 'noopener noreferrer',\n            },\n            Logo({ colorScheme }).el,\n          ),\n      ),\n      formEl,\n    ),\n  );\n\n  return {\n    get el() {\n      return el;\n    },\n    showError,\n    hideError,\n    open,\n    close,\n    checkIsOpen,\n  };\n}\n", "import { WINDOW } from '../constants';\nimport { setAttributesNS } from '../util/setAttributesNS';\n\nconst WIDTH = 16;\nconst HEIGHT = 17;\nconst XMLNS = 'http://www.w3.org/2000/svg';\n\ninterface IconReturn {\n  el: SVGElement;\n}\n\n/**\n * Success Icon (checkmark)\n */\nexport function SuccessIcon(): IconReturn {\n  const createElementNS = <K extends keyof SVGElementTagNameMap>(tagName: K): SVGElementTagNameMap[K] =>\n    WINDOW.document.createElementNS(XMLNS, tagName);\n  const svg = setAttributesNS(createElementNS('svg'), {\n    class: 'success-icon',\n    width: `${WIDTH}`,\n    height: `${HEIGHT}`,\n    viewBox: `0 0 ${WIDTH} ${HEIGHT}`,\n    fill: 'none',\n  });\n\n  const g = setAttributesNS(createElementNS('g'), {\n    clipPath: 'url(#clip0_57_156)',\n  });\n\n  const path2 = setAttributesNS(createElementNS('path'), {\n    ['fill-rule']: 'evenodd',\n    ['clip-rule']: 'evenodd',\n    d: 'M3.55544 15.1518C4.87103 16.0308 6.41775 16.5 8 16.5C10.1217 16.5 12.1566 15.6571 13.6569 14.1569C15.1571 12.6566 16 10.6217 16 8.5C16 6.91775 15.5308 5.37103 14.6518 4.05544C13.7727 2.73985 12.5233 1.71447 11.0615 1.10897C9.59966 0.503466 7.99113 0.34504 6.43928 0.653721C4.88743 0.962403 3.46197 1.72433 2.34315 2.84315C1.22433 3.96197 0.462403 5.38743 0.153721 6.93928C-0.15496 8.49113 0.00346625 10.0997 0.608967 11.5615C1.21447 13.0233 2.23985 14.2727 3.55544 15.1518ZM4.40546 3.1204C5.46945 2.40946 6.72036 2.03 8 2.03C9.71595 2.03 11.3616 2.71166 12.575 3.92502C13.7883 5.13838 14.47 6.78405 14.47 8.5C14.47 9.77965 14.0905 11.0306 13.3796 12.0945C12.6687 13.1585 11.6582 13.9878 10.476 14.4775C9.29373 14.9672 7.99283 15.0953 6.73777 14.8457C5.48271 14.596 4.32987 13.9798 3.42502 13.075C2.52018 12.1701 1.90397 11.0173 1.65432 9.76224C1.40468 8.50718 1.5328 7.20628 2.0225 6.02404C2.5122 4.8418 3.34148 3.83133 4.40546 3.1204Z',\n  });\n  const path = setAttributesNS(createElementNS('path'), {\n    d: 'M6.68775 12.4297C6.78586 12.4745 6.89218 12.4984 7 12.5C7.11275 12.4955 7.22315 12.4664 7.32337 12.4145C7.4236 12.3627 7.51121 12.2894 7.58 12.2L12 5.63999C12.0848 5.47724 12.1071 5.28902 12.0625 5.11098C12.0178 4.93294 11.9095 4.77744 11.7579 4.67392C11.6064 4.57041 11.4221 4.52608 11.24 4.54931C11.0579 4.57254 10.8907 4.66173 10.77 4.79999L6.88 10.57L5.13 8.56999C5.06508 8.49566 4.98613 8.43488 4.89768 8.39111C4.80922 8.34735 4.713 8.32148 4.61453 8.31498C4.51605 8.30847 4.41727 8.32147 4.32382 8.35322C4.23038 8.38497 4.14413 8.43484 4.07 8.49999C3.92511 8.63217 3.83692 8.81523 3.82387 9.01092C3.81083 9.2066 3.87393 9.39976 4 9.54999L6.43 12.24C6.50187 12.3204 6.58964 12.385 6.68775 12.4297Z',\n  });\n\n  svg.appendChild(g).append(path, path2);\n\n  const speakerDefs = createElementNS('defs');\n  const speakerClipPathDef = setAttributesNS(createElementNS('clipPath'), {\n    id: 'clip0_57_156',\n  });\n\n  const speakerRect = setAttributesNS(createElementNS('rect'), {\n    width: `${WIDTH}`,\n    height: `${WIDTH}`,\n    fill: 'white',\n    transform: 'translate(0 0.5)',\n  });\n\n  speakerClipPathDef.appendChild(speakerRect);\n  speakerDefs.appendChild(speakerClipPathDef);\n\n  svg.appendChild(speakerDefs).appendChild(speakerClipPathDef).appendChild(speakerRect);\n\n  return {\n    get el() {\n      return svg;\n    },\n  };\n}\n", "import type { FeedbackComponent } from '../types';\nimport { SuccessIcon } from './SuccessIcon';\nimport { createElement } from './util/createElement';\n\nexport interface SuccessMessageProps {\n  message: string;\n  onRemove?: () => void;\n}\n\ninterface SuccessMessageComponent extends FeedbackComponent<HTMLDivElement> {\n  /**\n   * Removes the component\n   */\n  remove: () => void;\n}\n\n/**\n * Feedback dialog component that has the form\n */\nexport function SuccessMessage({ message, onRemove }: SuccessMessageProps): SuccessMessageComponent {\n  function remove(): void {\n    if (!el) {\n      return;\n    }\n\n    el.remove();\n    onRemove && onRemove();\n  }\n\n  const el = createElement(\n    'div',\n    {\n      className: 'success-message',\n      onClick: remove,\n    },\n    SuccessIcon().el,\n    message,\n  );\n\n  return {\n    el,\n    remove,\n  };\n}\n", "import { getClient, getCurrentScope } from '@sentry/core';\nimport { logger } from '@sentry/utils';\n\nimport type { FeedbackFormData, FeedbackInternalOptions, FeedbackWidget } from '../types';\nimport { handleFeedbackSubmit } from '../util/handleFeedbackSubmit';\nimport type { ActorComponent } from './Actor';\nimport { Actor } from './Actor';\nimport type { DialogComponent } from './Dialog';\nimport { Dialog } from './Dialog';\nimport { SuccessMessage } from './SuccessMessage';\n\nimport { DEBUG_BUILD } from '../debug-build';\n\ninterface CreateWidgetParams {\n  /**\n   * Shadow DOM to append to\n   */\n  shadow: ShadowRoot;\n\n  /**\n   * Feedback integration options\n   */\n  options: FeedbackInternalOptions & { shouldCreateActor?: boolean };\n\n  /**\n   * An element to attach to, that when clicked, will open a dialog\n   */\n  attachTo?: Element;\n\n  /**\n   * If false, will not create an actor\n   */\n  shouldCreateActor?: boolean;\n}\n\n/**\n * Creates a new widget. Returns public methods that control widget behavior.\n */\nexport function createWidget({\n  shadow,\n  options: { shouldCreateActor = true, ...options },\n  attachTo,\n}: CreateWidgetParams): FeedbackWidget {\n  let actor: ActorComponent | undefined;\n  let dialog: DialogComponent | undefined;\n  let isDialogOpen: boolean = false;\n\n  /**\n   * Show the success message for 5 seconds\n   */\n  function showSuccessMessage(): void {\n    if (!shadow) {\n      return;\n    }\n\n    try {\n      const success = SuccessMessage({\n        message: options.successMessageText,\n        onRemove: () => {\n          if (timeoutId) {\n            clearTimeout(timeoutId);\n          }\n          showActor();\n        },\n      });\n\n      if (!success.el) {\n        throw new Error('Unable to show success message');\n      }\n\n      shadow.appendChild(success.el);\n\n      const timeoutId = setTimeout(() => {\n        if (success) {\n          success.remove();\n        }\n      }, 5000);\n    } catch (err) {\n      // TODO: error handling\n      logger.error(err);\n    }\n  }\n\n  /**\n   * Handler for when the feedback form is completed by the user. This will\n   * create and send the feedback message as an event.\n   */\n  async function _handleFeedbackSubmit(feedback: FeedbackFormData): Promise<void> {\n    if (!dialog) {\n      return;\n    }\n\n    // Simple validation for now, just check for non-empty required fields\n    const emptyField = [];\n    if (options.isNameRequired && !feedback.name) {\n      emptyField.push(options.nameLabel);\n    }\n    if (options.isEmailRequired && !feedback.email) {\n      emptyField.push(options.emailLabel);\n    }\n    if (!feedback.message) {\n      emptyField.push(options.messageLabel);\n    }\n    if (emptyField.length > 0) {\n      dialog.showError(`Please enter in the following required fields: ${emptyField.join(', ')}`);\n      return;\n    }\n\n    const result = await handleFeedbackSubmit(dialog, feedback);\n\n    // Error submitting feedback\n    if (!result) {\n      if (options.onSubmitError) {\n        options.onSubmitError();\n      }\n\n      return;\n    }\n\n    // Success\n    removeDialog();\n    showSuccessMessage();\n\n    if (options.onSubmitSuccess) {\n      options.onSubmitSuccess();\n    }\n  }\n\n  /**\n   * Internal handler when dialog is opened\n   */\n  function handleOpenDialog(): void {\n    // Flush replay if integration exists\n    const client = getClient();\n    const replay =\n      client &&\n      client.getIntegrationByName &&\n      client.getIntegrationByName<{ name: string; flush: () => Promise<void>; setupOnce: () => void }>('Replay');\n    if (!replay) {\n      return;\n    }\n    replay.flush().catch(err => {\n      DEBUG_BUILD && logger.error(err);\n    });\n  }\n\n  /**\n   * Displays the default actor\n   */\n  function showActor(): void {\n    actor && actor.show();\n  }\n\n  /**\n   * Hides the default actor\n   */\n  function hideActor(): void {\n    actor && actor.hide();\n  }\n\n  /**\n   * Removes the default actor element\n   */\n  function removeActor(): void {\n    actor && actor.el && actor.el.remove();\n  }\n\n  /**\n   *\n   */\n  function openDialog(): void {\n    try {\n      if (dialog) {\n        dialog.open();\n        isDialogOpen = true;\n        if (options.onFormOpen) {\n          options.onFormOpen();\n        }\n        handleOpenDialog();\n        return;\n      }\n\n      const userKey = options.useSentryUser;\n      const scope = getCurrentScope();\n      const user = scope && scope.getUser();\n\n      dialog = Dialog({\n        colorScheme: options.colorScheme,\n        showBranding: options.showBranding,\n        showName: options.showName || options.isNameRequired,\n        showEmail: options.showEmail || options.isEmailRequired,\n        isNameRequired: options.isNameRequired,\n        isEmailRequired: options.isEmailRequired,\n        formTitle: options.formTitle,\n        cancelButtonLabel: options.cancelButtonLabel,\n        submitButtonLabel: options.submitButtonLabel,\n        emailLabel: options.emailLabel,\n        emailPlaceholder: options.emailPlaceholder,\n        messageLabel: options.messageLabel,\n        messagePlaceholder: options.messagePlaceholder,\n        nameLabel: options.nameLabel,\n        namePlaceholder: options.namePlaceholder,\n        defaultName: (userKey && user && user[userKey.name]) || '',\n        defaultEmail: (userKey && user && user[userKey.email]) || '',\n        onClosed: () => {\n          showActor();\n          isDialogOpen = false;\n\n          if (options.onFormClose) {\n            options.onFormClose();\n          }\n        },\n        onCancel: () => {\n          closeDialog();\n          showActor();\n        },\n        onSubmit: _handleFeedbackSubmit,\n      });\n\n      if (!dialog.el) {\n        throw new Error('Unable to open Feedback dialog');\n      }\n\n      shadow.appendChild(dialog.el);\n\n      // Hides the default actor whenever dialog is opened\n      hideActor();\n\n      if (options.onFormOpen) {\n        options.onFormOpen();\n      }\n      handleOpenDialog();\n    } catch (err) {\n      // TODO: Error handling?\n      logger.error(err);\n    }\n  }\n\n  /**\n   * Closes the dialog\n   */\n  function closeDialog(): void {\n    if (dialog) {\n      dialog.close();\n      isDialogOpen = false;\n\n      if (options.onFormClose) {\n        options.onFormClose();\n      }\n    }\n  }\n\n  /**\n   * Removes the dialog element from DOM\n   */\n  function removeDialog(): void {\n    if (dialog) {\n      closeDialog();\n      const dialogEl = dialog.el;\n      dialogEl && dialogEl.remove();\n      dialog = undefined;\n    }\n  }\n\n  /**\n   *\n   */\n  function handleActorClick(): void {\n    // Open dialog\n    if (!isDialogOpen) {\n      openDialog();\n    }\n\n    // Hide actor button\n    hideActor();\n  }\n\n  if (attachTo) {\n    attachTo.addEventListener('click', handleActorClick);\n  } else if (shouldCreateActor) {\n    actor = Actor({ buttonLabel: options.buttonLabel, onClick: handleActorClick });\n    actor.el && shadow.appendChild(actor.el);\n  }\n\n  return {\n    get actor() {\n      return actor;\n    },\n    get dialog() {\n      return dialog;\n    },\n\n    showActor,\n    hideActor,\n    removeActor,\n\n    openDialog,\n    closeDialog,\n    removeDialog,\n  };\n}\n", "import type { Integration, IntegrationFn } from '@sentry/types';\nimport { isBrowser, logger } from '@sentry/utils';\n\nimport {\n  ACTOR_LABEL,\n  CANCEL_BUTTON_LABEL,\n  DEFAULT_THEME,\n  EMAIL_LABEL,\n  EMAIL_PLACEHOLDER,\n  FORM_TITLE,\n  MESSAGE_LABEL,\n  MESSAGE_PLACEHOLDER,\n  NAME_LABEL,\n  NAME_PLACEHOLDER,\n  SUBMIT_BUTTON_LABEL,\n  SUCCESS_MESSAGE_TEXT,\n  WINDOW,\n} from './constants';\nimport { DEBUG_BUILD } from './debug-build';\nimport type { FeedbackInternalOptions, FeedbackWidget, OptionalFeedbackConfiguration } from './types';\nimport { mergeOptions } from './util/mergeOptions';\nimport { createActorStyles } from './widget/Actor.css';\nimport { createShadowHost } from './widget/createShadowHost';\nimport { createWidget } from './widget/createWidget';\n\nconst doc = WINDOW.document;\n\nexport const feedbackIntegration = ((options?: OptionalFeedbackConfiguration) => {\n  // eslint-disable-next-line deprecation/deprecation\n  return new Feedback(options);\n}) satisfies IntegrationFn;\n\n/**\n * Feedback integration. When added as an integration to the SDK, it will\n * inject a button in the bottom-right corner of the window that opens a\n * feedback modal when clicked.\n *\n * @deprecated Use `feedbackIntegration()` instead.\n */\nexport class Feedback implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'Feedback';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string;\n\n  /**\n   * Feedback configuration options\n   */\n  public options: FeedbackInternalOptions;\n\n  /**\n   * Reference to widget element that is created when autoInject is true\n   */\n  private _widget: FeedbackWidget | null;\n\n  /**\n   * List of all widgets that are created from the integration\n   */\n  private _widgets: Set<FeedbackWidget>;\n\n  /**\n   * Reference to the host element where widget is inserted\n   */\n  private _host: HTMLDivElement | null;\n\n  /**\n   * Refernce to Shadow DOM root\n   */\n  private _shadow: ShadowRoot | null;\n\n  /**\n   * Tracks if actor styles have ever been inserted into shadow DOM\n   */\n  private _hasInsertedActorStyles: boolean;\n\n  public constructor({\n    autoInject = true,\n    id = 'sentry-feedback',\n    isEmailRequired = false,\n    isNameRequired = false,\n    showBranding = true,\n    showEmail = true,\n    showName = true,\n    useSentryUser = {\n      email: 'email',\n      name: 'username',\n    },\n\n    themeDark,\n    themeLight,\n    colorScheme = 'system',\n\n    buttonLabel = ACTOR_LABEL,\n    cancelButtonLabel = CANCEL_BUTTON_LABEL,\n    submitButtonLabel = SUBMIT_BUTTON_LABEL,\n    formTitle = FORM_TITLE,\n    emailPlaceholder = EMAIL_PLACEHOLDER,\n    emailLabel = EMAIL_LABEL,\n    messagePlaceholder = MESSAGE_PLACEHOLDER,\n    messageLabel = MESSAGE_LABEL,\n    namePlaceholder = NAME_PLACEHOLDER,\n    nameLabel = NAME_LABEL,\n    successMessageText = SUCCESS_MESSAGE_TEXT,\n\n    onFormClose,\n    onFormOpen,\n    onSubmitError,\n    onSubmitSuccess,\n  }: OptionalFeedbackConfiguration = {}) {\n    // eslint-disable-next-line deprecation/deprecation\n    this.name = Feedback.id;\n\n    // tsc fails if these are not initialized explicitly constructor, e.g. can't call `_initialize()`\n    this._host = null;\n    this._shadow = null;\n    this._widget = null;\n    this._widgets = new Set();\n    this._hasInsertedActorStyles = false;\n\n    this.options = {\n      autoInject,\n      showBranding,\n      id,\n      isEmailRequired,\n      isNameRequired,\n      showEmail,\n      showName,\n      useSentryUser,\n\n      colorScheme,\n      themeDark: {\n        ...DEFAULT_THEME.dark,\n        ...themeDark,\n      },\n      themeLight: {\n        ...DEFAULT_THEME.light,\n        ...themeLight,\n      },\n\n      buttonLabel,\n      cancelButtonLabel,\n      submitButtonLabel,\n      formTitle,\n      emailLabel,\n      emailPlaceholder,\n      messageLabel,\n      messagePlaceholder,\n      nameLabel,\n      namePlaceholder,\n      successMessageText,\n\n      onFormClose,\n      onFormOpen,\n      onSubmitError,\n      onSubmitSuccess,\n    };\n  }\n\n  /**\n   * Setup and initialize feedback container\n   */\n  public setupOnce(): void {\n    if (!isBrowser()) {\n      return;\n    }\n\n    try {\n      this._cleanupWidgetIfExists();\n\n      const { autoInject } = this.options;\n\n      if (!autoInject) {\n        // Nothing to do here\n        return;\n      }\n\n      this._createWidget(this.options);\n    } catch (err) {\n      DEBUG_BUILD && logger.error(err);\n    }\n  }\n\n  /**\n   * Allows user to open the dialog box. Creates a new widget if\n   * `autoInject` was false, otherwise re-uses the default widget that was\n   * created during initialization of the integration.\n   */\n  public openDialog(): void {\n    if (!this._widget) {\n      this._createWidget({ ...this.options, shouldCreateActor: false });\n    }\n\n    if (!this._widget) {\n      return;\n    }\n\n    this._widget.openDialog();\n  }\n\n  /**\n   * Closes the dialog for the default widget, if it exists\n   */\n  public closeDialog(): void {\n    if (!this._widget) {\n      // Nothing to do if widget does not exist\n      return;\n    }\n\n    this._widget.closeDialog();\n  }\n\n  /**\n   * Adds click listener to attached element to open a feedback dialog\n   */\n  public attachTo(el: Element | string, optionOverrides?: OptionalFeedbackConfiguration): FeedbackWidget | null {\n    try {\n      const options = mergeOptions(this.options, optionOverrides || {});\n\n      return this._ensureShadowHost<FeedbackWidget | null>(options, ({ shadow }) => {\n        const targetEl =\n          typeof el === 'string' ? doc.querySelector(el) : typeof el.addEventListener === 'function' ? el : null;\n\n        if (!targetEl) {\n          DEBUG_BUILD && logger.error('[Feedback] Unable to attach to target element');\n          return null;\n        }\n\n        const widget = createWidget({ shadow, options, attachTo: targetEl });\n        this._widgets.add(widget);\n\n        if (!this._widget) {\n          this._widget = widget;\n        }\n\n        return widget;\n      });\n    } catch (err) {\n      DEBUG_BUILD && logger.error(err);\n      return null;\n    }\n  }\n\n  /**\n   * Creates a new widget. Accepts partial options to override any options passed to constructor.\n   */\n  public createWidget(\n    optionOverrides?: OptionalFeedbackConfiguration & { shouldCreateActor?: boolean },\n  ): FeedbackWidget | null {\n    try {\n      return this._createWidget(mergeOptions(this.options, optionOverrides || {}));\n    } catch (err) {\n      DEBUG_BUILD && logger.error(err);\n      return null;\n    }\n  }\n\n  /**\n   * Removes a single widget\n   */\n  public removeWidget(widget: FeedbackWidget | null | undefined): boolean {\n    if (!widget) {\n      return false;\n    }\n\n    try {\n      if (this._widgets.has(widget)) {\n        widget.removeActor();\n        widget.removeDialog();\n        this._widgets.delete(widget);\n\n        if (this._widget === widget) {\n          // TODO: is more clean-up needed? e.g. call remove()\n          this._widget = null;\n        }\n\n        return true;\n      }\n    } catch (err) {\n      DEBUG_BUILD && logger.error(err);\n    }\n\n    return false;\n  }\n\n  /**\n   * Returns the default (first-created) widget\n   */\n  public getWidget(): FeedbackWidget | null {\n    return this._widget;\n  }\n\n  /**\n   * Removes the Feedback integration (including host, shadow DOM, and all widgets)\n   */\n  public remove(): void {\n    if (this._host) {\n      this._host.remove();\n    }\n    this._initialize();\n  }\n\n  /**\n   * Initializes values of protected properties\n   */\n  protected _initialize(): void {\n    this._host = null;\n    this._shadow = null;\n    this._widget = null;\n    this._widgets = new Set();\n    this._hasInsertedActorStyles = false;\n  }\n\n  /**\n   * Clean-up the widget if it already exists in the DOM. This shouldn't happen\n   * in prod, but can happen in development with hot module reloading.\n   */\n  protected _cleanupWidgetIfExists(): void {\n    if (this._host) {\n      this.remove();\n    }\n    const existingFeedback = doc.querySelector(`#${this.options.id}`);\n    if (existingFeedback) {\n      existingFeedback.remove();\n    }\n  }\n\n  /**\n   * Creates a new widget, after ensuring shadow DOM exists\n   */\n  protected _createWidget(options: FeedbackInternalOptions & { shouldCreateActor?: boolean }): FeedbackWidget | null {\n    return this._ensureShadowHost<FeedbackWidget>(options, ({ shadow }) => {\n      const widget = createWidget({ shadow, options });\n\n      if (!this._hasInsertedActorStyles && widget.actor) {\n        shadow.appendChild(createActorStyles(doc));\n        this._hasInsertedActorStyles = true;\n      }\n\n      this._widgets.add(widget);\n\n      if (!this._widget) {\n        this._widget = widget;\n      }\n\n      return widget;\n    });\n  }\n\n  /**\n   * Ensures that shadow DOM exists and is added to the DOM\n   */\n  protected _ensureShadowHost<T>(\n    options: FeedbackInternalOptions,\n    cb: (createShadowHostResult: ReturnType<typeof createShadowHost>) => T,\n  ): T | null {\n    let needsAppendHost = false;\n\n    // Don't create if it already exists\n    if (!this._shadow || !this._host) {\n      const { id, colorScheme, themeLight, themeDark } = options;\n      const { shadow, host } = createShadowHost({\n        id,\n        colorScheme,\n        themeLight,\n        themeDark,\n      });\n      this._shadow = shadow;\n      this._host = host;\n      needsAppendHost = true;\n    }\n\n    // set data attribute on host for different themes\n    this._host.dataset.sentryFeedbackColorscheme = options.colorScheme;\n\n    const result = cb({ shadow: this._shadow, host: this._host });\n\n    if (needsAppendHost) {\n      doc.body.appendChild(this._host);\n    }\n\n    return result;\n  }\n}\n", "import type { OfflineStore, OfflineTransportOptions } from '@sentry/core';\nimport { makeOfflineTransport } from '@sentry/core';\nimport type { Envelope, InternalBaseTransportOptions, Transport } from '@sentry/types';\nimport type { TextDecoderInternal } from '@sentry/utils';\nimport { parseEnvelope, serializeEnvelope } from '@sentry/utils';\n\n// 'Store', 'promisifyRequest' and 'createStore' were originally copied from the 'idb-keyval' package before being\n// modified and simplified: https://github.com/jakearchibald/idb-keyval\n//\n// At commit: 0420a704fd6cbb4225429c536b1f61112d012fca\n// Original licence:\n\n// Copyright 2016, Jake Archibald\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\ntype Store = <T>(callback: (store: IDBObjectStore) => T | PromiseLike<T>) => Promise<T>;\n\nfunction promisifyRequest<T = undefined>(request: IDBRequest<T> | IDBTransaction): Promise<T> {\n  return new Promise<T>((resolve, reject) => {\n    // @ts-expect-error - file size hacks\n    request.oncomplete = request.onsuccess = () => resolve(request.result);\n    // @ts-expect-error - file size hacks\n    request.onabort = request.onerror = () => reject(request.error);\n  });\n}\n\n/** Create or open an IndexedDb store */\nexport function createStore(dbName: string, storeName: string): Store {\n  const request = indexedDB.open(dbName);\n  request.onupgradeneeded = () => request.result.createObjectStore(storeName);\n  const dbp = promisifyRequest(request);\n\n  return callback => dbp.then(db => callback(db.transaction(storeName, 'readwrite').objectStore(storeName)));\n}\n\nfunction keys(store: IDBObjectStore): Promise<number[]> {\n  return promisifyRequest(store.getAllKeys() as IDBRequest<number[]>);\n}\n\n/** Insert into the store */\nexport function insert(store: Store, value: Uint8Array | string, maxQueueSize: number): Promise<void> {\n  return store(store => {\n    return keys(store).then(keys => {\n      if (keys.length >= maxQueueSize) {\n        return;\n      }\n\n      // We insert with an incremented key so that the entries are popped in order\n      store.put(value, Math.max(...keys, 0) + 1);\n      return promisifyRequest(store.transaction);\n    });\n  });\n}\n\n/** Pop the oldest value from the store */\nexport function pop(store: Store): Promise<Uint8Array | string | undefined> {\n  return store(store => {\n    return keys(store).then(keys => {\n      if (keys.length === 0) {\n        return undefined;\n      }\n\n      return promisifyRequest(store.get(keys[0])).then(value => {\n        store.delete(keys[0]);\n        return promisifyRequest(store.transaction).then(() => value);\n      });\n    });\n  });\n}\n\nexport interface BrowserOfflineTransportOptions extends OfflineTransportOptions {\n  /**\n   * Name of indexedDb database to store envelopes in\n   * Default: 'sentry-offline'\n   */\n  dbName?: string;\n  /**\n   * Name of indexedDb object store to store envelopes in\n   * Default: 'queue'\n   */\n  storeName?: string;\n  /**\n   * Maximum number of envelopes to store\n   * Default: 30\n   */\n  maxQueueSize?: number;\n  /**\n   * Only required for testing on node.js\n   * @ignore\n   */\n  textDecoder?: TextDecoderInternal;\n}\n\nfunction createIndexedDbStore(options: BrowserOfflineTransportOptions): OfflineStore {\n  let store: Store | undefined;\n\n  // Lazily create the store only when it's needed\n  function getStore(): Store {\n    if (store == undefined) {\n      store = createStore(options.dbName || 'sentry-offline', options.storeName || 'queue');\n    }\n\n    return store;\n  }\n\n  return {\n    insert: async (env: Envelope) => {\n      try {\n        const serialized = await serializeEnvelope(env, options.textEncoder);\n        await insert(getStore(), serialized, options.maxQueueSize || 30);\n      } catch (_) {\n        //\n      }\n    },\n    pop: async () => {\n      try {\n        const deserialized = await pop(getStore());\n        if (deserialized) {\n          return parseEnvelope(\n            deserialized,\n            options.textEncoder || new TextEncoder(),\n            options.textDecoder || new TextDecoder(),\n          );\n        }\n      } catch (_) {\n        //\n      }\n\n      return undefined;\n    },\n  };\n}\n\nfunction makeIndexedDbOfflineTransport<T>(\n  createTransport: (options: T) => Transport,\n): (options: T & BrowserOfflineTransportOptions) => Transport {\n  return options => createTransport({ ...options, createStore: createIndexedDbStore });\n}\n\n/**\n * Creates a transport that uses IndexedDb to store events when offline.\n */\nexport function makeBrowserOfflineTransport<T extends InternalBaseTransportOptions>(\n  createTransport: (options: T) => Transport,\n): (options: T & BrowserOfflineTransportOptions) => Transport {\n  return makeIndexedDbOfflineTransport<T>(makeOfflineTransport(createTransport));\n}\n", "/* eslint-disable max-lines */\n\nimport { DEFAULT_ENVIRONMENT, getClient } from '@sentry/core';\nimport type { DebugImage, Envelope, Event, EventEnvelope, StackFrame, StackParser, Transaction } from '@sentry/types';\nimport type { Profile, ThreadCpuProfile } from '@sentry/types/src/profiling';\nimport { GLOBAL_OBJ, browserPerformanceTimeOrigin, forEachEnvelopeItem, logger, uuid4 } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport { WINDOW } from '../helpers';\nimport type { JSSelfProfile, JSSelfProfileStack, JSSelfProfiler, JSSelfProfilerConstructor } from './jsSelfProfiling';\n\nconst MS_TO_NS = 1e6;\n// Use 0 as main thread id which is identical to threadId in node:worker_threads\n// where main logs 0 and workers seem to log in increments of 1\nconst THREAD_ID_STRING = String(0);\nconst THREAD_NAME = 'main';\n\n// Machine properties (eval only once)\nlet OS_PLATFORM = '';\nlet OS_PLATFORM_VERSION = '';\nlet OS_ARCH = '';\nlet OS_BROWSER = (WINDOW.navigator && WINDOW.navigator.userAgent) || '';\nlet OS_MODEL = '';\nconst OS_LOCALE =\n  (WINDOW.navigator && WINDOW.navigator.language) ||\n  (WINDOW.navigator && WINDOW.navigator.languages && WINDOW.navigator.languages[0]) ||\n  '';\n\ntype UAData = {\n  platform?: string;\n  architecture?: string;\n  model?: string;\n  platformVersion?: string;\n  fullVersionList?: {\n    brand: string;\n    version: string;\n  }[];\n};\n\ninterface UserAgentData {\n  getHighEntropyValues: (keys: string[]) => Promise<UAData>;\n}\n\nfunction isUserAgentData(data: unknown): data is UserAgentData {\n  return typeof data === 'object' && data !== null && 'getHighEntropyValues' in data;\n}\n\n// @ts-expect-error userAgentData is not part of the navigator interface yet\nconst userAgentData = WINDOW.navigator && WINDOW.navigator.userAgentData;\n\nif (isUserAgentData(userAgentData)) {\n  userAgentData\n    .getHighEntropyValues(['architecture', 'model', 'platform', 'platformVersion', 'fullVersionList'])\n    .then((ua: UAData) => {\n      OS_PLATFORM = ua.platform || '';\n      OS_ARCH = ua.architecture || '';\n      OS_MODEL = ua.model || '';\n      OS_PLATFORM_VERSION = ua.platformVersion || '';\n\n      if (ua.fullVersionList && ua.fullVersionList.length > 0) {\n        const firstUa = ua.fullVersionList[ua.fullVersionList.length - 1];\n        OS_BROWSER = `${firstUa.brand} ${firstUa.version}`;\n      }\n    })\n    .catch(e => void e);\n}\n\nfunction isProcessedJSSelfProfile(profile: ThreadCpuProfile | JSSelfProfile): profile is JSSelfProfile {\n  return !('thread_metadata' in profile);\n}\n\n// Enriches the profile with threadId of the current thread.\n// This is done in node as we seem to not be able to get the info from C native code.\n/**\n *\n */\nexport function enrichWithThreadInformation(profile: ThreadCpuProfile | JSSelfProfile): ThreadCpuProfile {\n  if (!isProcessedJSSelfProfile(profile)) {\n    return profile;\n  }\n\n  return convertJSSelfProfileToSampledFormat(profile);\n}\n\n// Profile is marked as optional because it is deleted from the metadata\n// by the integration before the event is processed by other integrations.\nexport interface ProfiledEvent extends Event {\n  sdkProcessingMetadata: {\n    profile?: JSSelfProfile;\n  };\n}\n\nfunction getTraceId(event: Event): string {\n  const traceId: unknown = event && event.contexts && event.contexts['trace'] && event.contexts['trace']['trace_id'];\n  // Log a warning if the profile has an invalid traceId (should be uuidv4).\n  // All profiles and transactions are rejected if this is the case and we want to\n  // warn users that this is happening if they enable debug flag\n  if (typeof traceId === 'string' && traceId.length !== 32) {\n    if (DEBUG_BUILD) {\n      logger.log(`[Profiling] Invalid traceId: ${traceId} on profiled event`);\n    }\n  }\n  if (typeof traceId !== 'string') {\n    return '';\n  }\n\n  return traceId;\n}\n/**\n * Creates a profiling event envelope from a Sentry event. If profile does not pass\n * validation, returns null.\n * @param event\n * @param dsn\n * @param metadata\n * @param tunnel\n * @returns {EventEnvelope | null}\n */\n\n/**\n * Creates a profiling event envelope from a Sentry event.\n */\nexport function createProfilePayload(\n  profile_id: string,\n  start_timestamp: number | undefined,\n  processed_profile: JSSelfProfile,\n  event: ProfiledEvent,\n): Profile {\n  if (event.type !== 'transaction') {\n    // createProfilingEventEnvelope should only be called for transactions,\n    // we type guard this behavior with isProfiledTransactionEvent.\n    throw new TypeError('Profiling events may only be attached to transactions, this should never occur.');\n  }\n\n  if (processed_profile === undefined || processed_profile === null) {\n    throw new TypeError(\n      `Cannot construct profiling event envelope without a valid profile. Got ${processed_profile} instead.`,\n    );\n  }\n\n  const traceId = getTraceId(event);\n  const enrichedThreadProfile = enrichWithThreadInformation(processed_profile);\n  const transactionStartMs = start_timestamp\n    ? start_timestamp\n    : typeof event.start_timestamp === 'number'\n      ? event.start_timestamp * 1000\n      : Date.now();\n  const transactionEndMs = typeof event.timestamp === 'number' ? event.timestamp * 1000 : Date.now();\n\n  const profile: Profile = {\n    event_id: profile_id,\n    timestamp: new Date(transactionStartMs).toISOString(),\n    platform: 'javascript',\n    version: '1',\n    release: event.release || '',\n    environment: event.environment || DEFAULT_ENVIRONMENT,\n    runtime: {\n      name: 'javascript',\n      version: WINDOW.navigator.userAgent,\n    },\n    os: {\n      name: OS_PLATFORM,\n      version: OS_PLATFORM_VERSION,\n      build_number: OS_BROWSER,\n    },\n    device: {\n      locale: OS_LOCALE,\n      model: OS_MODEL,\n      manufacturer: OS_BROWSER,\n      architecture: OS_ARCH,\n      is_emulator: false,\n    },\n    debug_meta: {\n      images: applyDebugMetadata(processed_profile.resources),\n    },\n    profile: enrichedThreadProfile,\n    transactions: [\n      {\n        name: event.transaction || '',\n        id: event.event_id || uuid4(),\n        trace_id: traceId,\n        active_thread_id: THREAD_ID_STRING,\n        relative_start_ns: '0',\n        relative_end_ns: ((transactionEndMs - transactionStartMs) * 1e6).toFixed(0),\n      },\n    ],\n  };\n\n  return profile;\n}\n\n/**\n *\n */\nexport function isProfiledTransactionEvent(event: Event): event is ProfiledEvent {\n  return !!(event.sdkProcessingMetadata && event.sdkProcessingMetadata['profile']);\n}\n\n/*\n  See packages/tracing-internal/src/browser/router.ts\n*/\n/**\n *\n */\nexport function isAutomatedPageLoadTransaction(transaction: Transaction): boolean {\n  return transaction.op === 'pageload';\n}\n\n/**\n * Converts a JSSelfProfile to a our sampled format.\n * Does not currently perform stack indexing.\n */\nexport function convertJSSelfProfileToSampledFormat(input: JSSelfProfile): Profile['profile'] {\n  let EMPTY_STACK_ID: undefined | number = undefined;\n  let STACK_ID = 0;\n\n  // Initialize the profile that we will fill with data\n  const profile: Profile['profile'] = {\n    samples: [],\n    stacks: [],\n    frames: [],\n    thread_metadata: {\n      [THREAD_ID_STRING]: { name: THREAD_NAME },\n    },\n  };\n\n  if (!input.samples.length) {\n    return profile;\n  }\n\n  // We assert samples.length > 0 above and timestamp should always be present\n  const start = input.samples[0].timestamp;\n  // The JS SDK might change it's time origin based on some heuristic (see See packages/utils/src/time.ts)\n  // when that happens, we need to ensure we are correcting the profile timings so the two timelines stay in sync.\n  // Since JS self profiling time origin is always initialized to performance.timeOrigin, we need to adjust for\n  // the drift between the SDK selected value and our profile time origin.\n  const origin =\n    typeof performance.timeOrigin === 'number' ? performance.timeOrigin : browserPerformanceTimeOrigin || 0;\n  const adjustForOriginChange = origin - (browserPerformanceTimeOrigin || origin);\n\n  for (let i = 0; i < input.samples.length; i++) {\n    const jsSample = input.samples[i];\n\n    // If sample has no stack, add an empty sample\n    if (jsSample.stackId === undefined) {\n      if (EMPTY_STACK_ID === undefined) {\n        EMPTY_STACK_ID = STACK_ID;\n        profile.stacks[EMPTY_STACK_ID] = [];\n        STACK_ID++;\n      }\n\n      profile['samples'][i] = {\n        // convert ms timestamp to ns\n        elapsed_since_start_ns: ((jsSample.timestamp + adjustForOriginChange - start) * MS_TO_NS).toFixed(0),\n        stack_id: EMPTY_STACK_ID,\n        thread_id: THREAD_ID_STRING,\n      };\n      continue;\n    }\n\n    let stackTop: JSSelfProfileStack | undefined = input.stacks[jsSample.stackId];\n\n    // Functions in top->down order (root is last)\n    // We follow the stackTop.parentId trail and collect each visited frameId\n    const stack: number[] = [];\n\n    while (stackTop) {\n      stack.push(stackTop.frameId);\n\n      const frame = input.frames[stackTop.frameId];\n\n      // If our frame has not been indexed yet, index it\n      if (profile.frames[stackTop.frameId] === undefined) {\n        profile.frames[stackTop.frameId] = {\n          function: frame.name,\n          abs_path: typeof frame.resourceId === 'number' ? input.resources[frame.resourceId] : undefined,\n          lineno: frame.line,\n          colno: frame.column,\n        };\n      }\n\n      stackTop = stackTop.parentId === undefined ? undefined : input.stacks[stackTop.parentId];\n    }\n\n    const sample: Profile['profile']['samples'][0] = {\n      // convert ms timestamp to ns\n      elapsed_since_start_ns: ((jsSample.timestamp + adjustForOriginChange - start) * MS_TO_NS).toFixed(0),\n      stack_id: STACK_ID,\n      thread_id: THREAD_ID_STRING,\n    };\n\n    profile['stacks'][STACK_ID] = stack;\n    profile['samples'][i] = sample;\n    STACK_ID++;\n  }\n\n  return profile;\n}\n\n/**\n * Adds items to envelope if they are not already present - mutates the envelope.\n * @param envelope\n */\nexport function addProfilesToEnvelope(envelope: EventEnvelope, profiles: Profile[]): Envelope {\n  if (!profiles.length) {\n    return envelope;\n  }\n\n  for (const profile of profiles) {\n    envelope[1].push([{ type: 'profile' }, profile]);\n  }\n  return envelope;\n}\n\n/**\n * Finds transactions with profile_id context in the envelope\n * @param envelope\n * @returns\n */\nexport function findProfiledTransactionsFromEnvelope(envelope: Envelope): Event[] {\n  const events: Event[] = [];\n\n  forEachEnvelopeItem(envelope, (item, type) => {\n    if (type !== 'transaction') {\n      return;\n    }\n\n    for (let j = 1; j < item.length; j++) {\n      const event = item[j] as Event;\n\n      if (event && event.contexts && event.contexts['profile'] && event.contexts['profile']['profile_id']) {\n        events.push(item[j] as Event);\n      }\n    }\n  });\n\n  return events;\n}\n\nconst debugIdStackParserCache = new WeakMap<StackParser, Map<string, StackFrame[]>>();\n/**\n * Applies debug meta data to an event from a list of paths to resources (sourcemaps)\n */\nexport function applyDebugMetadata(resource_paths: ReadonlyArray<string>): DebugImage[] {\n  const debugIdMap = GLOBAL_OBJ._sentryDebugIds;\n\n  if (!debugIdMap) {\n    return [];\n  }\n\n  const client = getClient();\n  const options = client && client.getOptions();\n  const stackParser = options && options.stackParser;\n\n  if (!stackParser) {\n    return [];\n  }\n\n  let debugIdStackFramesCache: Map<string, StackFrame[]>;\n  const cachedDebugIdStackFrameCache = debugIdStackParserCache.get(stackParser);\n  if (cachedDebugIdStackFrameCache) {\n    debugIdStackFramesCache = cachedDebugIdStackFrameCache;\n  } else {\n    debugIdStackFramesCache = new Map<string, StackFrame[]>();\n    debugIdStackParserCache.set(stackParser, debugIdStackFramesCache);\n  }\n\n  // Build a map of filename -> debug_id\n  const filenameDebugIdMap = Object.keys(debugIdMap).reduce<Record<string, string>>((acc, debugIdStackTrace) => {\n    let parsedStack: StackFrame[];\n\n    const cachedParsedStack = debugIdStackFramesCache.get(debugIdStackTrace);\n    if (cachedParsedStack) {\n      parsedStack = cachedParsedStack;\n    } else {\n      parsedStack = stackParser(debugIdStackTrace);\n      debugIdStackFramesCache.set(debugIdStackTrace, parsedStack);\n    }\n\n    for (let i = parsedStack.length - 1; i >= 0; i--) {\n      const stackFrame = parsedStack[i];\n      const file = stackFrame && stackFrame.filename;\n\n      if (stackFrame && file) {\n        acc[file] = debugIdMap[debugIdStackTrace] as string;\n        break;\n      }\n    }\n    return acc;\n  }, {});\n\n  const images: DebugImage[] = [];\n  for (const path of resource_paths) {\n    if (path && filenameDebugIdMap[path]) {\n      images.push({\n        type: 'sourcemap',\n        code_file: path,\n        debug_id: filenameDebugIdMap[path] as string,\n      });\n    }\n  }\n\n  return images;\n}\n\n/**\n * Checks the given sample rate to make sure it is valid type and value (a boolean, or a number between 0 and 1).\n */\nexport function isValidSampleRate(rate: unknown): boolean {\n  // we need to check NaN explicitly because it's of type 'number' and therefore wouldn't get caught by this typecheck\n  if ((typeof rate !== 'number' && typeof rate !== 'boolean') || (typeof rate === 'number' && isNaN(rate))) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `[Profiling] Invalid sample rate. Sample rate must be a boolean or a number between 0 and 1. Got ${JSON.stringify(\n          rate,\n        )} of type ${JSON.stringify(typeof rate)}.`,\n      );\n    return false;\n  }\n\n  // Boolean sample rates are always valid\n  if (rate === true || rate === false) {\n    return true;\n  }\n\n  // in case sampleRate is a boolean, it will get automatically cast to 1 if it's true and 0 if it's false\n  if (rate < 0 || rate > 1) {\n    DEBUG_BUILD && logger.warn(`[Profiling] Invalid sample rate. Sample rate must be between 0 and 1. Got ${rate}.`);\n    return false;\n  }\n  return true;\n}\n\nfunction isValidProfile(profile: JSSelfProfile): profile is JSSelfProfile & { profile_id: string } {\n  if (profile.samples.length < 2) {\n    if (DEBUG_BUILD) {\n      // Log a warning if the profile has less than 2 samples so users can know why\n      // they are not seeing any profiling data and we cant avoid the back and forth\n      // of asking them to provide us with a dump of the profile data.\n      logger.log('[Profiling] Discarding profile because it contains less than 2 samples');\n    }\n    return false;\n  }\n\n  if (!profile.frames.length) {\n    if (DEBUG_BUILD) {\n      logger.log('[Profiling] Discarding profile because it contains no frames');\n    }\n    return false;\n  }\n\n  return true;\n}\n\n// Keep a flag value to avoid re-initializing the profiler constructor. If it fails\n// once, it will always fail and this allows us to early return.\nlet PROFILING_CONSTRUCTOR_FAILED: boolean = false;\nexport const MAX_PROFILE_DURATION_MS = 30_000;\n\n/**\n * Check if profiler constructor is available.\n * @param maybeProfiler\n */\nfunction isJSProfilerSupported(maybeProfiler: unknown): maybeProfiler is typeof JSSelfProfilerConstructor {\n  return typeof maybeProfiler === 'function';\n}\n\n/**\n * Starts the profiler and returns the profiler instance.\n */\nexport function startJSSelfProfile(): JSSelfProfiler | undefined {\n  // Feature support check first\n  const JSProfilerConstructor = WINDOW.Profiler;\n\n  if (!isJSProfilerSupported(JSProfilerConstructor)) {\n    if (DEBUG_BUILD) {\n      logger.log(\n        '[Profiling] Profiling is not supported by this browser, Profiler interface missing on window object.',\n      );\n    }\n    return;\n  }\n\n  // From initial testing, it seems that the minimum value for sampleInterval is 10ms.\n  const samplingIntervalMS = 10;\n  // Start the profiler\n  const maxSamples = Math.floor(MAX_PROFILE_DURATION_MS / samplingIntervalMS);\n\n  // Attempt to initialize the profiler constructor, if it fails, we disable profiling for the current user session.\n  // This is likely due to a missing 'Document-Policy': 'js-profiling' header. We do not want to throw an error if this happens\n  // as we risk breaking the user's application, so just disable profiling and log an error.\n  try {\n    return new JSProfilerConstructor({ sampleInterval: samplingIntervalMS, maxBufferSize: maxSamples });\n  } catch (e) {\n    if (DEBUG_BUILD) {\n      logger.log(\n        \"[Profiling] Failed to initialize the Profiling constructor, this is likely due to a missing 'Document-Policy': 'js-profiling' header.\",\n      );\n      logger.log('[Profiling] Disabling profiling for current user session.');\n    }\n    PROFILING_CONSTRUCTOR_FAILED = true;\n  }\n\n  return;\n}\n\n/**\n * Determine if a profile should be profiled.\n */\nexport function shouldProfileTransaction(transaction: Transaction): boolean {\n  // If constructor failed once, it will always fail, so we can early return.\n  if (PROFILING_CONSTRUCTOR_FAILED) {\n    if (DEBUG_BUILD) {\n      logger.log('[Profiling] Profiling has been disabled for the duration of the current user session.');\n    }\n    return false;\n  }\n\n  if (!transaction.isRecording()) {\n    if (DEBUG_BUILD) {\n      logger.log('[Profiling] Discarding profile because transaction was not sampled.');\n    }\n    return false;\n  }\n\n  const client = getClient();\n  const options = client && client.getOptions();\n  if (!options) {\n    DEBUG_BUILD && logger.log('[Profiling] Profiling disabled, no options found.');\n    return false;\n  }\n\n  // @ts-expect-error profilesSampleRate is not part of the browser options yet\n  const profilesSampleRate: number | boolean | undefined = options.profilesSampleRate;\n\n  // Since this is coming from the user (or from a function provided by the user), who knows what we might get. (The\n  // only valid values are booleans or numbers between 0 and 1.)\n  if (!isValidSampleRate(profilesSampleRate)) {\n    DEBUG_BUILD && logger.warn('[Profiling] Discarding profile because of invalid sample rate.');\n    return false;\n  }\n\n  // if the function returned 0 (or false), or if `profileSampleRate` is 0, it's a sign the profile should be dropped\n  if (!profilesSampleRate) {\n    DEBUG_BUILD &&\n      logger.log(\n        '[Profiling] Discarding profile because a negative sampling decision was inherited or profileSampleRate is set to 0',\n      );\n    return false;\n  }\n\n  // Now we roll the dice. Math.random is inclusive of 0, but not of 1, so strict < is safe here. In case sampleRate is\n  // a boolean, the < comparison will cause it to be automatically cast to 1 if it's true and 0 if it's false.\n  const sampled = profilesSampleRate === true ? true : Math.random() < profilesSampleRate;\n  // Check if we should sample this profile\n  if (!sampled) {\n    DEBUG_BUILD &&\n      logger.log(\n        `[Profiling] Discarding profile because it's not included in the random sample (sampling rate = ${Number(\n          profilesSampleRate,\n        )})`,\n      );\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Creates a profiling envelope item, if the profile does not pass validation, returns null.\n * @param event\n * @returns {Profile | null}\n */\nexport function createProfilingEvent(\n  profile_id: string,\n  start_timestamp: number | undefined,\n  profile: JSSelfProfile,\n  event: ProfiledEvent,\n): Profile | null {\n  if (!isValidProfile(profile)) {\n    return null;\n  }\n\n  return createProfilePayload(profile_id, start_timestamp, profile, event);\n}\n\n// TODO (v8): We need to obtain profile ids in @sentry-internal/tracing,\n// but we don't have access to this map because importing this map would\n// cause a circular dependancy. We need to resolve this in v8.\nconst PROFILE_MAP: Map<string, JSSelfProfile> = new Map();\n/**\n *\n */\nexport function getActiveProfilesCount(): number {\n  return PROFILE_MAP.size;\n}\n\n/**\n * Retrieves profile from global cache and removes it.\n */\nexport function takeProfileFromGlobalCache(profile_id: string): JSSelfProfile | undefined {\n  const profile = PROFILE_MAP.get(profile_id);\n  if (profile) {\n    PROFILE_MAP.delete(profile_id);\n  }\n  return profile;\n}\n/**\n * Adds profile to global cache and evicts the oldest profile if the cache is full.\n */\nexport function addProfileToGlobalCache(profile_id: string, profile: JSSelfProfile): void {\n  PROFILE_MAP.set(profile_id, profile);\n\n  if (PROFILE_MAP.size > 30) {\n    const last: string = PROFILE_MAP.keys().next().value;\n    PROFILE_MAP.delete(last);\n  }\n}\n", "/* eslint-disable complexity */\nimport { spanToJSON } from '@sentry/core';\nimport type { Transaction } from '@sentry/types';\nimport { logger, timestampInSeconds, uuid4 } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport { WINDOW } from '../helpers';\nimport type { JSSelfProfile } from './jsSelfProfiling';\nimport {\n  MAX_PROFILE_DURATION_MS,\n  addProfileToGlobalCache,\n  isAutomatedPageLoadTransaction,\n  shouldProfileTransaction,\n  startJSSelfProfile,\n} from './utils';\n\n/**\n * Safety wrapper for startTransaction for the unlikely case that transaction starts before tracing is imported -\n * if that happens we want to avoid throwing an error from profiling code.\n * see https://github.com/getsentry/sentry-javascript/issues/4731.\n *\n * @experimental\n */\nexport function onProfilingStartRouteTransaction(transaction: Transaction | undefined): Transaction | undefined {\n  if (!transaction) {\n    if (DEBUG_BUILD) {\n      logger.log('[Profiling] Transaction is undefined, skipping profiling');\n    }\n    return transaction;\n  }\n\n  if (shouldProfileTransaction(transaction)) {\n    return startProfileForTransaction(transaction);\n  }\n\n  return transaction;\n}\n\n/**\n * Wraps startTransaction and stopTransaction with profiling related logic.\n * startProfileForTransaction is called after the call to startTransaction in order to avoid our own code from\n * being profiled. Because of that same reason, stopProfiling is called before the call to stopTransaction.\n */\nexport function startProfileForTransaction(transaction: Transaction): Transaction {\n  // Start the profiler and get the profiler instance.\n  let startTimestamp: number | undefined;\n  if (isAutomatedPageLoadTransaction(transaction)) {\n    startTimestamp = timestampInSeconds() * 1000;\n  }\n\n  const profiler = startJSSelfProfile();\n\n  // We failed to construct the profiler, fallback to original transaction.\n  // No need to log anything as this has already been logged in startProfile.\n  if (!profiler) {\n    return transaction;\n  }\n\n  if (DEBUG_BUILD) {\n    logger.log(`[Profiling] started profiling transaction: ${spanToJSON(transaction).description}`);\n  }\n\n  // We create \"unique\" transaction names to avoid concurrent transactions with same names\n  // from being ignored by the profiler. From here on, only this transaction name should be used when\n  // calling the profiler methods. Note: we log the original name to the user to avoid confusion.\n  const profileId = uuid4();\n\n  // A couple of important things to note here:\n  // `CpuProfilerBindings.stopProfiling` will be scheduled to run in 30seconds in order to exceed max profile duration.\n  // Whichever of the two (transaction.finish/timeout) is first to run, the profiling will be stopped and the gathered profile\n  // will be processed when the original transaction is finished. Since onProfileHandler can be invoked multiple times in the\n  // event of an error or user mistake (calling transaction.finish multiple times), it is important that the behavior of onProfileHandler\n  // is idempotent as we do not want any timings or profiles to be overriden by the last call to onProfileHandler.\n  // After the original finish method is called, the event will be reported through the integration and delegated to transport.\n  const processedProfile: JSSelfProfile | null = null;\n\n  /**\n   * Idempotent handler for profile stop\n   */\n  async function onProfileHandler(): Promise<null> {\n    // Check if the profile exists and return it the behavior has to be idempotent as users may call transaction.finish multiple times.\n    if (!transaction) {\n      return null;\n    }\n    // Satisfy the type checker, but profiler will always be defined here.\n    if (!profiler) {\n      return null;\n    }\n    if (processedProfile) {\n      if (DEBUG_BUILD) {\n        logger.log('[Profiling] profile for:', spanToJSON(transaction).description, 'already exists, returning early');\n      }\n      return null;\n    }\n\n    return profiler\n      .stop()\n      .then((profile: JSSelfProfile): null => {\n        if (maxDurationTimeoutID) {\n          WINDOW.clearTimeout(maxDurationTimeoutID);\n          maxDurationTimeoutID = undefined;\n        }\n\n        if (DEBUG_BUILD) {\n          logger.log(`[Profiling] stopped profiling of transaction: ${spanToJSON(transaction).description}`);\n        }\n\n        // In case of an overlapping transaction, stopProfiling may return null and silently ignore the overlapping profile.\n        if (!profile) {\n          if (DEBUG_BUILD) {\n            logger.log(\n              `[Profiling] profiler returned null profile for: ${spanToJSON(transaction).description}`,\n              'this may indicate an overlapping transaction or a call to stopProfiling with a profile title that was never started',\n            );\n          }\n          return null;\n        }\n\n        addProfileToGlobalCache(profileId, profile);\n        return null;\n      })\n      .catch(error => {\n        if (DEBUG_BUILD) {\n          logger.log('[Profiling] error while stopping profiler:', error);\n        }\n        return null;\n      });\n  }\n\n  // Enqueue a timeout to prevent profiles from running over max duration.\n  let maxDurationTimeoutID: number | undefined = WINDOW.setTimeout(() => {\n    if (DEBUG_BUILD) {\n      logger.log(\n        '[Profiling] max profile duration elapsed, stopping profiling for:',\n        spanToJSON(transaction).description,\n      );\n    }\n    // If the timeout exceeds, we want to stop profiling, but not finish the transaction\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    onProfileHandler();\n  }, MAX_PROFILE_DURATION_MS);\n\n  // We need to reference the original end call to avoid creating an infinite loop\n  const originalEnd = transaction.end.bind(transaction);\n\n  /**\n   * Wraps startTransaction and stopTransaction with profiling related logic.\n   * startProfiling is called after the call to startTransaction in order to avoid our own code from\n   * being profiled. Because of that same reason, stopProfiling is called before the call to stopTransaction.\n   */\n  function profilingWrappedTransactionEnd(): Transaction {\n    if (!transaction) {\n      return originalEnd();\n    }\n    // onProfileHandler should always return the same profile even if this is called multiple times.\n    // Always call onProfileHandler to ensure stopProfiling is called and the timeout is cleared.\n    void onProfileHandler().then(\n      () => {\n        // TODO: Can we rewrite this to use attributes?\n        // eslint-disable-next-line deprecation/deprecation\n        transaction.setContext('profile', { profile_id: profileId, start_timestamp: startTimestamp });\n        originalEnd();\n      },\n      () => {\n        // If onProfileHandler fails, we still want to call the original finish method.\n        originalEnd();\n      },\n    );\n\n    return transaction;\n  }\n\n  transaction.end = profilingWrappedTransactionEnd;\n  return transaction;\n}\n", "import { convertIntegrationFnToClass, defineIntegration, getCurrentScope } from '@sentry/core';\nimport type { Client, EventEnvelope, Integration, IntegrationClass, IntegrationFn, Transaction } from '@sentry/types';\nimport type { Profile } from '@sentry/types/src/profiling';\nimport { logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport { startProfileForTransaction } from './hubextensions';\nimport type { ProfiledEvent } from './utils';\nimport {\n  addProfilesToEnvelope,\n  createProfilingEvent,\n  findProfiledTransactionsFromEnvelope,\n  getActiveProfilesCount,\n  isAutomatedPageLoadTransaction,\n  shouldProfileTransaction,\n  takeProfileFromGlobalCache,\n} from './utils';\n\nconst INTEGRATION_NAME = 'BrowserProfiling';\n\nconst _browserProfilingIntegration = (() => {\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    setup(client) {\n      const scope = getCurrentScope();\n\n      // eslint-disable-next-line deprecation/deprecation\n      const transaction = scope.getTransaction();\n\n      if (transaction && isAutomatedPageLoadTransaction(transaction)) {\n        if (shouldProfileTransaction(transaction)) {\n          startProfileForTransaction(transaction);\n        }\n      }\n\n      if (typeof client.on !== 'function') {\n        logger.warn('[Profiling] Client does not support hooks, profiling will be disabled');\n        return;\n      }\n\n      client.on('startTransaction', (transaction: Transaction) => {\n        if (shouldProfileTransaction(transaction)) {\n          startProfileForTransaction(transaction);\n        }\n      });\n\n      client.on('beforeEnvelope', (envelope): void => {\n        // if not profiles are in queue, there is nothing to add to the envelope.\n        if (!getActiveProfilesCount()) {\n          return;\n        }\n\n        const profiledTransactionEvents = findProfiledTransactionsFromEnvelope(envelope);\n        if (!profiledTransactionEvents.length) {\n          return;\n        }\n\n        const profilesToAddToEnvelope: Profile[] = [];\n\n        for (const profiledTransaction of profiledTransactionEvents) {\n          const context = profiledTransaction && profiledTransaction.contexts;\n          const profile_id = context && context['profile'] && context['profile']['profile_id'];\n          const start_timestamp = context && context['profile'] && context['profile']['start_timestamp'];\n\n          if (typeof profile_id !== 'string') {\n            DEBUG_BUILD && logger.log('[Profiling] cannot find profile for a transaction without a profile context');\n            continue;\n          }\n\n          if (!profile_id) {\n            DEBUG_BUILD && logger.log('[Profiling] cannot find profile for a transaction without a profile context');\n            continue;\n          }\n\n          // Remove the profile from the transaction context before sending, relay will take care of the rest.\n          if (context && context['profile']) {\n            delete context.profile;\n          }\n\n          const profile = takeProfileFromGlobalCache(profile_id);\n          if (!profile) {\n            DEBUG_BUILD && logger.log(`[Profiling] Could not retrieve profile for transaction: ${profile_id}`);\n            continue;\n          }\n\n          const profileEvent = createProfilingEvent(\n            profile_id,\n            start_timestamp as number | undefined,\n            profile,\n            profiledTransaction as ProfiledEvent,\n          );\n          if (profileEvent) {\n            profilesToAddToEnvelope.push(profileEvent);\n          }\n        }\n\n        addProfilesToEnvelope(envelope as EventEnvelope, profilesToAddToEnvelope);\n      });\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const browserProfilingIntegration = defineIntegration(_browserProfilingIntegration);\n\n/**\n * Browser profiling integration. Stores any event that has contexts[\"profile\"][\"profile_id\"]\n * This exists because we do not want to await async profiler.stop calls as transaction.finish is called\n * in a synchronous context. Instead, we handle sending the profile async from the promise callback and\n * rely on being able to pull the event from the cache when we need to construct the envelope. This makes the\n * integration less reliable as we might be dropping profiles when the cache is full.\n *\n * @experimental\n * @deprecated Use `browserProfilingIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const BrowserProfilingIntegration = convertIntegrationFnToClass(\n  INTEGRATION_NAME,\n  browserProfilingIntegration,\n) as IntegrationClass<Integration & { setup: (client: Client) => void }>;\n\n// eslint-disable-next-line deprecation/deprecation\nexport type BrowserProfilingIntegration = typeof BrowserProfilingIntegration;\n", "export * from './exports';\n\nimport { Integrations as CoreIntegrations } from '@sentry/core';\n\nimport { WINDOW } from './helpers';\nimport * as BrowserIntegrations from './integrations';\n\nlet windowIntegrations = {};\n\n// This block is needed to add compatibility with the integrations packages when used with a CDN\nif (WINDOW.Sentry && WINDOW.Sentry.Integrations) {\n  windowIntegrations = WINDOW.Sentry.Integrations;\n}\n\n/** @deprecated Import the integration function directly, e.g. `inboundFiltersIntegration()` instead of `new Integrations.InboundFilter(). */\nconst INTEGRATIONS = {\n  ...windowIntegrations,\n  // eslint-disable-next-line deprecation/deprecation\n  ...CoreIntegrations,\n  ...BrowserIntegrations,\n};\n\n// eslint-disable-next-line deprecation/deprecation\nexport { INTEGRATIONS as Integrations };\n\nexport {\n  // eslint-disable-next-line deprecation/deprecation\n  Replay,\n  replayIntegration,\n  getReplay,\n} from '@sentry/replay';\nexport type {\n  ReplayEventType,\n  ReplayEventWithTime,\n  ReplayBreadcrumbFrame,\n  ReplayBreadcrumbFrameEvent,\n  ReplayOptionFrameEvent,\n  ReplayFrame,\n  ReplayFrameEvent,\n  ReplaySpanFrame,\n  ReplaySpanFrameEvent,\n} from '@sentry/replay';\n\nexport {\n  // eslint-disable-next-line deprecation/deprecation\n  ReplayCanvas,\n  replayCanvasIntegration,\n} from '@sentry-internal/replay-canvas';\n\nexport {\n  // eslint-disable-next-line deprecation/deprecation\n  Feedback,\n  feedbackIntegration,\n  sendFeedback,\n} from '@sentry-internal/feedback';\n\nexport {\n  // eslint-disable-next-line deprecation/deprecation\n  BrowserTracing,\n  defaultRequestInstrumentationOptions,\n  instrumentOutgoingRequests,\n  browserTracingIntegration,\n  startBrowserTracingNavigationSpan,\n  startBrowserTracingPageLoadSpan,\n} from '@sentry-internal/tracing';\nexport type { RequestInstrumentationOptions } from '@sentry-internal/tracing';\nexport {\n  addTracingExtensions,\n  setMeasurement,\n  // eslint-disable-next-line deprecation/deprecation\n  extractTraceparentData,\n  // eslint-disable-next-line deprecation/deprecation\n  getActiveTransaction,\n  // eslint-disable-next-line deprecation/deprecation\n  spanStatusfromHttpCode,\n  getSpanStatusFromHttpCode,\n  setHttpStatus,\n  // eslint-disable-next-line deprecation/deprecation\n  trace,\n  makeMultiplexedTransport,\n  // eslint-disable-next-line deprecation/deprecation\n  ModuleMetadata,\n  moduleMetadataIntegration,\n} from '@sentry/core';\nexport type { SpanStatusType } from '@sentry/core';\nexport type { Span } from '@sentry/types';\nexport { makeBrowserOfflineTransport } from './transports/offline';\nexport { onProfilingStartRouteTransaction } from './profiling/hubextensions';\nexport {\n  // eslint-disable-next-line deprecation/deprecation\n  BrowserProfilingIntegration,\n  browserProfilingIntegration,\n} from './profiling/integration';\n", "import type { Operation } from './types';\n\nexport const DEFAULT_HOOKS: Operation[] = ['activate', 'mount', 'update'];\n", "import type { ViewModel } from '../types';\n\n// Vendored from https://github.com/vuejs/vue/blob/612fb89547711cacb030a3893a0065b785802860/src/core/util/debug.js\n// with types only changes.\n\n// The MIT License (MIT)\n\n// Copyright (c) 2013-present, Yuxi (Evan) You\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nconst classifyRE = /(?:^|[-_])(\\w)/g;\nconst classify = (str: string): string => str.replace(classifyRE, c => c.toUpperCase()).replace(/[-_]/g, '');\n\nconst ROOT_COMPONENT_NAME = '<Root>';\nconst ANONYMOUS_COMPONENT_NAME = '<Anonymous>';\n\nconst repeat = (str: string, n: number): string => {\n  // string.repeat() is not supported by IE11, we fall back to just using the string in that case\n  // eslint-disable-next-line @sentry-internal/sdk/no-unsupported-es6-methods\n  return str.repeat ? str.repeat(n) : str;\n};\n\nexport const formatComponentName = (vm?: ViewModel, includeFile?: boolean): string => {\n  if (!vm) {\n    return ANONYMOUS_COMPONENT_NAME;\n  }\n\n  if (vm.$root === vm) {\n    return ROOT_COMPONENT_NAME;\n  }\n\n  // https://github.com/getsentry/sentry-javascript/issues/5204 $options can be undefined\n  if (!vm.$options) {\n    return ANONYMOUS_COMPONENT_NAME;\n  }\n\n  const options = vm.$options;\n\n  let name = options.name || options._componentTag;\n  const file = options.__file;\n  if (!name && file) {\n    const match = file.match(/([^/\\\\]+)\\.vue$/);\n    if (match) {\n      name = match[1];\n    }\n  }\n\n  return (\n    (name ? `<${classify(name)}>` : ANONYMOUS_COMPONENT_NAME) + (file && includeFile !== false ? ` at ${file}` : '')\n  );\n};\n\nexport const generateComponentTrace = (vm?: ViewModel): string => {\n  if (vm && (vm._isVue || vm.__isVue) && vm.$parent) {\n    const tree = [];\n    let currentRecursiveSequence = 0;\n    while (vm) {\n      if (tree.length > 0) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const last = tree[tree.length - 1] as any;\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        if (last.constructor === vm.constructor) {\n          currentRecursiveSequence++;\n          vm = vm.$parent; // eslint-disable-line no-param-reassign\n          continue;\n        } else if (currentRecursiveSequence > 0) {\n          tree[tree.length - 1] = [last, currentRecursiveSequence];\n          currentRecursiveSequence = 0;\n        }\n      }\n      tree.push(vm);\n      vm = vm.$parent; // eslint-disable-line no-param-reassign\n    }\n\n    const formattedTree = tree\n      .map(\n        (vm, i) =>\n          `${\n            (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) +\n            (Array.isArray(vm)\n              ? `${formatComponentName(vm[0])}... (${vm[1]} recursive calls)`\n              : formatComponentName(vm))\n          }`,\n      )\n      .join('\\n');\n\n    return `\\n\\nfound in\\n\\n${formattedTree}`;\n  }\n\n  return `\\n\\n(found in ${formatComponentName(vm)})`;\n};\n", "import { captureException } from '@sentry/core';\nimport { consoleSandbox } from '@sentry/utils';\n\nimport type { ViewModel, Vue, VueOptions } from './types';\nimport { formatComponentName, generateComponentTrace } from './vendor/components';\n\ntype UnknownFunc = (...args: unknown[]) => void;\n\nexport const attachErrorHandler = (app: Vue, options: VueOptions): void => {\n  const { errorHandler, warnHandler, silent } = app.config;\n\n  app.config.errorHandler = (error: Error, vm: ViewModel, lifecycleHook: string): void => {\n    const componentName = formatComponentName(vm, false);\n    const trace = vm ? generateComponentTrace(vm) : '';\n    const metadata: Record<string, unknown> = {\n      componentName,\n      lifecycleHook,\n      trace,\n    };\n\n    if (options.attachProps && vm) {\n      // Vue2 - $options.propsData\n      // Vue3 - $props\n      if (vm.$options && vm.$options.propsData) {\n        metadata.propsData = vm.$options.propsData;\n      } else if (vm.$props) {\n        metadata.propsData = vm.$props;\n      }\n    }\n\n    // Capture exception in the next event loop, to make sure that all breadcrumbs are recorded in time.\n    setTimeout(() => {\n      captureException(error, {\n        captureContext: { contexts: { vue: metadata } },\n        mechanism: { handled: false },\n      });\n    });\n\n    if (typeof errorHandler === 'function') {\n      (errorHandler as UnknownFunc).call(app, error, vm, lifecycleHook);\n    }\n\n    if (options.logErrors) {\n      const hasConsole = typeof console !== 'undefined';\n      const message = `Error in ${lifecycleHook}: \"${error && error.toString()}\"`;\n\n      if (warnHandler) {\n        (warnHandler as UnknownFunc).call(null, message, vm, trace);\n      } else if (hasConsole && !silent) {\n        consoleSandbox(() => {\n          // eslint-disable-next-line no-console\n          console.error(`[Vue warn]: ${message}${trace}`);\n        });\n      }\n    }\n  };\n};\n", "declare const __DEBUG_BUILD__: boolean;\n\n/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nexport const DEBUG_BUILD = __DEBUG_BUILD__;\n", "import { getActiveSpan, getCurrentScope, startInactiveSpan } from '@sentry/browser';\nimport type { Span, Transaction } from '@sentry/types';\nimport { logger, timestampInSeconds } from '@sentry/utils';\n\nimport { DEFAULT_HOOKS } from './constants';\nimport { DEBUG_BUILD } from './debug-build';\nimport type { Hook, Operation, TracingOptions, ViewModel, Vue } from './types';\nimport { formatComponentName } from './vendor/components';\n\nconst VUE_OP = 'ui.vue';\n\ntype Mixins = Parameters<Vue['mixin']>[0];\n\ninterface VueSentry extends ViewModel {\n  readonly $root: VueSentry;\n  $_sentrySpans?: {\n    [key: string]: Span | undefined;\n  };\n  $_sentryRootSpan?: Span;\n  $_sentryRootSpanTimer?: ReturnType<typeof setTimeout>;\n}\n\n// Mappings from operation to corresponding lifecycle hook.\nconst HOOKS: { [key in Operation]: Hook[] } = {\n  activate: ['activated', 'deactivated'],\n  create: ['beforeCreate', 'created'],\n  // Vue 3\n  unmount: ['beforeUnmount', 'unmounted'],\n  // Vue 2\n  destroy: ['beforeDestroy', 'destroyed'],\n  mount: ['beforeMount', 'mounted'],\n  update: ['beforeUpdate', 'updated'],\n};\n\n/**\n * Grabs active transaction off scope.\n *\n * @deprecated You should not rely on the transaction, but just use `startSpan()` APIs instead.\n */\nexport function getActiveTransaction(): Transaction | undefined {\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentScope().getTransaction();\n}\n\n/** Finish top-level span and activity with a debounce configured using `timeout` option */\nfunction finishRootSpan(vm: VueSentry, timestamp: number, timeout: number): void {\n  if (vm.$_sentryRootSpanTimer) {\n    clearTimeout(vm.$_sentryRootSpanTimer);\n  }\n\n  vm.$_sentryRootSpanTimer = setTimeout(() => {\n    if (vm.$root && vm.$root.$_sentryRootSpan) {\n      vm.$root.$_sentryRootSpan.end(timestamp);\n      vm.$root.$_sentryRootSpan = undefined;\n    }\n  }, timeout);\n}\n\nexport const createTracingMixins = (options: TracingOptions): Mixins => {\n  const hooks = (options.hooks || [])\n    .concat(DEFAULT_HOOKS)\n    // Removing potential duplicates\n    .filter((value, index, self) => self.indexOf(value) === index);\n\n  const mixins: Mixins = {};\n\n  for (const operation of hooks) {\n    // Retrieve corresponding hooks from Vue lifecycle.\n    // eg. mount => ['beforeMount', 'mounted']\n    const internalHooks = HOOKS[operation];\n    if (!internalHooks) {\n      DEBUG_BUILD && logger.warn(`Unknown hook: ${operation}`);\n      continue;\n    }\n\n    for (const internalHook of internalHooks) {\n      mixins[internalHook] = function (this: VueSentry) {\n        const isRoot = this.$root === this;\n\n        if (isRoot) {\n          const activeSpan = getActiveSpan();\n          if (activeSpan) {\n            this.$_sentryRootSpan =\n              this.$_sentryRootSpan ||\n              startInactiveSpan({\n                name: 'Application Render',\n                op: `${VUE_OP}.render`,\n                origin: 'auto.ui.vue',\n              });\n          }\n        }\n\n        // Skip components that we don't want to track to minimize the noise and give a more granular control to the user\n        const name = formatComponentName(this, false);\n        const shouldTrack = Array.isArray(options.trackComponents)\n          ? options.trackComponents.indexOf(name) > -1\n          : options.trackComponents;\n\n        // We always want to track root component\n        if (!isRoot && !shouldTrack) {\n          return;\n        }\n\n        this.$_sentrySpans = this.$_sentrySpans || {};\n\n        // Start a new span if current hook is a 'before' hook.\n        // Otherwise, retrieve the current span and finish it.\n        if (internalHook == internalHooks[0]) {\n          const activeSpan = (this.$root && this.$root.$_sentryRootSpan) || getActiveSpan();\n          if (activeSpan) {\n            // Cancel old span for this hook operation in case it didn't get cleaned up. We're not actually sure if it\n            // will ever be the case that cleanup hooks re not called, but we had users report that spans didn't get\n            // finished so we finish the span before starting a new one, just to be sure.\n            const oldSpan = this.$_sentrySpans[operation];\n            if (oldSpan) {\n              oldSpan.end();\n            }\n\n            this.$_sentrySpans[operation] = startInactiveSpan({\n              name: `Vue <${name}>`,\n              op: `${VUE_OP}.${operation}`,\n              origin: 'auto.ui.vue',\n            });\n          }\n        } else {\n          // The span should already be added via the first handler call (in the 'before' hook)\n          const span = this.$_sentrySpans[operation];\n          // The before hook did not start the tracking span, so the span was not added.\n          // This is probably because it happened before there is an active transaction\n          if (!span) return;\n          span.end();\n\n          finishRootSpan(this, timestampInSeconds(), options.timeout);\n        }\n      };\n    }\n  }\n\n  return mixins;\n};\n", "import { convertIntegrationFnToClass, defineIntegration, hasTracingEnabled } from '@sentry/core';\nimport type { Client, Integration, IntegrationClass, IntegrationFn } from '@sentry/types';\nimport { GLOBAL_OBJ, arrayify, consoleSandbox } from '@sentry/utils';\n\nimport { DEFAULT_HOOKS } from './constants';\nimport { attachErrorHandler } from './errorhandler';\nimport { createTracingMixins } from './tracing';\nimport type { Options, Vue, VueOptions } from './types';\n\nconst globalWithVue = GLOBAL_OBJ as typeof GLOBAL_OBJ & { Vue: Vue };\n\nconst DEFAULT_CONFIG: VueOptions = {\n  Vue: globalWithVue.Vue,\n  attachProps: true,\n  logErrors: true,\n  hooks: DEFAULT_HOOKS,\n  timeout: 2000,\n  trackComponents: false,\n};\n\nconst INTEGRATION_NAME = 'Vue';\n\nconst _vueIntegration = ((integrationOptions: Partial<VueOptions> = {}) => {\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    setup(client) {\n      _setupIntegration(client, integrationOptions);\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const vueIntegration = defineIntegration(_vueIntegration);\n\n/**\n * Initialize Vue error & performance tracking.\n *\n * @deprecated Use `vueIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const VueIntegration = convertIntegrationFnToClass(\n  INTEGRATION_NAME,\n  vueIntegration,\n) as IntegrationClass<Integration>;\n\nfunction _setupIntegration(client: Client, integrationOptions: Partial<VueOptions>): void {\n  const options: Options = { ...DEFAULT_CONFIG, ...client.getOptions(), ...integrationOptions };\n  if (!options.Vue && !options.app) {\n    consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.warn(\n        `[@sentry/vue]: Misconfigured SDK. Vue specific errors will not be captured.\nUpdate your \\`Sentry.init\\` call with an appropriate config option:\n\\`app\\` (Application Instance - Vue 3) or \\`Vue\\` (Vue Constructor - Vue 2).`,\n      );\n    });\n    return;\n  }\n\n  if (options.app) {\n    const apps = arrayify(options.app);\n    apps.forEach(app => vueInit(app, options));\n  } else if (options.Vue) {\n    vueInit(options.Vue, options);\n  }\n}\n\nconst vueInit = (app: Vue, options: Options): void => {\n  // Check app is not mounted yet - should be mounted _after_ init()!\n  // This is _somewhat_ private, but in the case that this doesn't exist we simply ignore it\n  // See: https://github.com/vuejs/core/blob/eb2a83283caa9de0a45881d860a3cbd9d0bdd279/packages/runtime-core/src/component.ts#L394\n  const appWithInstance = app as Vue & {\n    _instance?: {\n      isMounted?: boolean;\n    };\n  };\n\n  const isMounted = appWithInstance._instance && appWithInstance._instance.isMounted;\n  if (isMounted === true) {\n    consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.warn(\n        '[@sentry/vue]: Misconfigured SDK. Vue app is already mounted. Make sure to call `app.mount()` after `Sentry.init()`.',\n      );\n    });\n  }\n\n  attachErrorHandler(app, options);\n\n  if (hasTracingEnabled(options)) {\n    app.mixin(\n      createTracingMixins({\n        ...options,\n        ...options.tracingOptions,\n      }),\n    );\n  }\n};\n", "import { SDK_VERSION, getDefaultIntegrations, init as browserInit } from '@sentry/browser';\n\nimport { vueIntegration } from './integration';\nimport type { Options, TracingOptions } from './types';\n\n/**\n * Inits the Vue SDK\n */\nexport function init(\n  config: Partial<Omit<Options, 'tracingOptions'> & { tracingOptions: Partial<TracingOptions> }> = {},\n): void {\n  const options = {\n    _metadata: {\n      sdk: {\n        name: 'sentry.javascript.vue',\n        packages: [\n          {\n            name: 'npm:@sentry/vue',\n            version: SDK_VERSION,\n          },\n        ],\n        version: SDK_VERSION,\n      },\n    },\n    defaultIntegrations: [...getDefaultIntegrations(config), vueIntegration()],\n    ...config,\n  };\n\n  browserInit(options);\n}\n", "import { WINDOW, captureException } from '@sentry/browser';\nimport { SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, spanToJSON } from '@sentry/core';\nimport type { SpanAttributes, Transaction, TransactionContext, TransactionSource } from '@sentry/types';\n\nimport { getActiveTransaction } from './tracing';\n\ninterface VueRouterInstrumationOptions {\n  /**\n   * What to use for route labels.\n   * By default, we use route.name (if set) and else the path.\n   *\n   * Default: 'name'\n   */\n  routeLabel: 'name' | 'path';\n}\n\nexport type VueRouterInstrumentation = <T extends Transaction>(\n  startTransaction: (context: TransactionContext) => T | undefined,\n  startTransactionOnPageLoad?: boolean,\n  startTransactionOnLocationChange?: boolean,\n) => void;\n\n// The following type is an intersection of the Route type from VueRouter v2, v3, and v4.\n// This is not great, but kinda necessary to make it work with all versions at the same time.\nexport type Route = {\n  /** Unparameterized URL */\n  path: string;\n  /**\n   * Query params (keys map to null when there is no value associated, e.g. \"?foo\" and to an array when there are\n   * multiple query params that have the same key, e.g. \"?foo&foo=bar\")\n   */\n  query: Record<string, string | null | (string | null)[]>;\n  /** Route name (VueRouter provides a way to give routes individual names) */\n  name?: string | symbol | null | undefined;\n  /** Evaluated parameters */\n  params: Record<string, string | string[]>;\n  /** All the matched route objects as defined in VueRouter constructor */\n  matched: { path: string }[];\n};\n\ninterface VueRouter {\n  onError: (fn: (err: Error) => void) => void;\n  beforeEach: (fn: (to: Route, from: Route, next?: () => void) => void) => void;\n}\n\n/**\n * Creates routing instrumentation for Vue Router v2, v3 and v4\n *\n * You can optionally pass in an options object with the available option:\n * * `routeLabel`: Set this to `route` to opt-out of using `route.name` for transaction names.\n *\n * @param router The Vue Router instance that is used\n *\n * @deprecated Use `browserTracingIntegration()` from `@sentry/vue` instead - this includes the vue router instrumentation.\n */\nexport function vueRouterInstrumentation(\n  router: VueRouter,\n  options: Partial<VueRouterInstrumationOptions> = {},\n): VueRouterInstrumentation {\n  return (\n    startTransaction: (context: TransactionContext) => Transaction | undefined,\n    startTransactionOnPageLoad: boolean = true,\n    startTransactionOnLocationChange: boolean = true,\n  ) => {\n    // We have to start the pageload transaction as early as possible (before the router's `beforeEach` hook\n    // is called) to not miss child spans of the pageload.\n    // We check that window & window.location exists in order to not run this code in SSR environments.\n    if (startTransactionOnPageLoad && WINDOW && WINDOW.location) {\n      startTransaction({\n        name: WINDOW.location.pathname,\n        op: 'pageload',\n        attributes: {\n          [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.pageload.vue',\n          [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: 'url',\n        },\n      });\n    }\n\n    instrumentVueRouter(\n      router,\n      {\n        routeLabel: options.routeLabel || 'name',\n        instrumentNavigation: startTransactionOnLocationChange,\n        instrumentPageLoad: startTransactionOnPageLoad,\n      },\n      startTransaction,\n    );\n  };\n}\n\n/**\n * Instrument the Vue router to create navigation spans.\n */\nexport function instrumentVueRouter(\n  router: VueRouter,\n  options: {\n    routeLabel: 'name' | 'path';\n    instrumentPageLoad: boolean;\n    instrumentNavigation: boolean;\n  },\n  startNavigationSpanFn: (context: TransactionContext) => void,\n): void {\n  router.onError(error => captureException(error, { mechanism: { handled: false } }));\n\n  router.beforeEach((to, from, next) => {\n    // According to docs we could use `from === VueRouter.START_LOCATION` but I couldnt get it working for Vue 2\n    // https://router.vuejs.org/api/#router-start-location\n    // https://next.router.vuejs.org/api/#start-location\n\n    // from.name:\n    // - Vue 2: null\n    // - Vue 3: undefined\n    // hence only '==' instead of '===', because `undefined == null` evaluates to `true`\n    const isPageLoadNavigation = from.name == null && from.matched.length === 0;\n\n    const attributes: SpanAttributes = {\n      [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.navigation.vue',\n    };\n\n    for (const key of Object.keys(to.params)) {\n      attributes[`params.${key}`] = to.params[key];\n    }\n    for (const key of Object.keys(to.query)) {\n      const value = to.query[key];\n      if (value) {\n        attributes[`query.${key}`] = value;\n      }\n    }\n\n    // Determine a name for the routing transaction and where that name came from\n    let transactionName: string = to.path;\n    let transactionSource: TransactionSource = 'url';\n    if (to.name && options.routeLabel !== 'path') {\n      transactionName = to.name.toString();\n      transactionSource = 'custom';\n    } else if (to.matched[0] && to.matched[0].path) {\n      transactionName = to.matched[0].path;\n      transactionSource = 'route';\n    }\n\n    if (options.instrumentPageLoad && isPageLoadNavigation) {\n      // eslint-disable-next-line deprecation/deprecation\n      const pageloadTransaction = getActiveTransaction();\n      if (pageloadTransaction) {\n        const existingAttributes = spanToJSON(pageloadTransaction).data || {};\n        if (existingAttributes[SEMANTIC_ATTRIBUTE_SENTRY_SOURCE] !== 'custom') {\n          pageloadTransaction.updateName(transactionName);\n          pageloadTransaction.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, transactionSource);\n        }\n        // Set router attributes on the existing pageload transaction\n        // This will  the origin, and add params & query attributes\n        pageloadTransaction.setAttributes({\n          ...attributes,\n          [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.pageload.vue',\n        });\n      }\n    }\n\n    if (options.instrumentNavigation && !isPageLoadNavigation) {\n      attributes[SEMANTIC_ATTRIBUTE_SENTRY_SOURCE] = transactionSource;\n      startNavigationSpanFn({\n        name: transactionName,\n        op: 'navigation',\n        attributes,\n      });\n    }\n\n    // Vue Router 4 no longer exposes the `next` function, so we need to\n    // check if it's available before calling it.\n    // `next` needs to be called in Vue Router 3 so that the hook is resolved.\n    if (next) {\n      next();\n    }\n  });\n}\n", "import {\n  browserTracingIntegration as originalBrowserTracingIntegration,\n  startBrowserTracingNavigationSpan,\n} from '@sentry/browser';\nimport type { Integration, StartSpanOptions } from '@sentry/types';\nimport { instrumentVueRouter } from './router';\n\n// The following type is an intersection of the Route type from VueRouter v2, v3, and v4.\n// This is not great, but kinda necessary to make it work with all versions at the same time.\nexport type Route = {\n  /** Unparameterized URL */\n  path: string;\n  /**\n   * Query params (keys map to null when there is no value associated, e.g. \"?foo\" and to an array when there are\n   * multiple query params that have the same key, e.g. \"?foo&foo=bar\")\n   */\n  query: Record<string, string | null | (string | null)[]>;\n  /** Route name (VueRouter provides a way to give routes individual names) */\n  name?: string | symbol | null | undefined;\n  /** Evaluated parameters */\n  params: Record<string, string | string[]>;\n  /** All the matched route objects as defined in VueRouter constructor */\n  matched: { path: string }[];\n};\n\ninterface VueRouter {\n  onError: (fn: (err: Error) => void) => void;\n  beforeEach: (fn: (to: Route, from: Route, next?: () => void) => void) => void;\n}\n\ntype VueBrowserTracingIntegrationOptions = Parameters<typeof originalBrowserTracingIntegration>[0] & {\n  /**\n   * If a router is specified, navigation spans will be created based on the router.\n   */\n  router?: VueRouter;\n\n  /**\n   * What to use for route labels.\n   * By default, we use route.name (if set) and else the path.\n   *\n   * Default: 'name'\n   */\n  routeLabel?: 'name' | 'path';\n};\n\n/**\n * A custom BrowserTracing integration for Vue.\n */\nexport function browserTracingIntegration(options: VueBrowserTracingIntegrationOptions = {}): Integration {\n  // If router is not passed, we just use the normal implementation\n  if (!options.router) {\n    return originalBrowserTracingIntegration(options);\n  }\n\n  const integration = originalBrowserTracingIntegration({\n    ...options,\n    instrumentNavigation: false,\n  });\n\n  const { router, instrumentNavigation = true, instrumentPageLoad = true, routeLabel = 'name' } = options;\n\n  return {\n    ...integration,\n    afterAllSetup(client) {\n      integration.afterAllSetup(client);\n\n      const startNavigationSpan = (options: StartSpanOptions): void => {\n        startBrowserTracingNavigationSpan(client, options);\n      };\n\n      instrumentVueRouter(router, { routeLabel, instrumentNavigation, instrumentPageLoad }, startNavigationSpan);\n    },\n  };\n}\n"],
  "mappings": "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A,KAAAE;MACA,QAAAG;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACA;AACA,eAAA,UAAA,MAAA,KAAA,EAAA,UAAA,GAAA;AACA,YAAA,sBAAA,oBAAA,QAAA,aAAA;AACA,UAAA,qBAAA;AACA,uBAAA,WAAA,KAAA,mBAAA;MACA;IACA;AACA,QAAAJ,YAAA,CAAA,KAAA,EAAA,YAAA;AACA,iBAAA,UAAA,MAAA,KAAA,EAAA,WAAA,UAAA,GAAA;AACA,cAAA,sBAAA,oBAAA,QAAA,aAAA;AACA,YAAA,qBAAA;AACA,4BAAA,EAAA,UAAA,MACA,oBAAA,WAAA;AACA,yBAAA,WAAA,KAAA,mBAAA;QACA;MACA;IACA;EACA;AACA,MAAA,EAAA,cACA,aAAA,EAAA,UAAA,KACA,kBAAA,EAAA,UAAA,GAAA;AACA,mBAAA,WAAA;EACA;AACA,MAAA,eAAA,SAAAD,WAAA,WACA,eAAA,YAAA,UAAA;AACA,qBAAA,GAAA,MAAA;AACA,YAAA,YAAA,EAAA;AACA,UAAA,aAAA,cAAA;AACA,cAAA,uBAAA,oBAAA,WAAA;UACA,KAAA;UACA,QAAAK;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA,WAAA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;QACA,CAAA;AACA,YAAA,sBAAA;AACA,uBAAA,GAAA,oBAAA;QACA;MACA;IACA,GAAA,iBAAA;EACA;AACA,MAAA,eAAA,SAAAL,WAAA,WACA,eAAA,YAAA,UACA,eAAA,WAAA,QAAA,cAAA;AACA,yBAAA,GAAA,MAAA;AACA,UAAA,kBAAA;AACA,cAAA,qBAAA,oBAAA,GAAA;UACA,KAAAE;UACA,QAAAG;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA,WAAA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA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",
  "names": ["e", "e", "keys", "document", "e", "e", "e", "INTEGRATION_NAME", "INTEGRATION_NAME", "e", "e2", "INTEGRATION_NAME", "INTEGRATION_NAME", "options", "INTEGRATION_NAME", "e", "wrap", "internalWrap", "WINDOW", "_nullishCoalesce", "_optionalChain", "NodeType", "isElement", "doc", "chars", "e", "mirror", "throttle", "document", "parentId", "r", "handlers", "el", "text", "keys", "errorHandler", "takeFullSnapshot", "init", "node", "DEBUG_BUILD", "getWorkerURL", "isErrorEvent", "request", "response", "flush", "err", "NodeType", "elementClassMatchesRegex", "distanceToMatch", "createMatchPredicate", "DEPARTED_MIRROR_ACCESS_WARNING", "_mirror", "hookSetter", "patch", "isBlocked", "cachedRequestAnimationFrameImplementation", "getRequestAnimationFrameImplementation", "document", "e", "onRequestAnimationFrame", "errorHandler", "registerErrorHandler", "callbackWrapper", "handlers", "mirror", "r", "t", "canvasElement", "type", "INTEGRATION_NAME", "options", "WINDOW", "e", "DEBUG_BUILD", "doc", "XMLNS", "e2", "close", "store", "keys", "createTransport", "e", "INTEGRATION_NAME", "transaction", "CoreIntegrations", "BrowserIntegrations", "vm", "errorHandler", "trace", "DEBUG_BUILD", "getActiveTransaction", "DEBUG_BUILD", "INTEGRATION_NAME", "init", "browserInit", "startTransaction", "getActiveTransaction", "browserTracingIntegration", "originalBrowserTracingIntegration", "options"]
}
